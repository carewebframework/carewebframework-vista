KIDS Distribution saved on Mar 12, 2014@19:23:15
CIA RPC BROKER 1.1
**KIDS**:CIA RPC BROKER 1.1^

**INSTALL NAME**
CIA RPC BROKER 1.1
"BLD",4495,0)
CIA RPC BROKER 1.1^CIA NETWORK COMPONENTS^0^3140312^n
"BLD",4495,1,0)
^9.61A^1^1^3101115^^^^
"BLD",4495,1,1,0)
CIA's remote procedure call broker.
"BLD",4495,4,0)
^9.64PA^19941.24^7
"BLD",4495,4,8989.51,0)
8989.51
"BLD",4495,4,8989.51,222)
n^n^f^^y^^y^r^n
"BLD",4495,4,8989.51,224)
I $$SCRN^CIAVINX(Y,2)
"BLD",4495,4,8989.52,0)
8989.52
"BLD",4495,4,8989.52,222)
n^n^f^^y^^y^r^n
"BLD",4495,4,8989.52,224)
I $$SCRN^CIAVINX(Y,3)
"BLD",4495,4,19941.2,0)
19941.2
"BLD",4495,4,19941.2,222)
y^y^f^^^^n
"BLD",4495,4,19941.21,0)
19941.21
"BLD",4495,4,19941.21,222)
y^y^f^^^^n
"BLD",4495,4,19941.22,0)
19941.22
"BLD",4495,4,19941.22,222)
y^y^f^^n^^y^o^n
"BLD",4495,4,19941.23,0)
19941.23
"BLD",4495,4,19941.23,222)
y^y^f^^^^n
"BLD",4495,4,19941.24,0)
19941.24
"BLD",4495,4,19941.24,222)
y^y^f^^^^n
"BLD",4495,4,"B",8989.51,8989.51)

"BLD",4495,4,"B",8989.52,8989.52)

"BLD",4495,4,"B",19941.2,19941.2)

"BLD",4495,4,"B",19941.21,19941.21)

"BLD",4495,4,"B",19941.22,19941.22)

"BLD",4495,4,"B",19941.23,19941.23)

"BLD",4495,4,"B",19941.24,19941.24)

"BLD",4495,6.3)
4
"BLD",4495,"INI")
PRE^CIANBINI
"BLD",4495,"INIT")
POST^CIANBINI
"BLD",4495,"KRN",0)
^9.67PA^9002226^21
"BLD",4495,"KRN",.4,0)
.4
"BLD",4495,"KRN",.4,"NM",0)
^9.68A^^
"BLD",4495,"KRN",.401,0)
.401
"BLD",4495,"KRN",.402,0)
.402
"BLD",4495,"KRN",.403,0)
.403
"BLD",4495,"KRN",.5,0)
.5
"BLD",4495,"KRN",.84,0)
.84
"BLD",4495,"KRN",.84,"NM",0)
^9.68A^29^29
"BLD",4495,"KRN",.84,"NM",1,0)
199412001^^0
"BLD",4495,"KRN",.84,"NM",2,0)
199412002^^0
"BLD",4495,"KRN",.84,"NM",3,0)
199412003^^0
"BLD",4495,"KRN",.84,"NM",4,0)
199412004^^0
"BLD",4495,"KRN",.84,"NM",5,0)
199412005^^0
"BLD",4495,"KRN",.84,"NM",6,0)
199412006^^0
"BLD",4495,"KRN",.84,"NM",7,0)
199412007^^0
"BLD",4495,"KRN",.84,"NM",8,0)
199412500^^0
"BLD",4495,"KRN",.84,"NM",9,0)
199412501^^0
"BLD",4495,"KRN",.84,"NM",10,0)
199412008^^0
"BLD",4495,"KRN",.84,"NM",11,0)
199412009^^0
"BLD",4495,"KRN",.84,"NM",12,0)
199412010^^0
"BLD",4495,"KRN",.84,"NM",13,0)
199412011^^0
"BLD",4495,"KRN",.84,"NM",14,0)
199412012^^0
"BLD",4495,"KRN",.84,"NM",15,0)
199412013^^0
"BLD",4495,"KRN",.84,"NM",16,0)
199412014^^0
"BLD",4495,"KRN",.84,"NM",17,0)
199412015^^0
"BLD",4495,"KRN",.84,"NM",18,0)
199412016^^0
"BLD",4495,"KRN",.84,"NM",19,0)
199412017^^0
"BLD",4495,"KRN",.84,"NM",20,0)
199412018^^0
"BLD",4495,"KRN",.84,"NM",21,0)
199412019^^0
"BLD",4495,"KRN",.84,"NM",22,0)
199412020^^0
"BLD",4495,"KRN",.84,"NM",23,0)
199412021^^0
"BLD",4495,"KRN",.84,"NM",24,0)
199412022^^0
"BLD",4495,"KRN",.84,"NM",25,0)
199412023^^0
"BLD",4495,"KRN",.84,"NM",26,0)
199412024^^0
"BLD",4495,"KRN",.84,"NM",27,0)
199412025^^0
"BLD",4495,"KRN",.84,"NM",28,0)
199412026^^0
"BLD",4495,"KRN",.84,"NM",29,0)
199412027^^0
"BLD",4495,"KRN",.84,"NM","B",199412001,1)

"BLD",4495,"KRN",.84,"NM","B",199412002,2)

"BLD",4495,"KRN",.84,"NM","B",199412003,3)

"BLD",4495,"KRN",.84,"NM","B",199412004,4)

"BLD",4495,"KRN",.84,"NM","B",199412005,5)

"BLD",4495,"KRN",.84,"NM","B",199412006,6)

"BLD",4495,"KRN",.84,"NM","B",199412007,7)

"BLD",4495,"KRN",.84,"NM","B",199412008,10)

"BLD",4495,"KRN",.84,"NM","B",199412009,11)

"BLD",4495,"KRN",.84,"NM","B",199412010,12)

"BLD",4495,"KRN",.84,"NM","B",199412011,13)

"BLD",4495,"KRN",.84,"NM","B",199412012,14)

"BLD",4495,"KRN",.84,"NM","B",199412013,15)

"BLD",4495,"KRN",.84,"NM","B",199412014,16)

"BLD",4495,"KRN",.84,"NM","B",199412015,17)

"BLD",4495,"KRN",.84,"NM","B",199412016,18)

"BLD",4495,"KRN",.84,"NM","B",199412017,19)

"BLD",4495,"KRN",.84,"NM","B",199412018,20)

"BLD",4495,"KRN",.84,"NM","B",199412019,21)

"BLD",4495,"KRN",.84,"NM","B",199412020,22)

"BLD",4495,"KRN",.84,"NM","B",199412021,23)

"BLD",4495,"KRN",.84,"NM","B",199412022,24)

"BLD",4495,"KRN",.84,"NM","B",199412023,25)

"BLD",4495,"KRN",.84,"NM","B",199412024,26)

"BLD",4495,"KRN",.84,"NM","B",199412025,27)

"BLD",4495,"KRN",.84,"NM","B",199412026,28)

"BLD",4495,"KRN",.84,"NM","B",199412027,29)

"BLD",4495,"KRN",.84,"NM","B",199412500,8)

"BLD",4495,"KRN",.84,"NM","B",199412501,9)

"BLD",4495,"KRN",3.6,0)
3.6
"BLD",4495,"KRN",3.8,0)
3.8
"BLD",4495,"KRN",9.2,0)
9.2
"BLD",4495,"KRN",9.8,0)
9.8
"BLD",4495,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",4495,"KRN",9.8,"NM",1,0)
CIANBACT^^0^B32294268
"BLD",4495,"KRN",9.8,"NM",2,0)
CIANBASY^^0^B5533083
"BLD",4495,"KRN",9.8,"NM",3,0)
CIANBEVT^^0^B59877150
"BLD",4495,"KRN",9.8,"NM",4,0)
CIANBLIS^^0^B58819275
"BLD",4495,"KRN",9.8,"NM",5,0)
CIANBRPC^^0^B60754770
"BLD",4495,"KRN",9.8,"NM",6,0)
CIANBUTL^^0^B38343690
"BLD",4495,"KRN",9.8,"NM",7,0)
CIANBLOG^^0^B10435539
"BLD",4495,"KRN",9.8,"NM",8,0)
CIANBINI^^0^B15306499
"BLD",4495,"KRN",9.8,"NM","B","CIANBACT",1)

"BLD",4495,"KRN",9.8,"NM","B","CIANBASY",2)

"BLD",4495,"KRN",9.8,"NM","B","CIANBEVT",3)

"BLD",4495,"KRN",9.8,"NM","B","CIANBINI",8)

"BLD",4495,"KRN",9.8,"NM","B","CIANBLIS",4)

"BLD",4495,"KRN",9.8,"NM","B","CIANBLOG",7)

"BLD",4495,"KRN",9.8,"NM","B","CIANBRPC",5)

"BLD",4495,"KRN",9.8,"NM","B","CIANBUTL",6)

"BLD",4495,"KRN",19,0)
19
"BLD",4495,"KRN",19,"NM",0)
^9.68A^8^7
"BLD",4495,"KRN",19,"NM",1,0)
CIANB STARTALL^^0
"BLD",4495,"KRN",19,"NM",2,0)
CIANB STOPALL^^0
"BLD",4495,"KRN",19,"NM",3,0)
CIANB MAIN MENU^^0
"BLD",4495,"KRN",19,"NM",5,0)
CIANB PURGE EVENT LOG^^0
"BLD",4495,"KRN",19,"NM",6,0)
CIANB NIGHTLY TASK^^0
"BLD",4495,"KRN",19,"NM",7,0)
CIANB SITE PARAMETERS^^0
"BLD",4495,"KRN",19,"NM",8,0)
CIANB REGISTERED LISTENERS^^0
"BLD",4495,"KRN",19,"NM","B","CIANB MAIN MENU",3)

"BLD",4495,"KRN",19,"NM","B","CIANB NIGHTLY TASK",6)

"BLD",4495,"KRN",19,"NM","B","CIANB PURGE EVENT LOG",5)

"BLD",4495,"KRN",19,"NM","B","CIANB REGISTERED LISTENERS",8)

"BLD",4495,"KRN",19,"NM","B","CIANB SITE PARAMETERS",7)

"BLD",4495,"KRN",19,"NM","B","CIANB STARTALL",1)

"BLD",4495,"KRN",19,"NM","B","CIANB STOPALL",2)

"BLD",4495,"KRN",19.1,0)
19.1
"BLD",4495,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",4495,"KRN",101,0)
101
"BLD",4495,"KRN",101,"NM",0)
^9.68A^^0
"BLD",4495,"KRN",409.61,0)
409.61
"BLD",4495,"KRN",771,0)
771
"BLD",4495,"KRN",779.2,0)
779.2
"BLD",4495,"KRN",870,0)
870
"BLD",4495,"KRN",8989.51,0)
8989.51
"BLD",4495,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",4495,"KRN",8989.52,0)
8989.52
"BLD",4495,"KRN",8994,0)
8994
"BLD",4495,"KRN",8994,"NM",0)
^9.68A^18^16
"BLD",4495,"KRN",8994,"NM",1,0)
CIANBRPC AUTH^^0
"BLD",4495,"KRN",8994,"NM",3,0)
CIANBRPC CVC^^0
"BLD",4495,"KRN",8994,"NM",4,0)
CIANBRPC DIVGET^^0
"BLD",4495,"KRN",8994,"NM",5,0)
CIANBRPC DIVSET^^0
"BLD",4495,"KRN",8994,"NM",7,0)
CIANBRPC DIALOG^^0
"BLD",4495,"KRN",8994,"NM",8,0)
CIANBRPC GETRPCS^^0
"BLD",4495,"KRN",8994,"NM",9,0)
CIANBEVT BCAST^^0
"BLD",4495,"KRN",8994,"NM",10,0)
CIANBEVT GETSUBSC^^0
"BLD",4495,"KRN",8994,"NM",11,0)
CIANBRPC SETVAR^^0
"BLD",4495,"KRN",8994,"NM",12,0)
CIANBRPC GETSESSN^^0
"BLD",4495,"KRN",8994,"NM",13,0)
CIANBASY STOP^^0
"BLD",4495,"KRN",8994,"NM",14,0)
CIANBRPC GETVAR^^0
"BLD",4495,"KRN",8994,"NM",15,0)
CIANBRPC GETINFO^^0
"BLD",4495,"KRN",8994,"NM",16,0)
CIANBRPC CANRUN^^0
"BLD",4495,"KRN",8994,"NM",17,0)
CIANBRPC LOCK^^0
"BLD",4495,"KRN",8994,"NM",18,0)
CIANBRPC LOCKRES^^0
"BLD",4495,"KRN",8994,"NM","B","CIANBASY STOP",13)

"BLD",4495,"KRN",8994,"NM","B","CIANBEVT BCAST",9)

"BLD",4495,"KRN",8994,"NM","B","CIANBEVT GETSUBSC",10)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC AUTH",1)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC CANRUN",16)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC CVC",3)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC DIALOG",7)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC DIVGET",4)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC DIVSET",5)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC GETINFO",15)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC GETRPCS",8)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC GETSESSN",12)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC GETVAR",14)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC LOCK",17)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC LOCKRES",18)

"BLD",4495,"KRN",8994,"NM","B","CIANBRPC SETVAR",11)

"BLD",4495,"KRN",9002226,0)
9002226
"BLD",4495,"KRN","B",.4,.4)

"BLD",4495,"KRN","B",.401,.401)

"BLD",4495,"KRN","B",.402,.402)

"BLD",4495,"KRN","B",.403,.403)

"BLD",4495,"KRN","B",.5,.5)

"BLD",4495,"KRN","B",.84,.84)

"BLD",4495,"KRN","B",3.6,3.6)

"BLD",4495,"KRN","B",3.8,3.8)

"BLD",4495,"KRN","B",9.2,9.2)

"BLD",4495,"KRN","B",9.8,9.8)

"BLD",4495,"KRN","B",19,19)

"BLD",4495,"KRN","B",19.1,19.1)

"BLD",4495,"KRN","B",101,101)

"BLD",4495,"KRN","B",409.61,409.61)

"BLD",4495,"KRN","B",771,771)

"BLD",4495,"KRN","B",779.2,779.2)

"BLD",4495,"KRN","B",870,870)

"BLD",4495,"KRN","B",8989.51,8989.51)

"BLD",4495,"KRN","B",8989.52,8989.52)

"BLD",4495,"KRN","B",8994,8994)

"BLD",4495,"KRN","B",9002226,9002226)

"BLD",4495,"PRE")
CIANBINI
"BLD",4495,"PRET")
GBL^CIAVINX
"BLD",4495,"QUES",0)
^9.62^^
"BLD",4495,"REQB",0)
^9.611^1^1
"BLD",4495,"REQB",1,0)
CIA NETWORK COMPONENTS 1.1^1
"BLD",4495,"REQB","B","CIA NETWORK COMPONENTS 1.1",1)

"DATA",8989.51,249,0)
CIANB ACTIVITY LOGGING^Enable logging of session activities^1^Application^Enable activity logging
"DATA",8989.51,249,1)
Y
"DATA",8989.51,249,6)
P^19
"DATA",8989.51,249,20,0)
^8989.512^3^3^3080104^^
"DATA",8989.51,249,20,1,0)
If activated, results in logging session activities such as remote procedure 
"DATA",8989.51,249,20,2,0)
calls and events to the CIA ACTIVITY LOG file.  Activating this feature may 
"DATA",8989.51,249,20,3,0)
have significant adverse impact on application performance and disk usage. 
"DATA",8989.51,249,30,0)
^8989.513I^3^3
"DATA",8989.51,249,30,1,0)
400^4.2
"DATA",8989.51,249,30,2,0)
200^4
"DATA",8989.51,249,30,3,0)
100^200
"DATA",8989.51,260,0)
CIANB ACTIVITY RETENTION^Retention period for logged activities.^^^Retention period (days)
"DATA",8989.51,260,1)
N^1:9999999^Enter retention period in days for logged activities.
"DATA",8989.51,260,20,0)
^8989.512^1^1^3080104^
"DATA",8989.51,260,20,1,0)
This controls how long entries in the CIA ACTIVITY LOG file are retained.
"DATA",8989.51,260,30,0)
^8989.513I^1^1
"DATA",8989.51,260,30,1,0)
400^4.2
"DATA",8989.51,315,0)
CIANB AUTHENTICATION^Authentication method^1^UCI^Authentication method
"DATA",8989.51,315,1)
S^0:Normal;1:Client Cached;2:Server Cached
"DATA",8989.51,315,6)
F
"DATA",8989.51,315,20,0)
^8989.512^5^5^3061024^^^^
"DATA",8989.51,315,20,1,0)
Dictates authentication method used.
"DATA",8989.51,315,20,2,0)

"DATA",8989.51,315,20,3,0)
Normal        - No password caching is used.
"DATA",8989.51,315,20,4,0)
Client Cached - Username and password are encrypted and cached in NT user profile.
"DATA",8989.51,315,20,5,0)
Server Cached - User SID (security identifier) cached on server. 
"DATA",8989.51,315,30,0)
^8989.513I^1^1
"DATA",8989.51,315,30,1,0)
100^4.2
"DATA",8989.51,316,0)
CIANB POLLING INTERVAL^Host polling interval^0^Interval^Host Polling Interval
"DATA",8989.51,316,1)
N^^Number of seconds (1-60) between polls.
"DATA",8989.51,316,2)
S Y=Y\1 S:Y<1 Y=1 S:Y>60 Y=60
"DATA",8989.51,316,20,0)
^8989.512^4^4^3070607^^
"DATA",8989.51,316,20,1,0)
This is the interval in seconds that the client will poll the server for 
"DATA",8989.51,316,20,2,0)
signaled events or asynchronous remote procedure calls.  
"DATA",8989.51,316,20,3,0)

"DATA",8989.51,316,20,4,0)
Range should be 1-60, inclusive.  Typical values are 3-5 seconds.
"DATA",8989.51,316,30,0)
^8989.513I^1^1
"DATA",8989.51,316,30,1,0)
100^4.2
"DATA",8989.51,317,0)
CIANB RESOURCE DEVICE COUNT^Maximum number of resource devices^0^Count^Resource Device Count
"DATA",8989.51,317,1)
N^^The maximum number (1-20) of resource devices that may be created.
"DATA",8989.51,317,2)
S Y=Y\1 S:Y<1 Y=1 S:Y>20 Y=20
"DATA",8989.51,317,20,0)
^8989.512^4^4^3061024^
"DATA",8989.51,317,20,1,0)
This is the maximum number of resource devices that can be used by the package.
"DATA",8989.51,317,20,2,0)
Must be between 1 and 20, inclusive.  Higher values will increase server load,
"DATA",8989.51,317,20,3,0)
but improve application response to asynchronous remote procedure calls and 
"DATA",8989.51,317,20,4,0)
host-signalled events
"DATA",8989.51,317,30,0)
^8989.513I^1^1
"DATA",8989.51,317,30,1,0)
100^4.2
"DATA",8989.51,318,0)
CIANB RESOURCE DEVICE SLOTS^Number of resource slots to allocate^0^Slots^Resource Device Slots
"DATA",8989.51,318,1)
N^^Maximum number (1-20) of slots per resource device.
"DATA",8989.51,318,2)
S Y=Y\1 S:Y<1 Y=1 S:Y>20 Y=20 D SETSLOTS^CIANBUTL(Y)
"DATA",8989.51,318,20,0)
^8989.512^4^4^3061024^
"DATA",8989.51,318,20,1,0)
This is the maximum number of slots that will be allocated to resource devices
"DATA",8989.51,318,20,2,0)
used by the package. Must be between 1 and 20, inclusive.  Higher values will 
"DATA",8989.51,318,20,3,0)
increase server load, but improve application performance for asynchronous 
"DATA",8989.51,318,20,4,0)
remote procedure calls.
"DATA",8989.51,318,30,0)
^8989.513I^1^1
"DATA",8989.51,318,30,1,0)
100^4.2
"DATA",8989.52,13,0)
CIANB SITE PARAMETERS^CIA RPC Broker Site Parameters^4.2
"DATA",8989.52,13,10,0)
^8989.521IA^7^4
"DATA",8989.52,13,10,3,0)
10.1^316
"DATA",8989.52,13,10,5,0)
20.1^317
"DATA",8989.52,13,10,6,0)
20.2^318
"DATA",8989.52,13,10,7,0)
30.1^315
"DATA",19941.22,1,0)
CAREWEB^9300^^
"FIA",8989.51)
PARAMETER DEFINITION
"FIA",8989.51,0)
^XTV(8989.51,
"FIA",8989.51,0,0)
8989.51I
"FIA",8989.51,0,1)
n^n^f^^y^^y^r^n
"FIA",8989.51,0,10)

"FIA",8989.51,0,11)
I $$SCRN^CIAVINX(Y,2)
"FIA",8989.51,0,"RLRO")

"FIA",8989.51,0,"VR")
1.1^CIA RPC BROKER
"FIA",8989.51,8989.51)
0
"FIA",8989.51,8989.512)
0
"FIA",8989.51,8989.513)
0
"FIA",8989.51,8989.514)
0
"FIA",8989.52)
PARAMETER TEMPLATE
"FIA",8989.52,0)
^XTV(8989.52,
"FIA",8989.52,0,0)
8989.52I
"FIA",8989.52,0,1)
n^n^f^^y^^y^r^n
"FIA",8989.52,0,10)

"FIA",8989.52,0,11)
I $$SCRN^CIAVINX(Y,3)
"FIA",8989.52,0,"RLRO")

"FIA",8989.52,0,"VR")
1.1^CIA RPC BROKER
"FIA",8989.52,8989.52)
0
"FIA",8989.52,8989.521)
0
"FIA",19941.2)
CIA AUTHENTICATION
"FIA",19941.2,0)
^CIANB(19941.2,
"FIA",19941.2,0,0)
19941.2AI
"FIA",19941.2,0,1)
y^y^f^^^^n
"FIA",19941.2,0,10)

"FIA",19941.2,0,11)

"FIA",19941.2,0,"RLRO")

"FIA",19941.2,0,"VR")
1.1^CIA RPC BROKER
"FIA",19941.2,19941.2)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
y^y^f^^^^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)

"FIA",19941.21,0,"RLRO")

"FIA",19941.21,0,"VR")
1.1^CIA RPC BROKER
"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"FIA",19941.22)
CIA LISTENER
"FIA",19941.22,0)
^CIANB(19941.22,
"FIA",19941.22,0,0)
19941.22
"FIA",19941.22,0,1)
y^y^f^^n^^y^o^n
"FIA",19941.22,0,10)

"FIA",19941.22,0,11)

"FIA",19941.22,0,"RLRO")

"FIA",19941.22,0,"VR")
1.1^CIA RPC BROKER
"FIA",19941.22,19941.22)
0
"FIA",19941.23)
CIA EVENT LOG
"FIA",19941.23,0)
^CIANB(19941.23,
"FIA",19941.23,0,0)
19941.23DI
"FIA",19941.23,0,1)
y^y^f^^^^n
"FIA",19941.23,0,10)

"FIA",19941.23,0,11)

"FIA",19941.23,0,"RLRO")

"FIA",19941.23,0,"VR")
1.1^CIA RPC BROKER
"FIA",19941.23,19941.23)
0
"FIA",19941.23,19941.232)
0
"FIA",19941.24)
CIA ACTIVITY LOG
"FIA",19941.24,0)
^CIANB(19941.24,
"FIA",19941.24,0,0)
19941.24
"FIA",19941.24,0,1)
y^y^f^^^^n
"FIA",19941.24,0,10)

"FIA",19941.24,0,11)

"FIA",19941.24,0,"RLRO")

"FIA",19941.24,0,"VR")
1.1^CIA RPC BROKER
"FIA",19941.24,19941.24)
0
"FIA",19941.24,19941.241)
0
"FIA",19941.24,19941.242)
0
"FRV1",8989.52,"13,0",3)
DOMAIN
"FRV1",8989.52,"13,0",3,"F")
;DIC(
"FRV1",8989.52,"13,10,3,0",2)
CIANB POLLING INTERVAL
"FRV1",8989.52,"13,10,3,0",2,"F")
;XTV(8989.51,
"FRV1",8989.52,"13,10,5,0",2)
CIANB RESOURCE DEVICE COUNT
"FRV1",8989.52,"13,10,5,0",2,"F")
;XTV(8989.51,
"FRV1",8989.52,"13,10,6,0",2)
CIANB RESOURCE DEVICE SLOTS
"FRV1",8989.52,"13,10,6,0",2,"F")
;XTV(8989.51,
"FRV1",8989.52,"13,10,7,0",2)
CIANB AUTHENTICATION
"FRV1",8989.52,"13,10,7,0",2,"F")
;XTV(8989.51,
"INI")
PRE^CIANBINI
"INIT")
POST^CIANBINI
"KRN",.84,199412001,-1)
0^1
"KRN",.84,199412001,0)
199412001^1^y^CIA NETWORK COMPONENTS^Server error
"KRN",.84,199412001,2,0)
^^5^5^3021028.221459
"KRN",.84,199412001,2,1,0)
The server has reported the following error:
"KRN",.84,199412001,2,2,0)

"KRN",.84,199412001,2,3,0)
|1|
"KRN",.84,199412001,2,4,0)

"KRN",.84,199412001,2,5,0)
A detailed log of the error has been created.
"KRN",.84,199412001,3,0)
^.845^1^1
"KRN",.84,199412001,3,1,0)
1^M error text
"KRN",.84,199412002,-1)
0^2
"KRN",.84,199412002,0)
199412002^1^y^CIA NETWORK COMPONENTS^Unknown context
"KRN",.84,199412002,2,0)
^^1^1^3021016.135912
"KRN",.84,199412002,2,1,0)
The specified RPC context (|1|) could not be found.
"KRN",.84,199412002,3,0)
^.845^1^1
"KRN",.84,199412002,3,1,0)
1^Context name
"KRN",.84,199412003,-1)
0^3
"KRN",.84,199412003,0)
199412003^1^y^CIA NETWORK COMPONENTS^Unknown remote procedure
"KRN",.84,199412003,2,0)
^.844^1^1^3021016.141847
"KRN",.84,199412003,2,1,0)
Unknown remote procedure: |1|
"KRN",.84,199412003,3,0)
^.845^1^1
"KRN",.84,199412003,3,1,0)
1^Remote procedure name
"KRN",.84,199412004,-1)
0^4
"KRN",.84,199412004,0)
199412004^1^y^CIA NETWORK COMPONENTS^Access denied
"KRN",.84,199412004,2,0)
^^1^1^3021016.142047
"KRN",.84,199412004,2,1,0)
Access denied for remote procedure: |1|
"KRN",.84,199412004,3,0)
^.845^1^1
"KRN",.84,199412004,3,1,0)
1^Remote procedure name
"KRN",.84,199412005,-1)
0^5
"KRN",.84,199412005,0)
199412005^1^y^CIA NETWORK COMPONENTS^Inactive remote procedure
"KRN",.84,199412005,2,0)
^.844^1^1^3021016^
"KRN",.84,199412005,2,1,0)
The requested remote procedure is inactive: |1|
"KRN",.84,199412005,3,0)
^.845^1^1
"KRN",.84,199412005,3,1,0)
1^Remote procedure name
"KRN",.84,199412006,-1)
0^6
"KRN",.84,199412006,0)
199412006^1^y^CIA NETWORK COMPONENTS^Invalid remote procedure definition
"KRN",.84,199412006,2,0)
^^1^1^3021016.142346
"KRN",.84,199412006,2,1,0)
The requested remote procedure is improperly defined: |1|
"KRN",.84,199412006,3,0)
^.845^1^1
"KRN",.84,199412006,3,1,0)
1^Remote procedure name
"KRN",.84,199412007,-1)
0^7
"KRN",.84,199412007,0)
199412007^1^y^CIA NETWORK COMPONENTS^Too many arguments
"KRN",.84,199412007,2,0)
^^2^2^3021016.154446
"KRN",.84,199412007,2,1,0)
The number of arguments (|2|) passed to the remote procedure
"KRN",.84,199412007,2,2,0)
|1| exceeds the maximum limit of |3|.
"KRN",.84,199412007,3,0)
^.845^3^3
"KRN",.84,199412007,3,1,0)
1^Remote procedure name
"KRN",.84,199412007,3,2,0)
2^Number of arguments
"KRN",.84,199412007,3,3,0)
3^Maximum number of arguments
"KRN",.84,199412008,-1)
0^10
"KRN",.84,199412008,0)
199412008^1^y^CIA NETWORK COMPONENTS^Async RPC Failed
"KRN",.84,199412008,2,0)
^.844^1^1^3021017^
"KRN",.84,199412008,2,1,0)
Failed to start task for asynchronous RPC: |1|
"KRN",.84,199412008,3,0)
^.845^1^1
"KRN",.84,199412008,3,1,0)
1^Remote procedure name
"KRN",.84,199412009,-1)
0^11
"KRN",.84,199412009,0)
199412009^1^y^CIA NETWORK COMPONENTS^Invalid Server Request
"KRN",.84,199412009,2,0)
^^1^1^3021018.233253
"KRN",.84,199412009,2,1,0)
The server rejected the requested action (|1|).
"KRN",.84,199412009,3,0)
^.845^1^1
"KRN",.84,199412009,3,1,0)
1^Action Code
"KRN",.84,199412010,-1)
0^12
"KRN",.84,199412010,0)
199412010^1^y^CIA NETWORK COMPONENTS^Too Many Users
"KRN",.84,199412010,2,0)
^^1^1^3021021.090207
"KRN",.84,199412010,2,1,0)
There are too many users (|1|) logged on at this time.  Please try again later.
"KRN",.84,199412010,3,0)
^.845^2^2
"KRN",.84,199412010,3,1,0)
1^Number of Active Users
"KRN",.84,199412010,3,2,0)
2^Maximum Active Users
"KRN",.84,199412011,-1)
0^13
"KRN",.84,199412011,0)
199412011^1^^CIA NETWORK COMPONENTS^Unknown Volume Set
"KRN",.84,199412011,2,0)
^^1^1^3021021.084612
"KRN",.84,199412011,2,1,0)
Cannot determine volume set for server child process.
"KRN",.84,199412012,-1)
0^14
"KRN",.84,199412012,0)
199412012^1^^CIA NETWORK COMPONENTS^Cannot Start Child Process
"KRN",.84,199412012,2,0)
^^1^1^3021021.090533
"KRN",.84,199412012,2,1,0)
Unable to start child process.
"KRN",.84,199412013,-1)
0^15
"KRN",.84,199412013,0)
199412013^1^y^CIA NETWORK COMPONENTS^Cannot Subscribe to Event
"KRN",.84,199412013,2,0)
^^1^1^3021021.160356
"KRN",.84,199412013,2,1,0)
You do not have the required key(s) to subscribe to the requested event: (|1|).
"KRN",.84,199412013,3,0)
^.845^1^1
"KRN",.84,199412013,3,1,0)
1^Event Name
"KRN",.84,199412014,-1)
0^16
"KRN",.84,199412014,0)
199412014^1^y^CIA NETWORK COMPONENTS^Unknown UCI
"KRN",.84,199412014,2,0)
^^1^1^3021028.121952
"KRN",.84,199412014,2,1,0)
Unknown UCI: |1|
"KRN",.84,199412014,3,0)
^.845^1^1
"KRN",.84,199412014,3,1,0)
1^UCI Name
"KRN",.84,199412015,-1)
0^17
"KRN",.84,199412015,0)
199412015^1^y^CIA NETWORK COMPONENTS^Unsupported OS
"KRN",.84,199412015,2,0)
^^1^1^3021030.121347
"KRN",.84,199412015,2,1,0)
Unsupported operating system: |1|.
"KRN",.84,199412015,3,0)
^.845^1^1
"KRN",.84,199412015,3,1,0)
1^Operating System Name
"KRN",.84,199412016,-1)
0^18
"KRN",.84,199412016,0)
199412016^1^y^CIA NETWORK COMPONENTS^Mode Not Supported
"KRN",.84,199412016,2,0)
^^1^1^3021030.122454
"KRN",.84,199412016,2,1,0)
Mode |2| not supported by operating system |1|.
"KRN",.84,199412016,3,0)
^.845^2^2
"KRN",.84,199412016,3,1,0)
1^Operating System Name
"KRN",.84,199412016,3,2,0)
2^Mode
"KRN",.84,199412017,-1)
0^19
"KRN",.84,199412017,0)
199412017^1^^CIA NETWORK COMPONENTS^Null Device Error
"KRN",.84,199412017,2,0)
^^1^1^3021030.122543
"KRN",.84,199412017,2,1,0)
The NULL device has not been properly setup.
"KRN",.84,199412018,-1)
0^20
"KRN",.84,199412018,0)
199412018^1^y^CIA NETWORK COMPONENTS^Unknown Application
"KRN",.84,199412018,2,0)
^^1^1^3021104.094347
"KRN",.84,199412018,2,1,0)
Unknown application: |1|
"KRN",.84,199412018,3,0)
^.845^1^1
"KRN",.84,199412018,3,1,0)
1^Application Name
"KRN",.84,199412019,-1)
0^21
"KRN",.84,199412019,0)
199412019^1^y^CIA NETWORK COMPONENTS^Logins Disabled
"KRN",.84,199412019,2,0)
^.844^1^1^3021203^
"KRN",.84,199412019,2,1,0)
Logins are disabled: |1|
"KRN",.84,199412019,3,0)
^.845^1^1
"KRN",.84,199412019,3,1,0)
1^Disable Message
"KRN",.84,199412020,-1)
0^22
"KRN",.84,199412020,0)
199412020^1^y^CIA NETWORK COMPONENTS^Invalid option type
"KRN",.84,199412020,2,0)
^.844^1^1^3031209^
"KRN",.84,199412020,2,1,0)
The option specified (|1|) was not of the expected type (|2|).
"KRN",.84,199412020,3,0)
^.845^2^2
"KRN",.84,199412020,3,1,0)
1^Option name
"KRN",.84,199412020,3,2,0)
2^Expected type
"KRN",.84,199412021,-1)
0^23
"KRN",.84,199412021,0)
199412021^1^y^CIA NETWORK COMPONENTS^Reverse key denies access
"KRN",.84,199412021,2,0)
^.844^1^1^3031209^^
"KRN",.84,199412021,2,1,0)
The |2| key prohibits access to the |1| option.
"KRN",.84,199412021,3,0)
^.845^2^2
"KRN",.84,199412021,3,1,0)
1^Option name
"KRN",.84,199412021,3,2,0)
2^Key name
"KRN",.84,199412022,-1)
0^24
"KRN",.84,199412022,0)
199412022^1^y^CIA NETWORK COMPONENTS^Access requires key
"KRN",.84,199412022,2,0)
^.844^1^1^3031209^
"KRN",.84,199412022,2,1,0)
Access to the |1| option requires the |2| key.
"KRN",.84,199412022,3,0)
^.845^2^2
"KRN",.84,199412022,3,1,0)
1^Option name
"KRN",.84,199412022,3,2,0)
2^Key name
"KRN",.84,199412023,-1)
0^25
"KRN",.84,199412023,0)
199412023^1^y^CIA NETWORK COMPONENTS^Access prohibited
"KRN",.84,199412023,2,0)
^.844^1^1^3031209^^
"KRN",.84,199412023,2,1,0)
Access to option |1| prohibited at this time.
"KRN",.84,199412023,3,0)
^.845^1^1
"KRN",.84,199412023,3,1,0)
1^Option name
"KRN",.84,199412024,-1)
0^26
"KRN",.84,199412024,0)
199412024^1^y^CIA NETWORK COMPONENTS^Prohibited UCI
"KRN",.84,199412024,2,0)
^.844^1^1^3031209^
"KRN",.84,199412024,2,1,0)
Logins prohibited on |1|.
"KRN",.84,199412024,3,0)
^.845^1^1
"KRN",.84,199412024,3,1,0)
1^UCI name
"KRN",.84,199412025,-1)
0^27
"KRN",.84,199412025,0)
199412025^1^y^CIA NETWORK COMPONENTS^Session context unavailable
"KRN",.84,199412025,2,0)
^^1^1^3031226.132723
"KRN",.84,199412025,2,1,0)
The reconnection attempt for session #|1| has failed.  The session context no longer exists.
"KRN",.84,199412025,3,0)
^.845^1^1
"KRN",.84,199412025,3,1,0)
1^Session ID
"KRN",.84,199412026,-1)
0^28
"KRN",.84,199412026,0)
199412026^1^y^CIA NETWORK COMPONENTS^Session context locked
"KRN",.84,199412026,2,0)
^^1^1^3031226.132737
"KRN",.84,199412026,2,1,0)
The reconnection attempt for session #|1| has failed.  The session context is in use. 
"KRN",.84,199412026,3,0)
^.845^1^1
"KRN",.84,199412026,3,1,0)
1^Session ID
"KRN",.84,199412027,-1)
0^29
"KRN",.84,199412027,0)
199412027^1^y^CIA NETWORK COMPONENTS^Session context invalid
"KRN",.84,199412027,2,0)
^^1^1^3031226.132749
"KRN",.84,199412027,2,1,0)
The reconnection attempt for session #|1| has failed.  The session was authenticated for a different user. 
"KRN",.84,199412027,3,0)
^.845^1^1
"KRN",.84,199412027,3,1,0)
1^Session ID
"KRN",.84,199412500,-1)
0^8
"KRN",.84,199412500,0)
199412500^3^^CIA NETWORK COMPONENTS^AV Help
"KRN",.84,199412500,2,0)
^^5^5^3021017.111201
"KRN",.84,199412500,2,1,0)
Enter 6-20 characters mixed alphanumeric.
"KRN",.84,199412500,2,2,0)

"KRN",.84,199412500,2,3,0)
For example,  12ABC44Z
"KRN",.84,199412500,2,4,0)

"KRN",.84,199412500,2,5,0)
Verify codes are not case sensitive.
"KRN",.84,199412501,-1)
0^9
"KRN",.84,199412501,0)
199412501^3^^CIA NETWORK COMPONENTS^Division Help
"KRN",.84,199412501,2,0)
^.844^4^4^3060307^
"KRN",.84,199412501,2,1,0)
Select a division from the list and click OK.
"KRN",.84,199412501,2,2,0)

"KRN",.84,199412501,2,3,0)
A division must be selected in order to continue with your signon.
"KRN",.84,199412501,2,4,0)
To abort your signon, click Cancel.
"KRN",19,10973,-1)
0^1
"KRN",19,10973,0)
CIANB STARTALL^Start All Registered Listeners^^A^^^^^^^^^^1
"KRN",19,10973,1,0)
^^1^1^3030113.101517
"KRN",19,10973,1,1,0)
Starts all enabled listener processes registered in the CIA LISTENER file.
"KRN",19,10973,20)
D MNUEXEC^CIAU("D STARTALL^CIANBLIS",1)
"KRN",19,10973,25)

"KRN",19,10973,"U")
START ALL REGISTERED LISTENERS
"KRN",19,10974,-1)
0^2
"KRN",19,10974,0)
CIANB STOPALL^Stop All Registered Listeners^^A^^^^^^^^^^1
"KRN",19,10974,1,0)
^^1^1^3030113.101632
"KRN",19,10974,1,1,0)
Stops all listeners registered in the CIA LISTENER file. 
"KRN",19,10974,20)
D MNUEXEC^CIAU("D STOPALL^CIANBLIS",1)
"KRN",19,10974,25)

"KRN",19,10974,"U")
STOP ALL REGISTERED LISTENERS
"KRN",19,10976,-1)
0^3
"KRN",19,10976,0)
CIANB MAIN MENU^CIA Broker Main Menu^^M^^^^^^^^CIA NETWORK COMPONENTS^^^^^1
"KRN",19,10976,10,0)
^19.01IP^5^5
"KRN",19,10976,10,1,0)
11792^1^10
"KRN",19,10976,10,1,"^")
CIANB SITE PARAMETERS
"KRN",19,10976,10,2,0)
10973^2^20
"KRN",19,10976,10,2,"^")
CIANB STARTALL
"KRN",19,10976,10,3,0)
10974^3^30
"KRN",19,10976,10,3,"^")
CIANB STOPALL
"KRN",19,10976,10,4,0)
10977^4^40
"KRN",19,10976,10,4,"^")
CIANB PURGE EVENT LOG
"KRN",19,10976,10,5,0)
11793^5^
"KRN",19,10976,10,5,"^")
CIANB REGISTERED LISTENERS
"KRN",19,10976,15)

"KRN",19,10976,20)

"KRN",19,10976,26)
D MNUHDR^CIAU()
"KRN",19,10976,99)
63042,13554
"KRN",19,10976,"U")
CIA BROKER MAIN MENU
"KRN",19,10977,-1)
0^5
"KRN",19,10977,0)
CIANB PURGE EVENT LOG^Purge Event Log^^A^^^^^^^^^^1^
"KRN",19,10977,1,0)
^^1^1^3030611.123339
"KRN",19,10977,1,1,0)
Tasks the nightly purge of the CIA Broker event log file.
"KRN",19,10977,15)

"KRN",19,10977,20)
D MNUEXEC^CIAU("D TASKPRG^CIANBEVT",1)
"KRN",19,10977,25)

"KRN",19,10977,"U")
PURGE EVENT LOG
"KRN",19,10978,-1)
0^6
"KRN",19,10978,0)
CIANB NIGHTLY TASK^Submit Cleanup Task^^R^^^^^^^^CIA NETWORK COMPONENTS^^1^
"KRN",19,10978,15)

"KRN",19,10978,20)
D MNUHDR^CIAU()
"KRN",19,10978,25)
NIGHTLY^CIANBUTL
"KRN",19,10978,200.9)
y
"KRN",19,10978,"U")
SUBMIT CLEANUP TASK
"KRN",19,11792,-1)
0^7
"KRN",19,11792,0)
CIANB SITE PARAMETERS^Edit CIA Broker Package Parameters^^A^^^^^^^^^^1
"KRN",19,11792,20)
D MNUTEMPL^CIAU()
"KRN",19,11792,"U")
EDIT CIA BROKER PACKAGE PARAME
"KRN",19,11793,-1)
0^8
"KRN",19,11793,0)
CIANB REGISTERED LISTENERS^Edit Registered Listeners^^E^^^^^^^^^^1^
"KRN",19,11793,15)

"KRN",19,11793,20)
D MNUHDR^CIAU()
"KRN",19,11793,30)
CIANB(19941.22,
"KRN",19,11793,31)
AELM
"KRN",19,11793,50)
19941.22
"KRN",19,11793,51)
.01;1;1.5;2
"KRN",19,11793,"U")
EDIT REGISTERED LISTENERS
"KRN",8994,1575,-1)
0^1
"KRN",8994,1575,0)
CIANBRPC AUTH^AUTH^CIANBRPC^2
"KRN",8994,1576,-1)
0^3
"KRN",8994,1576,0)
CIANBRPC CVC^CVC^CIANBRPC^1
"KRN",8994,1577,-1)
0^5
"KRN",8994,1577,0)
CIANBRPC DIVSET^DIVSET^CIANBRPC^1
"KRN",8994,1578,-1)
0^4
"KRN",8994,1578,0)
CIANBRPC DIVGET^DIVGET^CIANBRPC^2
"KRN",8994,1579,-1)
0^7
"KRN",8994,1579,0)
CIANBRPC DIALOG^DIALOG^CIANBRPC^2
"KRN",8994,1580,-1)
0^8
"KRN",8994,1580,0)
CIANBRPC GETRPCS^GETRPCS^CIANBRPC^4
"KRN",8994,1581,-1)
0^11
"KRN",8994,1581,0)
CIANBRPC SETVAR^SETVAR^CIANBRPC^1
"KRN",8994,1582,-1)
0^9
"KRN",8994,1582,0)
CIANBEVT BCAST^BCAST^CIANBEVT^1
"KRN",8994,1583,-1)
0^10
"KRN",8994,1583,0)
CIANBEVT GETSUBSC^GETSUBSC^CIANBEVT^4^^^^1
"KRN",8994,1584,-1)
0^12
"KRN",8994,1584,0)
CIANBRPC GETSESSN^GETSESSN^CIANBRPC^4^^^^1
"KRN",8994,1585,-1)
0^13
"KRN",8994,1585,0)
CIANBASY STOP^STOP^CIANBASY^1
"KRN",8994,1586,-1)
0^14
"KRN",8994,1586,0)
CIANBRPC GETVAR^GETVAR^CIANBRPC^2^^^^1
"KRN",8994,1587,-1)
0^15
"KRN",8994,1587,0)
CIANBRPC GETINFO^GETINFO^CIANBRPC^4^^^^1
"KRN",8994,1588,-1)
0^16
"KRN",8994,1588,0)
CIANBRPC CANRUN^CANRUN^CIANBRPC^1
"KRN",8994,1589,-1)
0^17
"KRN",8994,1589,0)
CIANBRPC LOCK^LOCK^CIANBRPC^1
"KRN",8994,1590,-1)
0^18
"KRN",8994,1590,0)
CIANBRPC LOCKRES^LOCKRES^CIANBRPC^4^^^^1
"MBREQ")
0
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",8989.52,0,3,.03)
USE ENTITY FROM^*P1'^DIC(^0;3^S DIC("S")="I $$ALLOW^XPARDD1(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",8989.52,0,4,.04)
USE INSTANCE FROM^P8989.51'^XTV(8989.51,^0;4^Q
"PGL",8989.521,0,2,.02)
PARAMETER^P8989.51'^XTV(8989.51,^0;2^Q
"PKG",386,-1)
1^1
"PKG",386,0)
CIA NETWORK COMPONENTS^CIAN^Networking components from CIA
"PKG",386,1,0)
^9.41A^4^4^3040121^^
"PKG",386,1,1,0)
This package includes the following network I/O components from CIA:
"PKG",386,1,2,0)

"PKG",386,1,3,0)
WebMan
"PKG",386,1,4,0)
RPC Broker
"PKG",386,5)
CIA
"PKG",386,7)
^^III
"PKG",386,22,0)
^9.49I^1^1
"PKG",386,22,1,0)
1.1^3140312^3081024^1
"PKG",386,22,1,1,0)
^^1^1^3140312
"PKG",386,22,1,1,1,0)
CIA's remote procedure call broker.
"PKG",386,"DEV")
DKM/CIA
"PKG",386,"VERSION")
1.1
"PRE")
CIANBINI
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","CIANBACT")
0^1^B32294268
"RTN","CIANBACT",1,0)
CIANBACT ;MSC/IND/DKM - MSC RPC Broker Actions;16-Apr-2010 11:55;DKM
"RTN","CIANBACT",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007**;Sep 18, 2007;Build 4
"RTN","CIANBACT",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBACT",4,0)
 ;=================================================================
"RTN","CIANBACT",5,0)
 ; Connect action
"RTN","CIANBACT",6,0)
 ; CIADATA is returned to client as:
"RTN","CIANBACT",7,0)
 ;   callback flag^authentication method^server version^case sensitive^context cached
"RTN","CIANBACT",8,0)
ACTC N X,Y,VOL,UCI,PORT,IP,AUTH
"RTN","CIANBACT",9,0)
 S Y=$$GETUCI,UCI(0)=Y,UCI=$$UP^XLFSTR($G(CIA("UCI"),Y)),VOL=$P(UCI,",",2)
"RTN","CIANBACT",10,0)
 S:'$L(UCI) UCI=Y
"RTN","CIANBACT",11,0)
 S:'$L(VOL) VOL=$P(Y,",",2),$P(UCI,",",2)=VOL
"RTN","CIANBACT",12,0)
 I UCI'=UCI(0),$$ERRCHK(0[$$UCICHECK^%ZOSV(UCI),14,UCI) Q
"RTN","CIANBACT",13,0)
 Q:$$ERRCHK('$L(VOL),11)
"RTN","CIANBACT",14,0)
 S AUTH=$$AUTHMETH(UCI),CIADATA="0^"_AUTH_"^1.1^"_$$GET^XPAR("SYS","XU VC CASE SENSITIVE")_"^1"
"RTN","CIANBACT",15,0)
 Q:$$ERRCHK('$L(AUTH),24,UCI)
"RTN","CIANBACT",16,0)
 I $D(^%ZOSF("ACTJ")) D  Q:$$ERRCHK(X'>Y&X,10,Y,X)
"RTN","CIANBACT",17,0)
 .; Y=# active jobs, X=max active jobs
"RTN","CIANBACT",18,0)
 .X ^%ZOSF("ACTJ")
"RTN","CIANBACT",19,0)
 .S X=+$O(^XTV(8989.3,1,4,"B",VOL,0)),X=$S(X:+$P($G(^XTV(8989.3,1,4,X,0)),U,3),1:0)
"RTN","CIANBACT",20,0)
 S PORT=CIA("LP"),X=$$CLIENTIP^CIAUOS,IP=$S(CIAMODE=2:CIAIP,$L(X):X,1:CIA("IP"))
"RTN","CIANBACT",21,0)
 S @("X=$$JOB"_CIAOS)
"RTN","CIANBACT",22,0)
 D ERRCHK('X,12)
"RTN","CIANBACT",23,0)
 Q
"RTN","CIANBACT",24,0)
 ; Disconnect action
"RTN","CIANBACT",25,0)
ACTD D RESET^CIANBRPC()
"RTN","CIANBACT",26,0)
 S CIADATA=1,CIAQUIT=1
"RTN","CIANBACT",27,0)
 Q
"RTN","CIANBACT",28,0)
 ; Query action
"RTN","CIANBACT",29,0)
ACTQ Q:$$ASYCHK^CIANBASY
"RTN","CIANBACT",30,0)
 Q:$$EVTCHK^CIANBEVT
"RTN","CIANBACT",31,0)
 ; Ping action
"RTN","CIANBACT",32,0)
ACTP S DT=$$NOW^XLFDT,CIADATA=$$PARAM^CIANBUTL("CIANB POLLING INTERVAL",1,60)_U_DT,DT=DT\1
"RTN","CIANBACT",33,0)
 Q
"RTN","CIANBACT",34,0)
 ; Subscribe action
"RTN","CIANBACT",35,0)
ACTS S CIADATA=1
"RTN","CIANBACT",36,0)
 Q:$$ERRCHK('$$SUBSCR^CIANBEVT(CIA("EVT"),1),13,CIA("EVT"))
"RTN","CIANBACT",37,0)
 Q
"RTN","CIANBACT",38,0)
 ; Unsubscribe action
"RTN","CIANBACT",39,0)
ACTU S CIADATA=$$SUBSCR^CIANBEVT(CIA("EVT"),0)
"RTN","CIANBACT",40,0)
 Q
"RTN","CIANBACT",41,0)
 ; RPC action
"RTN","CIANBACT",42,0)
ACTR N RPC,RTN,CIAD,XWBWRAP,XWBPTYPE,I
"RTN","CIANBACT",43,0)
 I '$D(CIA("CTX")) S CIA("CTX")=$$GETVAR^CIANBUTL("CTX")
"RTN","CIANBACT",44,0)
 E  D SETVAR^CIANBUTL("CTX",CIA("CTX"))
"RTN","CIANBACT",45,0)
 S:CIA("CTX")="" CIA("CTX")=$$GETVAR^CIANBUTL("AID")
"RTN","CIANBACT",46,0)
 S RPC=$$FIND1^DIC(8994,,"QX",$G(CIA("RPC")))
"RTN","CIANBACT",47,0)
 Q:$$ERRCHK('RPC,3)
"RTN","CIANBACT",48,0)
 S I=$G(^XWB(8994,RPC,0)),RTN=$P(I,U,2,3),XWBWRAP=+$P(I,U,8),XWBPTYPE=$P(I,U,4)
"RTN","CIANBACT",49,0)
 Q:$$ERRCHK($S($E($P(RTN,U,2),1,5)="CIANB":0,1:'$$CANRUN(RPC,CIA("CTX"))),4,CIA("RPC"),CIA("CTX"))
"RTN","CIANBACT",50,0)
 Q:$$ERRCHK("03"'[$P(I,U,6),5)
"RTN","CIANBACT",51,0)
 Q:$$ERRCHK(RTN'?.8AN1"^"1.8AN,6)
"RTN","CIANBACT",52,0)
 Q:$$ERRCHK("^1^2^3^4^5^H^"'[(U_XWBPTYPE_U),6)
"RTN","CIANBACT",53,0)
 Q:$$ERRCHK(ARG>40,7,,ARG,40)
"RTN","CIANBACT",54,0)
 I $G(CIA("ASY")) D
"RTN","CIANBACT",55,0)
 .N RD
"RTN","CIANBACT",56,0)
 .S RD="CIANB THREAD RESOURCE #"_$$GETVAR^CIANBUTL("RDEV")
"RTN","CIANBACT",57,0)
 .S CIAD=$$QUEUE^CIAUTSK("TASK^CIANBASY","ASYNC RPC: "_CIA("RPC"),,"RTN^XWBWRAP^XWBPTYPE^ARG^ARG(^CIA(^XWBOS^P*",RD)
"RTN","CIANBACT",58,0)
 .Q:$$ERRCHK(CIAD<1,8)
"RTN","CIANBACT",59,0)
 .S ^XTMP("CIA",CIA("UID"),"T",CIAD)=""
"RTN","CIANBACT",60,0)
 .D REPLY^CIANBLIS(CIAD)
"RTN","CIANBACT",61,0)
 E  D
"RTN","CIANBACT",62,0)
 .S:XWBPTYPE=4 CIAD=$$TMPGBL^CIANBRPC("X")
"RTN","CIANBACT",63,0)
 .D STREST^CIANBLIS(1),DORPC,DATAOUT
"RTN","CIANBACT",64,0)
 Q
"RTN","CIANBACT",65,0)
 ; Builds the RPC entry code and executes it
"RTN","CIANBACT",66,0)
DORPC N I,P,XWBAPVER,XQY,CIAQUIT,ALOG,$ET
"RTN","CIANBACT",67,0)
 S RTN=RTN_"(.CIAD",XWBAPVER=$G(CIA("VER")),XQY=$$GETVAR^CIANBUTL("AID0")
"RTN","CIANBACT",68,0)
 S ALOG=$$ISACTIVE^CIANBLOG,ALOG(0)=$S(ALOG:$$LOG^CIANBLOG(ALOG,1,CIA("RPC")),1:0)
"RTN","CIANBACT",69,0)
 F I=1:1:ARG D
"RTN","CIANBACT",70,0)
 .S RTN=RTN_","
"RTN","CIANBACT",71,0)
 .Q:'$D(ARG(I))
"RTN","CIANBACT",72,0)
 .S P="P"_I,RTN=RTN_"."_P
"RTN","CIANBACT",73,0)
 .S:$D(@P)=10 @P=""
"RTN","CIANBACT",74,0)
 .D:ALOG(0) ADD^CIANBLOG(ALOG,ALOG(0),P,1)
"RTN","CIANBACT",75,0)
 S RTN=RTN_")"
"RTN","CIANBACT",76,0)
 D
"RTN","CIANBACT",77,0)
 .N ALOG
"RTN","CIANBACT",78,0)
 .D @RTN
"RTN","CIANBACT",79,0)
 I ALOG(0) D
"RTN","CIANBACT",80,0)
 .N VAL,ARY
"RTN","CIANBACT",81,0)
 .S VAL=$C(13)_"Return Data:"_$C(13)
"RTN","CIANBACT",82,0)
 .D ADD^CIANBLOG(ALOG,ALOG(0),"VAL")
"RTN","CIANBACT",83,0)
 .I XWBPTYPE=1 S VAL=$G(CIAD),ARY="VAL"
"RTN","CIANBACT",84,0)
 .E  I XWBPTYPE=2 S ARY="CIAD"
"RTN","CIANBACT",85,0)
 .E  I XWBPTYPE=3 S ARY="CIAD"
"RTN","CIANBACT",86,0)
 .E  I XWBPTYPE=4 S ARY=CIAD
"RTN","CIANBACT",87,0)
 .E  I XWBPTYPE=5 S VAL=$G(@CIAD),ARY="VAL"
"RTN","CIANBACT",88,0)
 .E  I XWBPTYPE="H" S VAL=CIAD,ARY="VAL"
"RTN","CIANBACT",89,0)
 .E  Q
"RTN","CIANBACT",90,0)
 .D ADD^CIANBLOG(ALOG,ALOG(0),ARY)
"RTN","CIANBACT",91,0)
 Q
"RTN","CIANBACT",92,0)
 ; Test for error condition
"RTN","CIANBACT",93,0)
 ; TEST = If true, setup the error
"RTN","CIANBACT",94,0)
 ; ERR  = Error code
"RTN","CIANBACT",95,0)
 ; Pn   = Optional parameters (up to 3)
"RTN","CIANBACT",96,0)
ERRCHK(TEST,ERR,P1,P2,P3) ;
"RTN","CIANBACT",97,0)
 I TEST,'$G(CIAERR(0)) D
"RTN","CIANBACT",98,0)
 .D GETDLG^CIANBUTL(ERR,.CIAERR,.P1,.P2,.P3)
"RTN","CIANBACT",99,0)
 .S CIAERR(0)=ERR
"RTN","CIANBACT",100,0)
 Q:$Q +$G(CIAERR(0))
"RTN","CIANBACT",101,0)
 Q
"RTN","CIANBACT",102,0)
 ; Writes return data to TCP stream
"RTN","CIANBACT",103,0)
DATAOUT D TCPUSE^CIANBLIS
"RTN","CIANBACT",104,0)
 W $C(0)
"RTN","CIANBACT",105,0)
 I XWBPTYPE=1 W $G(CIAD),! Q
"RTN","CIANBACT",106,0)
 I XWBPTYPE=2 D OUT("CIAD",1) Q
"RTN","CIANBACT",107,0)
 I XWBPTYPE=3 D OUT("CIAD",XWBWRAP) Q
"RTN","CIANBACT",108,0)
 I XWBPTYPE=4 D OUT(CIAD,XWBWRAP) Q
"RTN","CIANBACT",109,0)
 I XWBPTYPE=5 W $G(@CIAD),! Q
"RTN","CIANBACT",110,0)
 I XWBPTYPE="H" D HFSOUT(CIAD,XWBWRAP) Q
"RTN","CIANBACT",111,0)
 Q
"RTN","CIANBACT",112,0)
 ; Write array (local or global) to TCP stream
"RTN","CIANBACT",113,0)
OUT(ARY,EOL) ;
"RTN","CIANBACT",114,0)
 N X,L,K
"RTN","CIANBACT",115,0)
 S K=$E(ARY)'="~"
"RTN","CIANBACT",116,0)
 S:'K ARY=$E(ARY,2,999)
"RTN","CIANBACT",117,0)
 Q:'$L(ARY)
"RTN","CIANBACT",118,0)
 S ARY=$NA(@ARY)
"RTN","CIANBACT",119,0)
 S X=ARY,L=$QL(ARY),EOL=$S($G(EOL):$C(13),1:"")
"RTN","CIANBACT",120,0)
 F  S X=$Q(@X) Q:'$L(X)  Q:$NA(@X,L)'=ARY  W @X,EOL,!
"RTN","CIANBACT",121,0)
 K:K @ARY
"RTN","CIANBACT",122,0)
 Q
"RTN","CIANBACT",123,0)
 ; Write contents of HFS to TCP stream
"RTN","CIANBACT",124,0)
HFSOUT(HFS,EOL) ;
"RTN","CIANBACT",125,0)
 N X
"RTN","CIANBACT",126,0)
 S EOL=$S($G(EOL):$C(13),1:"")
"RTN","CIANBACT",127,0)
 D OPEN^CIAUOS(.HFS,"R")
"RTN","CIANBACT",128,0)
 F  Q:$$READ^CIAUOS(.X,HFS)  D
"RTN","CIANBACT",129,0)
 .D TCPUSE^CIANBLIS
"RTN","CIANBACT",130,0)
 .W X,EOL,!
"RTN","CIANBACT",131,0)
 D CLOSE^CIAUOS(.HFS),DELETE^CIAUOS(HFS)
"RTN","CIANBACT",132,0)
 Q
"RTN","CIANBACT",133,0)
 ; Returns true if RPC can run in current context
"RTN","CIANBACT",134,0)
CANRUN(RPC,CTX) ;
"RTN","CIANBACT",135,0)
 Q:'$G(DUZ)!'RPC 0
"RTN","CIANBACT",136,0)
 S CTX(0)=$$OPTLKP^CIANBUTL(CTX)
"RTN","CIANBACT",137,0)
 Q:$$ERRCHK('$L(CTX(0)),2,CTX) 0
"RTN","CIANBACT",138,0)
 D:'$G(^XTMP("CIA",CIA("UID"),"C",CTX(0))) BLDCTX(CTX(0))
"RTN","CIANBACT",139,0)
 Q:$$KCHK^XUSRB("XUPROGMODE") 1
"RTN","CIANBACT",140,0)
 Q $D(^XTMP("CIA",CIA("UID"),"C",CTX(0),RPC))
"RTN","CIANBACT",141,0)
 ; Build RPC context table
"RTN","CIANBACT",142,0)
BLDCTX(OPT,CTX) ;
"RTN","CIANBACT",143,0)
 N X
"RTN","CIANBACT",144,0)
 I '$D(CTX) K ^XTMP("CIA",CIA("UID"),"C",OPT) S ^(OPT)=1,CTX=OPT
"RTN","CIANBACT",145,0)
 Q:$D(^XTMP("CIA",CIA("UID"),"C",CTX,0,OPT))  S ^(OPT)=""
"RTN","CIANBACT",146,0)
 Q:$$OPTCHK^CIANBUTL(OPT,"B")
"RTN","CIANBACT",147,0)
 M ^XTMP("CIA",CIA("UID"),"C",CTX)=^DIC(19,OPT,"RPC","B")
"RTN","CIANBACT",148,0)
 F X=0:0 S X=$O(^DIC(19,OPT,10,"B",X)) Q:'X  D BLDCTX(X,CTX)
"RTN","CIANBACT",149,0)
 K:CTX=OPT ^XTMP("CIA",CIA("UID"),"C",CTX,0)
"RTN","CIANBACT",150,0)
 Q
"RTN","CIANBACT",151,0)
 ; OS-specific job commands
"RTN","CIANBACT",152,0)
JOB1() I CIAMODE=2 D MODE2 Q 1
"RTN","CIANBACT",153,0)
 J EN^CIANBLIS(PORT,IP,1)[UCI]::15
"RTN","CIANBACT",154,0)
 Q $T
"RTN","CIANBACT",155,0)
JOB2() I CIAMODE=2 D MODE2 Q 1
"RTN","CIANBACT",156,0)
 J EN^CIANBLIS(PORT,IP,1)[UCI]:100000:15
"RTN","CIANBACT",157,0)
 Q $T
"RTN","CIANBACT",158,0)
JOB3() I $G(CIA("DBG"))!($G(CIA("VER"))<1.5) J EN^CIANBLIS(PORT,IP,1)[$P(UCI,",")]::15 Q $T
"RTN","CIANBACT",159,0)
 S $P(CIADATA,U)=1
"RTN","CIANBACT",160,0)
 D REPLY^CIANBLIS(CIADATA)
"RTN","CIANBACT",161,0)
 K CIADATA
"RTN","CIANBACT",162,0)
 J EN^CIANBLIS(CIAPORT,CIAIP,2)[$P(UCI,",")]:(:4:CIATDEV:CIATDEV):15
"RTN","CIANBACT",163,0)
 Q $T
"RTN","CIANBACT",164,0)
 ; Mode 2 support for MSM and DSM
"RTN","CIANBACT",165,0)
MODE2 D:UCI'=UCI(0) SETUCI(UCI)
"RTN","CIANBACT",166,0)
 S UCI(0)=UCI
"RTN","CIANBACT",167,0)
 I '$G(CIA("DBG")),$G(CIA("VER"))'<1.5 S $P(CIADATA,U)=1,CIAMODE=1
"RTN","CIANBACT",168,0)
 E  S CIAQUIT=1 D REPLY^CIANBLIS(),TCPCLOSE^CIANBLIS,EN^CIANBLIS(PORT,IP,1)
"RTN","CIANBACT",169,0)
 Q
"RTN","CIANBACT",170,0)
 ; Return current UCI
"RTN","CIANBACT",171,0)
GETUCI() N Y
"RTN","CIANBACT",172,0)
 D UCI^%ZOSV
"RTN","CIANBACT",173,0)
 Q Y
"RTN","CIANBACT",174,0)
 ; Change UCI
"RTN","CIANBACT",175,0)
SETUCI(X) D SWAP^%XUCI
"RTN","CIANBACT",176,0)
 Q
"RTN","CIANBACT",177,0)
 ; Get authentication method for target UCI
"RTN","CIANBACT",178,0)
AUTHMETH(UCI) ;
"RTN","CIANBACT",179,0)
 N X,PC
"RTN","CIANBACT",180,0)
 F PC=2,1 D  Q:$L(X)
"RTN","CIANBACT",181,0)
 .S X=$$GET^XPAR("ALL","CIANB AUTHENTICATION",$P(UCI,",",1,PC))
"RTN","CIANBACT",182,0)
 Q X
"RTN","CIANBASY")
0^2^B5533083
"RTN","CIANBASY",1,0)
CIANBASY ;MSC/IND/DKM - Asynchronous RPC calls ;29-Jun-2012 15:50;PLS
"RTN","CIANBASY",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007,001009**;Sep 18, 2007;Build 4
"RTN","CIANBASY",3,0)
 ;;Copyright 2000-2012, Medsphere Systems Corporation
"RTN","CIANBASY",4,0)
 ;=================================================================
"RTN","CIANBASY",5,0)
 ; Background task for executing an asynchronous RPC
"RTN","CIANBASY",6,0)
TASK N CIAD,TGT,$ET,$ES
"RTN","CIANBASY",7,0)
 S $ET="D ERROR^CIANBASY",ZTREQ="@"
"RTN","CIANBASY",8,0)
 K ^XTMP("CIA",CIA("UID"),"T",ZTSK)
"RTN","CIANBASY",9,0)
 Q:$$S^%ZTLOAD
"RTN","CIANBASY",10,0)
 S ^XTMP("CIA",CIA("UID"),"T",ZTSK)=0,TGT=$NA(^(ZTSK,0))
"RTN","CIANBASY",11,0)
 S:XWBPTYPE=4 CIAD=TGT
"RTN","CIANBASY",12,0)
 D DORPC^CIANBACT
"RTN","CIANBASY",13,0)
 I XWBPTYPE=1 S @TGT@(0)=CIAD
"RTN","CIANBASY",14,0)
 E  I XWBPTYPE>1,XWBPTYPE<4 M @TGT=CIAD S:XWBPTYPE=2 XWBWRAP=1
"RTN","CIANBASY",15,0)
 E  I XWBPTYPE=4,$L(CIAD),CIAD'=TGT M @TGT=@CIAD K @CIAD
"RTN","CIANBASY",16,0)
 E  I XWBPTYPE=5 S @TGT@(0)=$G(@CIAD)
"RTN","CIANBASY",17,0)
 E  I XWBPTYPE="H" D
"RTN","CIANBASY",18,0)
 .N X,Y,FIL,DIR
"RTN","CIANBASY",19,0)
 .S X=$E($$DIRDLM^CIAUOS,3),Y=$L(CIAD,X),DIR=$P(CIAD,X,1,Y-1),FIL=$P(CIAD,X,Y)
"RTN","CIANBASY",20,0)
 .I '$$FTG^%ZISH(DIR,FIL,$NA(@TGT@(0)),$QL(TGT)+1)
"RTN","CIANBASY",21,0)
 .D DELETE^CIAUOS(CIAD)
"RTN","CIANBASY",22,0)
 I $$S^%ZTLOAD K ^XTMP("CIA",CIA("UID"),"T",ZTSK)
"RTN","CIANBASY",23,0)
 E  S ^XTMP("CIA",CIA("UID"),"T",ZTSK)=ZTSK_"^0^"_XWBWRAP
"RTN","CIANBASY",24,0)
 Q
"RTN","CIANBASY",25,0)
ERROR D SETERR(-1,$$EC^%ZOSV)
"RTN","CIANBASY",26,0)
 D ^%ZTER,UNWIND^%ZTER
"RTN","CIANBASY",27,0)
 Q
"RTN","CIANBASY",28,0)
 ; Retrieve specified routine line
"RTN","CIANBASY",29,0)
RTNTEXT(RTN) ;
"RTN","CIANBASY",30,0)
 N TAG
"RTN","CIANBASY",31,0)
 S TAG=$P(RTN,U),RTN=$P(RTN,U,2)
"RTN","CIANBASY",32,0)
 Q $S('$L(RTN):$T(^@TAG),$L(TAG):$T(@TAG^@RTN),1:$T(^@RTN))
"RTN","CIANBASY",33,0)
 ; Set error info to return to client
"RTN","CIANBASY",34,0)
SETERR(CODE,TEXT) ;
"RTN","CIANBASY",35,0)
 K ^XTMP("CIA",CIA("UID"),"T",ZTSK) M ^(ZTSK,0,0)=TEXT
"RTN","CIANBASY",36,0)
 S ^XTMP("CIA",CIA("UID"),"T",ZTSK)=ZTSK_U_CODE_"^1"
"RTN","CIANBASY",37,0)
 Q
"RTN","CIANBASY",38,0)
 ; RPC to check for completed tasks
"RTN","CIANBASY",39,0)
 ; Results[0] at the client end will contain the TaskMan ID of the
"RTN","CIANBASY",40,0)
 ; completed RPC. The remainder of the Result will be the data
"RTN","CIANBASY",41,0)
 ; returned by the RPC.
"RTN","CIANBASY",42,0)
ASYCHK() N ZTSK,CIAD,X
"RTN","CIANBASY",43,0)
 S ZTSK=0
"RTN","CIANBASY",44,0)
 F  S ZTSK=+$O(^XTMP("CIA",CIA("UID"),"T",ZTSK)) Q:'ZTSK  S X=$G(^(ZTSK)),CIAD=$NA(^(ZTSK,0)) I X D  Q
"RTN","CIANBASY",45,0)
 .D TCPUSE^CIANBLIS
"RTN","CIANBASY",46,0)
 .W $C(2),X,$C(13),!
"RTN","CIANBASY",47,0)
 .D OUT^CIANBACT(CIAD,$P(X,U,3))
"RTN","CIANBASY",48,0)
 .K ^XTMP("CIA",CIA("UID"),"T",ZTSK)
"RTN","CIANBASY",49,0)
 Q ZTSK
"RTN","CIANBASY",50,0)
 ; RPC: Stop a task
"RTN","CIANBASY",51,0)
 ; Signals to a backround task that it should stop running.  Cleans up
"RTN","CIANBASY",52,0)
 ; any output generated by completed tasks.
"RTN","CIANBASY",53,0)
STOP(CIAD,ZTSK) ;
"RTN","CIANBASY",54,0)
 S CIAD=''$D(^XTMP("CIA",CIA("UID"),"T",ZTSK)) K:CIAD ^(ZTSK)
"RTN","CIANBASY",55,0)
 Q:'$D(^%ZTSK(ZTSK))
"RTN","CIANBASY",56,0)
 S $P(^%ZTSK(ZTSK,.1),U,10)=$P($G(^VA(200,DUZ,0)),U)
"RTN","CIANBASY",57,0)
 D DQ^%ZTLOAD
"RTN","CIANBASY",58,0)
 I $G(ZTSK(0)) D KILL^%ZTLOAD
"RTN","CIANBASY",59,0)
 Q
"RTN","CIANBASY",60,0)
 ; Stop all tasks in task list
"RTN","CIANBASY",61,0)
STOPALL N ZTSK
"RTN","CIANBASY",62,0)
 S ZTSK=0
"RTN","CIANBASY",63,0)
 F  S ZTSK=$O(^XTMP("CIA",CIA("UID"),"T",ZTSK)) Q:'ZTSK  D STOP(,ZTSK)
"RTN","CIANBASY",64,0)
 K ^XTMP("CIA",CIA("UID"),"T")
"RTN","CIANBASY",65,0)
 Q
"RTN","CIANBEVT")
0^3^B59877150
"RTN","CIANBEVT",1,0)
CIANBEVT ;MSC/IND/DKM - Event Support ;03-Dec-2009 16:53;PLS
"RTN","CIANBEVT",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007**;Sep 18, 2007;Build 4
"RTN","CIANBEVT",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBEVT",4,0)
 ;=================================================================
"RTN","CIANBEVT",5,0)
 ; Check for the occurrence of host events
"RTN","CIANBEVT",6,0)
EVTCHK() ;EP
"RTN","CIANBEVT",7,0)
 N RTN,$ET,X
"RTN","CIANBEVT",8,0)
 S $ET="",X="ERR1^CIANBEVT",@^%ZOSF("TRAP")
"RTN","CIANBEVT",9,0)
 L +^XTMP("CIA",CIA("UID"),"E"):0
"RTN","CIANBEVT",10,0)
 E  Q 0
"RTN","CIANBEVT",11,0)
 S RTN=+$O(^XTMP("CIA",CIA("UID"),"E",0)),X=$NA(^(RTN))
"RTN","CIANBEVT",12,0)
 I RTN D
"RTN","CIANBEVT",13,0)
 .D TCPUSE^CIANBLIS
"RTN","CIANBEVT",14,0)
 .W $C(3)
"RTN","CIANBEVT",15,0)
 .D OUT^CIANBACT(X)
"RTN","CIANBEVT",16,0)
ERR1 L -^XTMP("CIA",CIA("UID"),"E")
"RTN","CIANBEVT",17,0)
 Q $G(RTN)
"RTN","CIANBEVT",18,0)
 ; Start monitor in background if not already running
"RTN","CIANBEVT",19,0)
MONSTART ;EP
"RTN","CIANBEVT",20,0)
 I '$$MONCHECK,$$QUEUE^CIAUTSK("MONITOR^CIANBEVT","VueCentric Event Monitor")
"RTN","CIANBEVT",21,0)
 Q
"RTN","CIANBEVT",22,0)
 ; Returns true if event monitor is running
"RTN","CIANBEVT",23,0)
 ;   LOCK = If specified and true, do not release lock.
"RTN","CIANBEVT",24,0)
MONCHECK(LOCK) ;EP
"RTN","CIANBEVT",25,0)
 L +^XTMP("CIANBEVT MONITOR"):0
"RTN","CIANBEVT",26,0)
 E  Q 1
"RTN","CIANBEVT",27,0)
 L:'$G(LOCK) -^XTMP("CIANBEVT MONITOR")
"RTN","CIANBEVT",28,0)
 Q 0
"RTN","CIANBEVT",29,0)
 ; Taskman entry point for background event monitor
"RTN","CIANBEVT",30,0)
MONITOR ;EP
"RTN","CIANBEVT",31,0)
 N IEN,TYPE,EXE,IDLE,PMETH,X
"RTN","CIANBEVT",32,0)
 S ZTREQ="@",IDLE=360
"RTN","CIANBEVT",33,0)
 Q:$$MONCHECK(1)
"RTN","CIANBEVT",34,0)
 F  D  Q:IDLE<1!$$S^%ZTLOAD
"RTN","CIANBEVT",35,0)
 .H 5
"RTN","CIANBEVT",36,0)
 .F IEN=0:0 S IEN=$O(^CIANB(19941.21,IEN)) Q:'IEN  D
"RTN","CIANBEVT",37,0)
 ..S X=$G(^(IEN,0)),TYPE=$P(X,U),PMETH=$P(X,U,6),EXE=$G(^(1)) ; Note: NR set above
"RTN","CIANBEVT",38,0)
 ..I $L(EXE),'$P(X,U,2),$$CHKINT(+$P(X,U,3)) D
"RTN","CIANBEVT",39,0)
 ...I PMETH D EXEMON Q
"RTN","CIANBEVT",40,0)
 ...N UID
"RTN","CIANBEVT",41,0)
 ...F  Q:'$$NXTUID^CIANBUTL(.UID)  D EXEUID(UID,TYPE)
"RTN","CIANBEVT",42,0)
 .S IDLE=$S($$NXTUID^CIANBUTL:360,1:IDLE-1)
"RTN","CIANBEVT",43,0)
 L -^XTMP("CIANBEVT MONITOR")
"RTN","CIANBEVT",44,0)
 Q
"RTN","CIANBEVT",45,0)
 ; Execute an event monitor in session context
"RTN","CIANBEVT",46,0)
EXEUID(UID,TYPE) ;EP
"RTN","CIANBEVT",47,0)
 Q:'$$ISSUBSCR(UID,TYPE)
"RTN","CIANBEVT",48,0)
 N CIA,DUZ
"RTN","CIANBEVT",49,0)
 S CIA("UID")=UID,DUZ=$$EXEVAR("DUZ"),DUZ(0)=$$EXEVAR("DUZ0"),DUZ(2)=$$EXEVAR("DUZ2")
"RTN","CIANBEVT",50,0)
 D EXEMON
"RTN","CIANBEVT",51,0)
 Q
"RTN","CIANBEVT",52,0)
 ; Execute the event monitor
"RTN","CIANBEVT",53,0)
EXEMON N X,$ET
"RTN","CIANBEVT",54,0)
 S X="EXEERR^CIANBEVT",@^%ZOSF("TRAP"),$ET=""
"RTN","CIANBEVT",55,0)
 D EXERUN
"RTN","CIANBEVT",56,0)
 Q
"RTN","CIANBEVT",57,0)
EXERUN N IEN,IDLE
"RTN","CIANBEVT",58,0)
 X EXE
"RTN","CIANBEVT",59,0)
 Q
"RTN","CIANBEVT",60,0)
 ; Log any errors
"RTN","CIANBEVT",61,0)
EXEERR N ERT,ERD,X
"RTN","CIANBEVT",62,0)
 S ERT=$TR($$EC^%ZOSV,U,"~"),ERD=$$NOW^XLFDT
"RTN","CIANBEVT",63,0)
 S X=$G(^CIANB(19941.21,IEN,100)),^(100)=ERD_U_ERT
"RTN","CIANBEVT",64,0)
 D:(ERD\1'=(X\1))!($P(X,U,2)'=ERT) ^%ZTER
"RTN","CIANBEVT",65,0)
 Q
"RTN","CIANBEVT",66,0)
EXEVAR(VAR) ;
"RTN","CIANBEVT",67,0)
 Q $$GETVAR^CIANBUTL(VAR,,,UID)
"RTN","CIANBEVT",68,0)
 ; Check nominal polling interval.  Return true if event needs to be polled.
"RTN","CIANBEVT",69,0)
CHKINT(INT) ;EP
"RTN","CIANBEVT",70,0)
 Q:'INT 1
"RTN","CIANBEVT",71,0)
 N NXT,NOW,CHK
"RTN","CIANBEVT",72,0)
 S NOW=$H,NOW=NOW*86400+$P(NOW,",",2)
"RTN","CIANBEVT",73,0)
 S NXT=$G(IEN(IEN),NOW),CHK=NOW'<NXT
"RTN","CIANBEVT",74,0)
 S:CHK IEN(IEN)=NOW+INT
"RTN","CIANBEVT",75,0)
 Q CHK
"RTN","CIANBEVT",76,0)
 ; RPC: Broadcast an event to some or all active users
"RTN","CIANBEVT",77,0)
BCAST(DATA,EVENT,STUB,LST,AID) ;
"RTN","CIANBEVT",78,0)
 S DATA=$$BRDCAST(.EVENT,.STUB,.LST,.AID)
"RTN","CIANBEVT",79,0)
 Q
"RTN","CIANBEVT",80,0)
 ; Called by event monitor to signal an event to client
"RTN","CIANBEVT",81,0)
SIGNAL(STUB) ;
"RTN","CIANBEVT",82,0)
 D QUEUE(TYPE,.STUB)
"RTN","CIANBEVT",83,0)
 Q
"RTN","CIANBEVT",84,0)
 ; Add an event to a process event queue
"RTN","CIANBEVT",85,0)
QUEUE(TYPE,STUB,UID) ;EP
"RTN","CIANBEVT",86,0)
 N Q
"RTN","CIANBEVT",87,0)
 S:'$D(UID) UID=$G(CIA("UID"))
"RTN","CIANBEVT",88,0)
 I '$$ISSUBSCR(UID,TYPE) Q:$Q 0 Q
"RTN","CIANBEVT",89,0)
 L +^XTMP("CIA",UID,"E"):5
"RTN","CIANBEVT",90,0)
 E  Q:$Q 0 Q
"RTN","CIANBEVT",91,0)
 S Q=1+$O(^XTMP("CIA",UID,"E",$C(1)),-1),^(Q,0)=TYPE_$C(13) M ^(1)=STUB
"RTN","CIANBEVT",92,0)
 L -^XTMP("CIA",UID,"E")
"RTN","CIANBEVT",93,0)
 Q:$Q 1
"RTN","CIANBEVT",94,0)
 Q
"RTN","CIANBEVT",95,0)
 ; Lookup event type, returning IEN
"RTN","CIANBEVT",96,0)
EVENTIEN(TYPE) ;EP
"RTN","CIANBEVT",97,0)
 N X,Y
"RTN","CIANBEVT",98,0)
 Q:TYPE=+TYPE!'$L(TYPE) +TYPE
"RTN","CIANBEVT",99,0)
 S X=$E(TYPE,1,30),Y=0
"RTN","CIANBEVT",100,0)
 F  S Y=+$O(^CIANB(19941.21,"B",X,Y)) Q:'Y!($P($G(^CIANB(19941.21,Y,0)),U)=TYPE)
"RTN","CIANBEVT",101,0)
 Q $S(Y:Y,1:$$EVENTIEN($P(TYPE,".",1,$L(TYPE,".")-1)))
"RTN","CIANBEVT",102,0)
 ; Return event name, given IEN
"RTN","CIANBEVT",103,0)
EVENTNAM(IEN) ;EP
"RTN","CIANBEVT",104,0)
 Q $P($G(^CIANB(19941.21,+IEN,0)),U)
"RTN","CIANBEVT",105,0)
 ; Check to see if an event type is disabled
"RTN","CIANBEVT",106,0)
DISABLED(TYPE) ;EP
"RTN","CIANBEVT",107,0)
 N X,Y
"RTN","CIANBEVT",108,0)
 S X=$$EVENTIEN(TYPE),Y=$G(^CIANB(19941.21,+X,0)),TYPE=$P(Y,U),Y=+$P(Y,U,2)
"RTN","CIANBEVT",109,0)
 S:'Y Y=$$KEYCHECK(X,20)
"RTN","CIANBEVT",110,0)
 Q $S(Y:Y,'X:0,1:$$DISABLED($P(TYPE,".",1,$L(TYPE,".")-1)))
"RTN","CIANBEVT",111,0)
 ; Check to see if event type is protected by security key(s)
"RTN","CIANBEVT",112,0)
 ; Returns true if user does not have required keys
"RTN","CIANBEVT",113,0)
 ;   SB=20: Publication keys; SB=21: Subscription keys
"RTN","CIANBEVT",114,0)
KEYCHECK(TYPE,SB) ;EP
"RTN","CIANBEVT",115,0)
 N X,Y,Z
"RTN","CIANBEVT",116,0)
 S X=$$EVENTIEN(TYPE),(Y,Z)=0
"RTN","CIANBEVT",117,0)
 F  S Z=$O(^CIANB(19941.21,X,SB,"B",Z)) Q:'Z  D  Q:'Y
"RTN","CIANBEVT",118,0)
 .S Y='$$HASKEY(Z)
"RTN","CIANBEVT",119,0)
 Q Y
"RTN","CIANBEVT",120,0)
 ; Return true if user has key
"RTN","CIANBEVT",121,0)
HASKEY(KEY) ;EP
"RTN","CIANBEVT",122,0)
 S:KEY=+KEY KEY=$$LKUP^XPDKEY(KEY)
"RTN","CIANBEVT",123,0)
 Q $S($L(KEY):''$$KCHK^XUSRB(KEY),1:0)
"RTN","CIANBEVT",124,0)
 ; Signal an event to all or selected sessions
"RTN","CIANBEVT",125,0)
 ; If called as extrinsic, returns # of events broadcast
"RTN","CIANBEVT",126,0)
BRDCAST(TYPE,STUB,USR,AID) ;EP
"RTN","CIANBEVT",127,0)
 N X,C
"RTN","CIANBEVT",128,0)
 S C=0
"RTN","CIANBEVT",129,0)
 I '$$DISABLED(TYPE) D
"RTN","CIANBEVT",130,0)
 .I $D(USR("DUZ"))>1 D
"RTN","CIANBEVT",131,0)
 ..F  Q:'$$NXTUID^CIANBUTL(.X,-1,.AID)  D
"RTN","CIANBEVT",132,0)
 ...S:$D(USR("DUZ",+$$GETVAR^CIANBUTL("DUZ",,,X))) USR("UID",X)=""
"RTN","CIANBEVT",133,0)
 .S X=""
"RTN","CIANBEVT",134,0)
 .F  D  Q:'X
"RTN","CIANBEVT",135,0)
 ..I $D(USR)>1 S X=$O(USR("UID",X))
"RTN","CIANBEVT",136,0)
 ..E  D NXTUID^CIANBUTL(.X,-1,.AID)
"RTN","CIANBEVT",137,0)
 ..S:X C=C+$$QUEUE(.TYPE,.STUB,X)
"RTN","CIANBEVT",138,0)
 .D LOG(TYPE,.STUB)
"RTN","CIANBEVT",139,0)
 .D FPRTCOL(TYPE,.STUB)
"RTN","CIANBEVT",140,0)
 Q:$Q C
"RTN","CIANBEVT",141,0)
 Q
"RTN","CIANBEVT",142,0)
 ; Fire Associated Event Protocol
"RTN","CIANBEVT",143,0)
FPRTCOL(TYPE,STUB) ;
"RTN","CIANBEVT",144,0)
 N EVT,X
"RTN","CIANBEVT",145,0)
 S EVT=$$EVENTIEN(TYPE)
"RTN","CIANBEVT",146,0)
 Q:'EVT
"RTN","CIANBEVT",147,0)
 S X=$P($G(^CIANB(19941.21,+EVT,0)),U,7)_";ORD(101,"
"RTN","CIANBEVT",148,0)
 Q:'X
"RTN","CIANBEVT",149,0)
 D EN^XQOR
"RTN","CIANBEVT",150,0)
 Q
"RTN","CIANBEVT",151,0)
 ; Subscribe to / unsubscribe from a named event
"RTN","CIANBEVT",152,0)
 ; Returns new subscription state
"RTN","CIANBEVT",153,0)
SUBSCR(TYPE,SUBSCR) ;EP
"RTN","CIANBEVT",154,0)
 I '$L(TYPE) Q:$Q 0 Q
"RTN","CIANBEVT",155,0)
 N CURRNT
"RTN","CIANBEVT",156,0)
 S CURRNT=''$D(^XTMP("CIA",CIA("UID"),"S",TYPE)),SUBSCR=''$G(SUBSCR)
"RTN","CIANBEVT",157,0)
 I CURRNT'=SUBSCR D
"RTN","CIANBEVT",158,0)
 .I SUBSCR D  Q:'SUBSCR
"RTN","CIANBEVT",159,0)
 ..I $$KEYCHECK(TYPE,21) S SUBSCR=0
"RTN","CIANBEVT",160,0)
 ..E  S ^XTMP("CIA",CIA("UID"),"S",TYPE)=""
"RTN","CIANBEVT",161,0)
 .E  D
"RTN","CIANBEVT",162,0)
 ..K ^XTMP("CIA",CIA("UID"),"S",TYPE)
"RTN","CIANBEVT",163,0)
 ..D CLRVAR^CIANBUTL("EVENT."_TYPE)
"RTN","CIANBEVT",164,0)
 .D BRDCAST($S(SUBSCR:"",1:"UN")_"SUBSCRIBE."_TYPE,$$SESSION^CIANBUTL)
"RTN","CIANBEVT",165,0)
 Q:$Q SUBSCR
"RTN","CIANBEVT",166,0)
 Q
"RTN","CIANBEVT",167,0)
 ; Unsubscribe from all events (done at logout)
"RTN","CIANBEVT",168,0)
UNSUBALL ;EP
"RTN","CIANBEVT",169,0)
 N TYPE
"RTN","CIANBEVT",170,0)
 S TYPE=""
"RTN","CIANBEVT",171,0)
 F  S TYPE=$O(^XTMP("CIA",CIA("UID"),"S",TYPE)) Q:'$L(TYPE)  D
"RTN","CIANBEVT",172,0)
 .D SUBSCR(TYPE,0)
"RTN","CIANBEVT",173,0)
 Q
"RTN","CIANBEVT",174,0)
 ; Returns true if session is a subscriber
"RTN","CIANBEVT",175,0)
ISSUBSCR(UID,TYPE) ;EP
"RTN","CIANBEVT",176,0)
 Q $S('$$ISACTIVE^CIANBUTL(UID):0,1:$$ISSUBX(TYPE))
"RTN","CIANBEVT",177,0)
ISSUBX(TYPE) ;
"RTN","CIANBEVT",178,0)
 Q $S('$L(TYPE):0,$D(^XTMP("CIA",UID,"S",TYPE)):1,1:$$ISSUBX($P(TYPE,".",1,$L(TYPE,".")-1)))
"RTN","CIANBEVT",179,0)
 ; Returns list of subscribers to a given event type
"RTN","CIANBEVT",180,0)
GETSUBSC(DATA,TYPE) ;EP
"RTN","CIANBEVT",181,0)
 N Z
"RTN","CIANBEVT",182,0)
 D GETSESSN^CIANBRPC(.DATA)
"RTN","CIANBEVT",183,0)
 F Z=0:0 S Z=$O(@DATA@(Z)) Q:'Z  K:'$$ISSUBSCR(+@DATA@(Z),TYPE) @DATA@(Z)
"RTN","CIANBEVT",184,0)
 Q
"RTN","CIANBEVT",185,0)
 ; Returns number of days to retain log entries for an event type.
"RTN","CIANBEVT",186,0)
ISLOGGED(TYPE) ;EP
"RTN","CIANBEVT",187,0)
 N X,Y
"RTN","CIANBEVT",188,0)
 S TYPE=$$EVENTIEN(TYPE)
"RTN","CIANBEVT",189,0)
 S:TYPE X=^CIANB(19941.21,TYPE,0),Y=$P(X,U,4),X=$P(X,U)
"RTN","CIANBEVT",190,0)
 Q $S('TYPE:0,'$L(Y):$$ISLOGGED($P(X,".",$L(X,".")-1)),1:Y)
"RTN","CIANBEVT",191,0)
 ; Log an event
"RTN","CIANBEVT",192,0)
LOG(TYPE,STUB) ;EP
"RTN","CIANBEVT",193,0)
 N IEN,FDA,ERR,STB,X
"RTN","CIANBEVT",194,0)
 S IEN=$$ISACTIVE^CIANBLOG
"RTN","CIANBEVT",195,0)
 I IEN D
"RTN","CIANBEVT",196,0)
 .S X=$$LOG^CIANBLOG(IEN,2,TYPE)
"RTN","CIANBEVT",197,0)
 .D:X ADD^CIANBLOG(IEN,X,"STUB")
"RTN","CIANBEVT",198,0)
 Q:'$$ISLOGGED(TYPE)
"RTN","CIANBEVT",199,0)
 S FDA=$NA(FDA(19941.23,"+1,")),STB="STUB",X=0
"RTN","CIANBEVT",200,0)
 F  D  Q:'$L(STB)
"RTN","CIANBEVT",201,0)
 .S:$D(@STB)#2 X=X+1,STB(X)=@STB
"RTN","CIANBEVT",202,0)
 .S STB=$Q(@STB)
"RTN","CIANBEVT",203,0)
 S @FDA@(.01)=$$NOW^XLFDT
"RTN","CIANBEVT",204,0)
 S @FDA@(1)=TYPE
"RTN","CIANBEVT",205,0)
 S @FDA@(2)=DUZ
"RTN","CIANBEVT",206,0)
 S @FDA@(3)=$$GETUID^CIANBUTL
"RTN","CIANBEVT",207,0)
 S:X @FDA@(10)="STB"
"RTN","CIANBEVT",208,0)
 D UPDATE^DIE("U","FDA",,"ERR")
"RTN","CIANBEVT",209,0)
 Q
"RTN","CIANBEVT",210,0)
 ; Purge event log.  Specify at least one of:
"RTN","CIANBEVT",211,0)
 ;   DATE = Date before which entries will be purged.
"RTN","CIANBEVT",212,0)
 ;   TYPE = Event type to be purged.
"RTN","CIANBEVT",213,0)
 ;   FLAG = If set, purges child events as well.
"RTN","CIANBEVT",214,0)
PURGELOG(DATE,TYPE,FLAG) ;EP
"RTN","CIANBEVT",215,0)
 N IEN,CNT
"RTN","CIANBEVT",216,0)
 S CNT=0,TYPE=$G(TYPE),FLAG=$S($G(FLAG):12,1:1)
"RTN","CIANBEVT",217,0)
 S:TYPE=+TYPE TYPE=$$EVENTNAM(TYPE)
"RTN","CIANBEVT",218,0)
 I $G(DATE) D
"RTN","CIANBEVT",219,0)
 .F  S DATE=$O(^CIANB(19941.23,"B",DATE),-1),IEN=0 Q:'DATE  D
"RTN","CIANBEVT",220,0)
 ..F  S IEN=$O(^CIANB(19941.23,"B",DATE,IEN)) Q:'IEN  D
"RTN","CIANBEVT",221,0)
 ...I $L(TYPE),FLAG'[$$RELATES(TYPE,$P(^CIANB(19941.23,IEN,0),U,2)) Q
"RTN","CIANBEVT",222,0)
 ...S CNT=CNT+$$DELLOG(IEN)
"RTN","CIANBEVT",223,0)
 E  D
"RTN","CIANBEVT",224,0)
 .N TYP
"RTN","CIANBEVT",225,0)
 .S IEN=0,TYP=TYPE
"RTN","CIANBEVT",226,0)
 .F  Q:'$L(TYPE)  D
"RTN","CIANBEVT",227,0)
 ..F  S IEN=$O(^CIANB(19941.23,"C",TYPE,IEN)) Q:'IEN  S CNT=CNT+$$DELLOG(IEN)
"RTN","CIANBEVT",228,0)
 ..S TYPE=$O(^CIANB(19941.23,"C",TYPE))
"RTN","CIANBEVT",229,0)
 ..S:FLAG'[$$RELATES(TYP,TYPE) TYPE=""
"RTN","CIANBEVT",230,0)
 Q:$Q CNT
"RTN","CIANBEVT",231,0)
 Q
"RTN","CIANBEVT",232,0)
 ; Delete log entry corresponding to IEN
"RTN","CIANBEVT",233,0)
DELLOG(IEN) ;EP
"RTN","CIANBEVT",234,0)
 N FDA,ERR
"RTN","CIANBEVT",235,0)
 S FDA(19941.23,IEN_",",.01)="@"
"RTN","CIANBEVT",236,0)
 D FILE^DIE(,"FDA","ERR")
"RTN","CIANBEVT",237,0)
 Q:$Q '$D(ERR)
"RTN","CIANBEVT",238,0)
 Q
"RTN","CIANBEVT",239,0)
 ; Task purge in background
"RTN","CIANBEVT",240,0)
TASKPRG ;EP
"RTN","CIANBEVT",241,0)
 N ZTSK
"RTN","CIANBEVT",242,0)
 S ZTSK=$$QUEUE^CIAUTSK("DOPURGE^CIANBEVT(1)","Purge CIA EVENT LOG")
"RTN","CIANBEVT",243,0)
 I ZTSK>0 W !,"CIA EVENT LOG purge submitted as task #",ZTSK,!!
"RTN","CIANBEVT",244,0)
 E  W !,"Error submitting CIA EVENT LOG purge.",!!
"RTN","CIANBEVT",245,0)
 Q
"RTN","CIANBEVT",246,0)
 ; Purges event log according to retention settings
"RTN","CIANBEVT",247,0)
DOPURGE(SILENT) ;EP
"RTN","CIANBEVT",248,0)
 N IEN,TPNM,TPEN,DATE,CNT,TOT
"RTN","CIANBEVT",249,0)
 S TPNM="",SILENT=+$G(SILENT),TOT=0
"RTN","CIANBEVT",250,0)
 F  S TPNM=$O(^CIANB(19941.23,"C",TPNM)) Q:'$L(TPNM)  D
"RTN","CIANBEVT",251,0)
 .S TPEN=$$EVENTIEN(TPNM),DATE=+$P($G(^CIANB(19941.21,TPEN,0)),U,5)
"RTN","CIANBEVT",252,0)
 .S DATE=$$FMADD^XLFDT(DT,$S(DATE:1-DATE,1:-13))
"RTN","CIANBEVT",253,0)
 .S CNT=$$PURGELOG(DATE,TPNM),TOT=TOT+CNT
"RTN","CIANBEVT",254,0)
 .I CNT,'SILENT W $$SNGPLR^CIAU(CNT,"event")," purged for ",TPNM,!
"RTN","CIANBEVT",255,0)
 W:'SILENT !,"Total events purged: ",TOT,!!
"RTN","CIANBEVT",256,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","CIANBEVT",257,0)
 Q
"RTN","CIANBEVT",258,0)
 ; Returns the relationship between event types
"RTN","CIANBEVT",259,0)
 ;   0 = none
"RTN","CIANBEVT",260,0)
 ;   1 = same
"RTN","CIANBEVT",261,0)
 ;   2 = A is parent of B
"RTN","CIANBEVT",262,0)
 ;   3 = B is parent of A
"RTN","CIANBEVT",263,0)
RELATES(EVA,EVB) ;EP
"RTN","CIANBEVT",264,0)
 N SWP,X
"RTN","CIANBEVT",265,0)
 S:EVA=+EVA EVA=$$EVENTNAM(EVA)
"RTN","CIANBEVT",266,0)
 S:EVB=+EVB EVB=$$EVENTNAM(EVB)
"RTN","CIANBEVT",267,0)
 S:$L(EVA)>$L(EVB) SWP=EVA,EVA=EVB,EVB=SWP
"RTN","CIANBEVT",268,0)
 Q:EVA=EVB 1
"RTN","CIANBEVT",269,0)
 F  D  Q:'$L(EVB)!(EVA=EVB)
"RTN","CIANBEVT",270,0)
 .S EVB=$P(EVB,".",1,$L(EVB,".")-1)
"RTN","CIANBEVT",271,0)
 Q $S(EVA'=EVB:0,$D(SWP):3,1:2)
"RTN","CIANBINI")
0^8^B15306499
"RTN","CIANBINI",1,0)
CIANBINI ;MSC/IND/DKM - MSC RPC Broker Installation ;25-Jun-2012 15:27;PLS
"RTN","CIANBINI",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007,001009**;Sep 18, 2007;Build 4
"RTN","CIANBINI",3,0)
 ;;Copyright 2000-2012, Medsphere Systems Corporation
"RTN","CIANBINI",4,0)
 ;=================================================================
"RTN","CIANBINI",5,0)
 ; Environment check
"RTN","CIANBINI",6,0)
EC D PATCH("XPAREDT2","26,35,52","KERNEL TOOLKIT")
"RTN","CIANBINI",7,0)
 D RTNTST("CIAU",1.2,"CIA UTILITIES 1.2")
"RTN","CIANBINI",8,0)
 D OBJCHK
"RTN","CIANBINI",9,0)
 I '$G(XPDQUIT),$G(XPDENV)=1 D
"RTN","CIANBINI",10,0)
 .N X
"RTN","CIANBINI",11,0)
 .L +^XTMP("CIANBLIS"):0
"RTN","CIANBINI",12,0)
 .I  L -^XTMP("CIANBLIS") Q
"RTN","CIANBINI",13,0)
 .D MES("One or more broker processes are currently running."),MES()
"RTN","CIANBINI",14,0)
 .I '$$ASK^CIAU("   Do you wish to continue the installation") S XPDABORT=2
"RTN","CIANBINI",15,0)
 .E  D:$L($T(+0^CIANBLIS)) STOPALL^CIANBLIS
"RTN","CIANBINI",16,0)
 .F X="XPI1","XPO1","XPZ1" S XPDDIQ(X)=0
"RTN","CIANBINI",17,0)
 .S XPDNOQUE=1
"RTN","CIANBINI",18,0)
 Q
"RTN","CIANBINI",19,0)
 ; Check if specified routine is installed
"RTN","CIANBINI",20,0)
RTNTST(RTN,VN,MSG) ;
"RTN","CIANBINI",21,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","CIANBINI",22,0)
 Q
"RTN","CIANBINI",23,0)
 ; Get version # for specified routine
"RTN","CIANBINI",24,0)
RTNVER(RTN) ;
"RTN","CIANBINI",25,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","CIANBINI",26,0)
 ; Check patch #s for specified routine
"RTN","CIANBINI",27,0)
PATCH(RTN,PN,MSG) ;
"RTN","CIANBINI",28,0)
 N X,Y,L,F
"RTN","CIANBINI",29,0)
 F X=1:1:$L(PN,",") D
"RTN","CIANBINI",30,0)
 .S Y=$P(PN,",",X),F=0
"RTN","CIANBINI",31,0)
 .F L=2,3 D  Q:F
"RTN","CIANBINI",32,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","CIANBINI",33,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","CIANBINI",34,0)
 Q
"RTN","CIANBINI",35,0)
 ; Check binary version against M system
"RTN","CIANBINI",36,0)
OBJCHK ; EP
"RTN","CIANBINI",37,0)
 N VER,MSYS
"RTN","CIANBINI",38,0)
 D GETMSYS(.MSYS,.VER)
"RTN","CIANBINI",39,0)
 Q:'$D(MSYS)
"RTN","CIANBINI",40,0)
 I '$D(VER) D
"RTN","CIANBINI",41,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","CIANBINI",42,0)
 E  I VER="" D
"RTN","CIANBINI",43,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","CIANBINI",44,0)
 Q
"RTN","CIANBINI",45,0)
 ; Get M system type and target version
"RTN","CIANBINI",46,0)
GETMSYS(MSYS,VER) ;
"RTN","CIANBINI",47,0)
 K MSYS,VER
"RTN","CIANBINI",48,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","CIANBINI",49,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","CIANBINI",50,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","CIANBINI",51,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","CIANBINI",52,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","CIANBINI",53,0)
 Q
"RTN","CIANBINI",54,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","CIANBINI",55,0)
MES(MSG,QUIT) ;
"RTN","CIANBINI",56,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","CIANBINI",57,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","CIANBINI",58,0)
 Q
"RTN","CIANBINI",59,0)
 ; Pre-init
"RTN","CIANBINI",60,0)
PRE S @XPDGREF@("NEW")=$D(^CIANB)<10
"RTN","CIANBINI",61,0)
 D OBJINST
"RTN","CIANBINI",62,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","CIANBINI",63,0)
 Q
"RTN","CIANBINI",64,0)
 ; Post-init
"RTN","CIANBINI",65,0)
POST X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","CIANBINI",66,0)
 D CVT,DEFPAR
"RTN","CIANBINI",67,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","CIANBINI",68,0)
 D:$G(@XPDGREF@("NEW")) TEDH^XPAREDIT("CIANB SITE PARAMETERS","BA")
"RTN","CIANBINI",69,0)
 D CLEANUP^CIANBUTL,STARTALL^CIANBLIS
"RTN","CIANBINI",70,0)
 K ^DIC(19941.24,0,"RD")
"RTN","CIANBINI",71,0)
 Q
"RTN","CIANBINI",72,0)
 ; Convert entries from old event file
"RTN","CIANBINI",73,0)
CVT N X,FN
"RTN","CIANBINI",74,0)
 S FN=19941.21
"RTN","CIANBINI",75,0)
 Q:$O(^CIANB(FN,0))!'$O(^CIAVEVT(0))
"RTN","CIANBINI",76,0)
 S X=$P(^CIANB(FN,0),U,1,2)
"RTN","CIANBINI",77,0)
 M ^CIANB(FN)=^CIAVEVT
"RTN","CIANBINI",78,0)
 S $P(^CIANB(FN,0),U,1,2)=X,X=0
"RTN","CIANBINI",79,0)
 F  S X=$O(^CIANB(FN,X)) Q:'X  D
"RTN","CIANBINI",80,0)
 .D CVTX(2,99,99)
"RTN","CIANBINI",81,0)
 .D CVTX(3,20,"2P")
"RTN","CIANBINI",82,0)
 Q
"RTN","CIANBINI",83,0)
 ; Move multiples to new nodes and fix sfn
"RTN","CIANBINI",84,0)
CVTX(NF,NT,SN) ;
"RTN","CIANBINI",85,0)
 M ^CIANB(FN,X,NT)=^CIANB(FN,X,NF)
"RTN","CIANBINI",86,0)
 K ^CIANB(FN,X,NF)
"RTN","CIANBINI",87,0)
 S $P(^CIANB(FN,X,NT,0),U,2)=FN_SN
"RTN","CIANBINI",88,0)
 Q
"RTN","CIANBINI",89,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","CIANBINI",90,0)
DEFPAR N V,X,Y,Z
"RTN","CIANBINI",91,0)
 D MES("Setting up default site parameters...")
"RTN","CIANBINI",92,0)
 D DEL^XPAR("PKG","CIANB AUTHENTICATION",1)
"RTN","CIANBINI",93,0)
 F X=0:0 S X=$O(@XPDGREF@("PARAM",X)) Q:'X  M Z=^(X) D
"RTN","CIANBINI",94,0)
 .S Y=Z,Z=$$MSG^CIAU($P(Y,U,3,999),"|",0),V=$$MSG^CIAU($P(Y,U,2),"|"),Y=$P(Y,U)
"RTN","CIANBINI",95,0)
 .D ADD^XPAR("PKG",Y,V,.Z)
"RTN","CIANBINI",96,0)
 Q
"RTN","CIANBINI",97,0)
 ; Install routine binaries
"RTN","CIANBINI",98,0)
OBJINST ; EP
"RTN","CIANBINI",99,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","CIANBINI",100,0)
 D GETMSYS(.MSYS,.VER)
"RTN","CIANBINI",101,0)
 Q:'$D(MSYS)
"RTN","CIANBINI",102,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","CIANBINI",103,0)
 S RTN=""
"RTN","CIANBINI",104,0)
 D MES("Installing Routine Binaries...")
"RTN","CIANBINI",105,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","CIANBINI",106,0)
 .X "ZR  ZS @RTN"
"RTN","CIANBINI",107,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","CIANBINI",108,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","CIANBINI",109,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^CIAUUU(OBJ),1:OBJ)
"RTN","CIANBINI",110,0)
 .D MES("  "_RTN_" installed.")
"RTN","CIANBINI",111,0)
 Q
"RTN","CIANBLIS")
0^4^B58819275
"RTN","CIANBLIS",1,0)
CIANBLIS ;MSC/IND/DKM - MSC RPC Broker ;23-Mar-2011 18:36;PLS
"RTN","CIANBLIS",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007,001008**;Sep 18, 2007;Build 4
"RTN","CIANBLIS",3,0)
 ;;Copyright 2000-2011, Medsphere Systems Corporation
"RTN","CIANBLIS",4,0)
 ;=================================================================
"RTN","CIANBLIS",5,0)
 ; Start listener process (primary and secondary)
"RTN","CIANBLIS",6,0)
 ;   CIAPORT = Listener port
"RTN","CIANBLIS",7,0)
 ;   CIAIP = IP address of client
"RTN","CIANBLIS",8,0)
 ;   CIAMODE = Connection type:
"RTN","CIANBLIS",9,0)
 ;     0: primary listener - dispatches connections
"RTN","CIANBLIS",10,0)
 ;     1: secondary listener - services individual clients
"RTN","CIANBLIS",11,0)
 ;     2: secondary listener - concurrent mode
"RTN","CIANBLIS",12,0)
 ;
"RTN","CIANBLIS",13,0)
EN(CIAPORT,CIAIP,CIAMODE) ;PEP - See above
"RTN","CIANBLIS",14,0)
 N CIAVER,CIAOS,CIATDEV,CIAQUIT,CIALN,CIAXUT,CIAUCI,CIARETRY,XWBOS,X,Y,$ET,$ES
"RTN","CIANBLIS",15,0)
 D UCI^%ZOSV
"RTN","CIANBLIS",16,0)
 S U="^",CIAUCI=$P(Y,","),CIAMODE=+$G(CIAMODE),CIAIP=$G(CIAIP),(CIAQUIT,CIARETRY)=0
"RTN","CIANBLIS",17,0)
 D MONSTART^CIANBEVT                                                   ; Start background event monitor if not already running
"RTN","CIANBLIS",18,0)
 S:'$G(CIAPORT) CIAPORT=9000                                           ; Default service port
"RTN","CIANBLIS",19,0)
 Q:'$$STATE(1)                                                         ; Quit if listener already running
"RTN","CIANBLIS",20,0)
 S Y=$G(^%ZOSF("OS")),(CIAOS,X)=0
"RTN","CIANBLIS",21,0)
 F XWBOS="DSM","MSM","OpenM" S X=X+1 I Y[XWBOS S CIAOS=X Q
"RTN","CIANBLIS",22,0)
 D:'CIAOS RAISE(15,Y)
"RTN","CIANBLIS",23,0)
 D CLEANUP,STSAVE(0),NULLOPEN,STSAVE(1)
"RTN","CIANBLIS",24,0)
 D:CIAMODE=1 LOGRSRC^%ZOSV("$BROKER HANDLER$",2,1)                     ; Start RUM for Broker Handler
"RTN","CIANBLIS",25,0)
 D CHPRN("CIA"_$S($L(CIAIP):$P(CIAIP,".",3,4)_":"_CIAPORT,1:CIAPORT))  ; Change process name
"RTN","CIANBLIS",26,0)
 D LISTEN
"RTN","CIANBLIS",27,0)
 D:CIAMODE=1 LOGRSRC^%ZOSV("$BROKER HANDLER$",2,2)                     ; Stop RUM for handler
"RTN","CIANBLIS",28,0)
 D:CIAQUIT>0!'CIAMODE STATE(0),STREST(1),^%ZISC,STREST(0),CLEANUP,LOGOUT^XUSRB:$G(DUZ)
"RTN","CIANBLIS",29,0)
 I 'CIAMODE,'CIAQUIT J EN^CIANBLIS(CIAPORT)                            ; Restart primary listener after fatal error
"RTN","CIANBLIS",30,0)
 Q
"RTN","CIANBLIS",31,0)
 ; Entry point for interactive debugging
"RTN","CIANBLIS",32,0)
DEBUG N CIAPORT,CIAIP
"RTN","CIANBLIS",33,0)
 W !!,"Debug Mode Support",!!
"RTN","CIANBLIS",34,0)
 S CIAIP=$$PMPT("Addr","Enter callback IP address.","127.0.0.1")
"RTN","CIANBLIS",35,0)
 Q:U[CIAIP
"RTN","CIANBLIS",36,0)
 S CIAPORT=$$PMPT("Port","Enter callback port.")
"RTN","CIANBLIS",37,0)
 Q:U[CIAPORT
"RTN","CIANBLIS",38,0)
 I $L($T(^%Serenji)),$$ASK^CIAU("Use Serenji Debugger","Y") D  Q
"RTN","CIANBLIS",39,0)
 .N SRJIP,SRJPORT
"RTN","CIANBLIS",40,0)
 .S SRJIP=$$PMPT("Serenji Listener Addr","Enter Serenji listener address",CIAIP)
"RTN","CIANBLIS",41,0)
 .Q:U[SRJIP
"RTN","CIANBLIS",42,0)
 .S SRJPORT=$$PMPT("Serenji Listener Port","Enter Serenji listener port",4321)
"RTN","CIANBLIS",43,0)
 .Q:U[SRJPORT
"RTN","CIANBLIS",44,0)
 .D DEBUG^%Serenji("EN^CIANBLIS(CIAPORT,CIAIP,1)",SRJIP,SRJPORT)
"RTN","CIANBLIS",45,0)
 W !
"RTN","CIANBLIS",46,0)
 D EN(CIAPORT,CIAIP,1)
"RTN","CIANBLIS",47,0)
 Q
"RTN","CIANBLIS",48,0)
PMPT(PMPT,HELP,DFLT) ;
"RTN","CIANBLIS",49,0)
 N RET
"RTN","CIANBLIS",50,0)
PMPTX W PMPT,": ",$S($D(DFLT):DFLT_"// ",1:"")
"RTN","CIANBLIS",51,0)
 R RET:$G(DTIME,30)
"RTN","CIANBLIS",52,0)
 E  S RET=U
"RTN","CIANBLIS",53,0)
 I $D(DFLT),'$L(RET) S RET=DFLT W DFLT
"RTN","CIANBLIS",54,0)
 W !
"RTN","CIANBLIS",55,0)
 I RET["?" W !,HELP,!! G PMPTX
"RTN","CIANBLIS",56,0)
 Q RET
"RTN","CIANBLIS",57,0)
 ; Entry point for MSERVER process (MSM only)
"RTN","CIANBLIS",58,0)
MSERVER D EN(%("PORT"),%("ADDRESS"),2)
"RTN","CIANBLIS",59,0)
 Q
"RTN","CIANBLIS",60,0)
 ; Entry point for UCX process (DSM only)
"RTN","CIANBLIS",61,0)
USERVER D EN($P(%,":",2),$P(%,":"),2)
"RTN","CIANBLIS",62,0)
 Q
"RTN","CIANBLIS",63,0)
 ; Start primary listener
"RTN","CIANBLIS",64,0)
START(CIAPORT) ;EP
"RTN","CIANBLIS",65,0)
 D SSLIS(,CIAPORT,,1),CLEANUP^CIANBUTL
"RTN","CIANBLIS",66,0)
 Q
"RTN","CIANBLIS",67,0)
 ; Stop primary or secondary listener
"RTN","CIANBLIS",68,0)
STOP(CIAPORT,CIAIP) ;EP
"RTN","CIANBLIS",69,0)
 D SSLIS(.CIAIP,CIAPORT,,0)
"RTN","CIANBLIS",70,0)
 Q
"RTN","CIANBLIS",71,0)
 ; Start all primary listeners
"RTN","CIANBLIS",72,0)
STARTALL ;PEP - see above
"RTN","CIANBLIS",73,0)
 D SSALL(1)
"RTN","CIANBLIS",74,0)
 Q
"RTN","CIANBLIS",75,0)
 ; Stop all primary listeners
"RTN","CIANBLIS",76,0)
STOPALL ;PEP - see above
"RTN","CIANBLIS",77,0)
 D SSALL(0)
"RTN","CIANBLIS",78,0)
 Q
"RTN","CIANBLIS",79,0)
 ; Start/stop all registered listeners
"RTN","CIANBLIS",80,0)
SSALL(SS,SL) ;
"RTN","CIANBLIS",81,0)
 N IEN,X
"RTN","CIANBLIS",82,0)
 S SL=$G(SL,$D(ZTQUEUED)),U="^"
"RTN","CIANBLIS",83,0)
 F IEN=0:0 S IEN=$O(^CIANB(19941.22,IEN)) Q:'IEN  S X=^(IEN,0) D
"RTN","CIANBLIS",84,0)
 .I SS,$P(X,U,3) Q
"RTN","CIANBLIS",85,0)
 .W:'SL !,$P(X,U),": "
"RTN","CIANBLIS",86,0)
 .D SSLIS(,$P(X,U,2),$P(X,U,4),SS,SL)
"RTN","CIANBLIS",87,0)
 Q
"RTN","CIANBLIS",88,0)
 ; Start/stop primary listener
"RTN","CIANBLIS",89,0)
SSLIS(CIAIP,CIAPORT,CIAUCI,SS,SL) ;
"RTN","CIANBLIS",90,0)
 N CIALN,X,P1,P2,$ET
"RTN","CIANBLIS",91,0)
 S SL=$G(SL,$D(ZTQUEUED))
"RTN","CIANBLIS",92,0)
 S:'SL $ET="D SSERR^CIANBLIS"
"RTN","CIANBLIS",93,0)
 S P1=$S(SS:"start",1:"stop"),P2=P1_$S(SS:"ed",1:"ped")
"RTN","CIANBLIS",94,0)
 I $$STATE=SS W:'SL "Listener ",$S(SS:"already",1:"not")," running on port ",CIAPORT,!! Q
"RTN","CIANBLIS",95,0)
 I 'SS S @$$LOCKNODE=1
"RTN","CIANBLIS",96,0)
 E  I $L($G(CIAUCI)) D
"RTN","CIANBLIS",97,0)
 .J EN^CIANBLIS(CIAPORT)[CIAUCI]
"RTN","CIANBLIS",98,0)
 E  J EN^CIANBLIS(CIAPORT)
"RTN","CIANBLIS",99,0)
 Q:SL
"RTN","CIANBLIS",100,0)
 W "Waiting for listener to ",P1,"..."
"RTN","CIANBLIS",101,0)
 F X=1:1:5 D
"RTN","CIANBLIS",102,0)
 .H 2
"RTN","CIANBLIS",103,0)
 .W "."
"RTN","CIANBLIS",104,0)
 .S:$$STATE=SS X=99
"RTN","CIANBLIS",105,0)
 I X<99 W "Listener failed to ",P1,!
"RTN","CIANBLIS",106,0)
 E  W "Listener ",P2," on port ",CIAPORT,!
"RTN","CIANBLIS",107,0)
 Q
"RTN","CIANBLIS",108,0)
SSERR W:'$G(SL) "Listener failed to ",P1,": ",$$EC^%ZOSV,!
"RTN","CIANBLIS",109,0)
 S $ET="D UNWIND^%ZTER"
"RTN","CIANBLIS",110,0)
 Q
"RTN","CIANBLIS",111,0)
 ; Main loop
"RTN","CIANBLIS",112,0)
LISTEN N $ET,$ES
"RTN","CIANBLIS",113,0)
 S $ET="D ETRAP1^CIANBLIS",CIARETRY=0,CIAQUIT='$$TCPOPEN
"RTN","CIANBLIS",114,0)
 F  Q:$$QUIT  D
"RTN","CIANBLIS",115,0)
 .N $ET,$ES
"RTN","CIANBLIS",116,0)
 .S:$$DOACTION($S(CIAMODE=2&(CIAOS'=3):"C",CIAMODE:"DPQRSU",1:"C")) CIARETRY=0
"RTN","CIANBLIS",117,0)
 D TCPCLOSE
"RTN","CIANBLIS",118,0)
 Q
"RTN","CIANBLIS",119,0)
 ; Read action and params
"RTN","CIANBLIS",120,0)
 ;  VAC = List of valid action codes
"RTN","CIANBLIS",121,0)
 ; Returns true if valid inputs
"RTN","CIANBLIS",122,0)
DOACTION(VAC) ;
"RTN","CIANBLIS",123,0)
 N NM,SB,RT,VL,PR,CIA,ACT,SEQ,ARG,CIAERR,CIADATA,X
"RTN","CIANBLIS",124,0)
 S CIAERR(0)=0
"RTN","CIANBLIS",125,0)
 D TCPUSE
"RTN","CIANBLIS",126,0)
 S X=$$TCPREAD(8,10)
"RTN","CIANBLIS",127,0)
 Q:$E(X,1,5)'="{CIA}" 0
"RTN","CIANBLIS",128,0)
 S ARG=0,CIA("EOD")=$A(X,6),SEQ=$E(X,7),ACT=$E(X,8)
"RTN","CIANBLIS",129,0)
 F  S NM=$$TCPREADL Q:'$L(NM)  S PR=NM=+NM,RT=$S(PR:"P"_NM,1:"CIA("""_NM_"""") N:PR&'$D(ARG(NM)) @RT D
"RTN","CIANBLIS",130,0)
 .S:PR ARG=$S(NM>ARG:NM,1:ARG),ARG(NM)=""
"RTN","CIANBLIS",131,0)
 .S SB=$$TCPREADL,VL=$$TCPREADL
"RTN","CIANBLIS",132,0)
 .I $L(SB) S RT=RT_$S(PR:"(",1:",")_SB_")"
"RTN","CIANBLIS",133,0)
 .E  S:'PR RT=RT_")"
"RTN","CIANBLIS",134,0)
 .S @RT=VL
"RTN","CIANBLIS",135,0)
 W SEQ
"RTN","CIANBLIS",136,0)
 I '$$ERRCHK^CIANBACT(VAC'[ACT,9,ACT) D
"RTN","CIANBLIS",137,0)
 .N $ET,$ES
"RTN","CIANBLIS",138,0)
 .S $ET="D ETRAP2^CIANBLIS"
"RTN","CIANBLIS",139,0)
 .D @("ACT"_ACT_"^CIANBACT")
"RTN","CIANBLIS",140,0)
 I CIAERR(0) D
"RTN","CIANBLIS",141,0)
 .D SNDERR
"RTN","CIANBLIS",142,0)
 E  I $D(CIADATA) D
"RTN","CIANBLIS",143,0)
 .D REPLY(.CIADATA)
"RTN","CIANBLIS",144,0)
 E  D SNDEOD
"RTN","CIANBLIS",145,0)
 D:'CIAMODE TCPREL
"RTN","CIANBLIS",146,0)
 Q 1
"RTN","CIANBLIS",147,0)
 ; Cleanup environment
"RTN","CIANBLIS",148,0)
CLEANUP K ^TMP("CIANBRPC",$J),^TMP("CIANBLIS",$J),^XUTL("XQ",$J),@$$LOCKNODE
"RTN","CIANBLIS",149,0)
 Q
"RTN","CIANBLIS",150,0)
 ; Returns true if listener should quit
"RTN","CIANBLIS",151,0)
QUIT() S:'CIAQUIT CIAQUIT=+$G(@$$LOCKNODE)
"RTN","CIANBLIS",152,0)
 Q CIARETRY>5!CIAQUIT
"RTN","CIANBLIS",153,0)
 ; Save application state
"RTN","CIANBLIS",154,0)
STSAVE(ST) ;
"RTN","CIANBLIS",155,0)
 D SAVE^XUS1
"RTN","CIANBLIS",156,0)
 K ^TMP("CIANBLIS",$J,ST)
"RTN","CIANBLIS",157,0)
 M ^TMP("CIANBLIS",$J,ST)=^XUTL("XQ",$J)
"RTN","CIANBLIS",158,0)
 Q
"RTN","CIANBLIS",159,0)
 ; Restore application state
"RTN","CIANBLIS",160,0)
STREST(ST) ;
"RTN","CIANBLIS",161,0)
 K ^XUTL("XQ",$J)
"RTN","CIANBLIS",162,0)
 M ^XUTL("XQ",$J)=^TMP("CIANBLIS",$J,ST)
"RTN","CIANBLIS",163,0)
 K IO
"RTN","CIANBLIS",164,0)
 D RESETVAR^%ZIS
"RTN","CIANBLIS",165,0)
 I ST,$D(IO)#2 D
"RTN","CIANBLIS",166,0)
 .N $ET
"RTN","CIANBLIS",167,0)
 .S $ET="S $EC="""" D NULLOPEN^CIANBLIS"
"RTN","CIANBLIS",168,0)
 .U IO
"RTN","CIANBLIS",169,0)
 Q
"RTN","CIANBLIS",170,0)
 ; Establish null device as default IO device
"RTN","CIANBLIS",171,0)
NULLOPEN N %ZIS,IOP,POP
"RTN","CIANBLIS",172,0)
 S %ZIS="0H",IOP="NULL"
"RTN","CIANBLIS",173,0)
 D ^%ZIS,RAISE(16):POP
"RTN","CIANBLIS",174,0)
 U IO
"RTN","CIANBLIS",175,0)
 Q
"RTN","CIANBLIS",176,0)
 ; Open TCP listener port
"RTN","CIANBLIS",177,0)
 ; Returns true if successful
"RTN","CIANBLIS",178,0)
TCPOPEN() ;
"RTN","CIANBLIS",179,0)
 N POP
"RTN","CIANBLIS",180,0)
 S POP=0
"RTN","CIANBLIS",181,0)
 I CIAMODE=2 D
"RTN","CIANBLIS",182,0)
 .S CIATDEV=$S(CIAOS=1:"SYS$NET",CIAOS=2:56,1:$P)
"RTN","CIANBLIS",183,0)
 .I CIAOS=1 O CIATDEV:TCPDEV:5 S POP='$T
"RTN","CIANBLIS",184,0)
 I CIAMODE=1 D
"RTN","CIANBLIS",185,0)
 .D CALL^%ZISTCP(CIAIP,CIAPORT)
"RTN","CIANBLIS",186,0)
 .Q:POP
"RTN","CIANBLIS",187,0)
 .S CIATDEV=IO,IO(0)=IO
"RTN","CIANBLIS",188,0)
 .D:$T(SHARELIC^%ZOSV)'="" SHARELIC^%ZOSV(1)
"RTN","CIANBLIS",189,0)
 I 'CIAMODE D
"RTN","CIANBLIS",190,0)
 .I CIAOS=1 D
"RTN","CIANBLIS",191,0)
 ..S CIATDEV=CIAPORT
"RTN","CIANBLIS",192,0)
 ..O CIATDEV:TCPCHAN:5
"RTN","CIANBLIS",193,0)
 ..S POP='$T
"RTN","CIANBLIS",194,0)
 .I CIAOS=2 S CIATDEV=56
"RTN","CIANBLIS",195,0)
 .I CIAOS=3 D
"RTN","CIANBLIS",196,0)
 ..S CIATDEV="|TCP|"_CIAPORT
"RTN","CIANBLIS",197,0)
 ..O CIATDEV:(:CIAPORT:"DS"):5
"RTN","CIANBLIS",198,0)
 ..S POP='$T
"RTN","CIANBLIS",199,0)
 Q 'POP
"RTN","CIANBLIS",200,0)
 ; Use TCP listener port
"RTN","CIANBLIS",201,0)
TCPUSE I CIAOS=1 U CIATDEV Q
"RTN","CIANBLIS",202,0)
 I CIAOS=2 D  Q
"RTN","CIANBLIS",203,0)
 .I CIAMODE U CIATDEV S:$ZC CIAQUIT=1 Q
"RTN","CIANBLIS",204,0)
 .O CIATDEV
"RTN","CIANBLIS",205,0)
 .U CIATDEV::"TCP"
"RTN","CIANBLIS",206,0)
 .W /SOCKET("",CIAPORT)
"RTN","CIANBLIS",207,0)
 I CIAOS=3 U CIATDEV
"RTN","CIANBLIS",208,0)
 Q
"RTN","CIANBLIS",209,0)
 ; Close TCP listener port
"RTN","CIANBLIS",210,0)
TCPCLOSE C:$D(CIATDEV) CIATDEV
"RTN","CIANBLIS",211,0)
 Q
"RTN","CIANBLIS",212,0)
 ; Release TCP port
"RTN","CIANBLIS",213,0)
TCPREL I CIAOS=1 U CIATDEV:DISCONNECT Q
"RTN","CIANBLIS",214,0)
 I CIAOS=2 C CIATDEV Q
"RTN","CIANBLIS",215,0)
 I CIAOS=3 W *-3,*-2
"RTN","CIANBLIS",216,0)
 Q
"RTN","CIANBLIS",217,0)
 ; Read from listener port
"RTN","CIANBLIS",218,0)
TCPREAD(CNT,TMO) ;
"RTN","CIANBLIS",219,0)
 N X,Y
"RTN","CIANBLIS",220,0)
 S Y="",TMO=$G(TMO,60)
"RTN","CIANBLIS",221,0)
 F  Q:CNT'>0  D
"RTN","CIANBLIS",222,0)
 .R X#CNT:TMO
"RTN","CIANBLIS",223,0)
 .I '$L(X) S Y="",CNT=0 S:CIAMODE=2 CIARETRY=CIARETRY+.5
"RTN","CIANBLIS",224,0)
 .E  S Y=Y_X,CNT=CNT-$L(X)
"RTN","CIANBLIS",225,0)
 Q Y
"RTN","CIANBLIS",226,0)
 ; Read byte from listener port
"RTN","CIANBLIS",227,0)
TCPREADB() ;
"RTN","CIANBLIS",228,0)
 Q $A($$TCPREAD(1))
"RTN","CIANBLIS",229,0)
 ; Read length-prefixed data from input stream
"RTN","CIANBLIS",230,0)
TCPREADL() ;
"RTN","CIANBLIS",231,0)
 N X,L,I,N
"RTN","CIANBLIS",232,0)
 S X=$$TCPREADB
"RTN","CIANBLIS",233,0)
 Q:X=CIA("EOD") ""
"RTN","CIANBLIS",234,0)
 S N=X#16,X=$$TCPREAD(X\16),L=0
"RTN","CIANBLIS",235,0)
 F I=1:1:$L(X) S L=L*256+$A(X,I)
"RTN","CIANBLIS",236,0)
 Q $$TCPREAD(L*16+N)
"RTN","CIANBLIS",237,0)
 ; Raise an exception
"RTN","CIANBLIS",238,0)
RAISE(MSG,P1,P2) ;
"RTN","CIANBLIS",239,0)
 D GETDLG^CIANBUTL(MSG,.MSG,.P1,.P2)
"RTN","CIANBLIS",240,0)
 S $EC=MSG(1)
"RTN","CIANBLIS",241,0)
 Q
"RTN","CIANBLIS",242,0)
 ; Communication error
"RTN","CIANBLIS",243,0)
ETRAP1 N ECSAV
"RTN","CIANBLIS",244,0)
 S $ET="D UNWIND^CIANBLIS Q:$Q 0 Q",ECSAV=$EC,CIARETRY=CIARETRY+1
"RTN","CIANBLIS",245,0)
 D:CIARETRY=1&(ECSAV'["READ") ^%ZTER
"RTN","CIANBLIS",246,0)
 S $EC=ECSAV
"RTN","CIANBLIS",247,0)
 Q
"RTN","CIANBLIS",248,0)
 ; Unwind stack
"RTN","CIANBLIS",249,0)
UNWIND Q:$ES>1
"RTN","CIANBLIS",250,0)
 S $EC=""
"RTN","CIANBLIS",251,0)
 Q
"RTN","CIANBLIS",252,0)
 ; Trapped error, send error info to client
"RTN","CIANBLIS",253,0)
ETRAP2 N ECSAV
"RTN","CIANBLIS",254,0)
 S $ET="D UNWIND^CIANBLIS Q:$Q 0 Q",ECSAV=$$EC^%ZOSV,CIARETRY=CIARETRY+1
"RTN","CIANBLIS",255,0)
 D:CIARETRY=1 ^%ZTER,ERRCHK^CIANBACT(1,1,ECSAV)
"RTN","CIANBLIS",256,0)
 S $EC=ECSAV
"RTN","CIANBLIS",257,0)
 Q
"RTN","CIANBLIS",258,0)
 ; Send a reply
"RTN","CIANBLIS",259,0)
REPLY(DATA,ACK) ;
"RTN","CIANBLIS",260,0)
 D TCPUSE
"RTN","CIANBLIS",261,0)
 W $C(+$G(ACK)),$G(DATA)
"RTN","CIANBLIS",262,0)
 D SNDEOD
"RTN","CIANBLIS",263,0)
 Q
"RTN","CIANBLIS",264,0)
 ; Send error information
"RTN","CIANBLIS",265,0)
SNDERR ;
"RTN","CIANBLIS",266,0)
 N X
"RTN","CIANBLIS",267,0)
 D TCPUSE
"RTN","CIANBLIS",268,0)
 W $C(1)
"RTN","CIANBLIS",269,0)
 D OUT^CIANBACT("CIAERR",1),SNDEOD
"RTN","CIANBLIS",270,0)
 S CIAERR(0)=0
"RTN","CIANBLIS",271,0)
 Q
"RTN","CIANBLIS",272,0)
 ; Send end of data byte if not already sent
"RTN","CIANBLIS",273,0)
SNDEOD I $D(CIA("EOD")) D
"RTN","CIANBLIS",274,0)
 .D TCPUSE
"RTN","CIANBLIS",275,0)
 .W $C(CIA("EOD")),!
"RTN","CIANBLIS",276,0)
 .K CIA("EOD")
"RTN","CIANBLIS",277,0)
 Q
"RTN","CIANBLIS",278,0)
 ; Lock/Unlock listener
"RTN","CIANBLIS",279,0)
 ; CIAACT:  1 = lock, 0 = unlock, missing = return status
"RTN","CIANBLIS",280,0)
 ; Returns true if locked, false if not.
"RTN","CIANBLIS",281,0)
STATE(CIAACT) ;
"RTN","CIANBLIS",282,0)
 N RES,Y
"RTN","CIANBLIS",283,0)
 S Y=$$LOCKNODE
"RTN","CIANBLIS",284,0)
 I '$D(CIAACT) D
"RTN","CIANBLIS",285,0)
 .L +@Y:0
"RTN","CIANBLIS",286,0)
 .S RES='$T
"RTN","CIANBLIS",287,0)
 .L:'RES -@Y
"RTN","CIANBLIS",288,0)
 E  I CIAACT D
"RTN","CIANBLIS",289,0)
 .L +@Y:1
"RTN","CIANBLIS",290,0)
 .S RES=$T
"RTN","CIANBLIS",291,0)
 E  D
"RTN","CIANBLIS",292,0)
 .L -@Y
"RTN","CIANBLIS",293,0)
 .S RES=0
"RTN","CIANBLIS",294,0)
 Q:$Q RES
"RTN","CIANBLIS",295,0)
 Q
"RTN","CIANBLIS",296,0)
 ; Get global reference for lock node
"RTN","CIANBLIS",297,0)
LOCKNODE(LN) ;
"RTN","CIANBLIS",298,0)
 S:'$D(LN) LN=$NA(^[$G(CIAUCI)]XTMP("CIANBLIS",$G(CIAIP)_":"_CIAPORT_$S($G(CIAMODE)=2:":"_$J,1:"")))
"RTN","CIANBLIS",299,0)
 Q:$Q LN
"RTN","CIANBLIS",300,0)
 Q
"RTN","CIANBLIS",301,0)
 ; Change process name to X
"RTN","CIANBLIS",302,0)
CHPRN(X) D SETNM^%ZOSV($E(X,1,15))
"RTN","CIANBLIS",303,0)
 Q
"RTN","CIANBLOG")
0^7^B10435539
"RTN","CIANBLOG",1,0)
CIANBLOG ;MSC/IND/DKM - MSC RPC Broker Activity Log Support ;10-Jan-2011 13:06;PLS
"RTN","CIANBLOG",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007,001008**;Jan 3, 2008;Build 4
"RTN","CIANBLOG",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBLOG",4,0)
 ;=================================================================
"RTN","CIANBLOG",5,0)
 ; Open a log entry.  The return value is the IEN of the new entry.
"RTN","CIANBLOG",6,0)
 ;   UID  = Unique session id
"RTN","CIANBLOG",7,0)
 ;   USER = User IEN
"RTN","CIANBLOG",8,0)
 ;   WID  = Workstation id
"RTN","CIANBLOG",9,0)
OPEN(UID,USER,WID) ;EP
"RTN","CIANBLOG",10,0)
 N IEN,NOW,X
"RTN","CIANBLOG",11,0)
 S NOW=$$NOW^XLFDT
"RTN","CIANBLOG",12,0)
 S:$G(WID)="" WID="UNKNOWN"
"RTN","CIANBLOG",13,0)
 L +^CIANB(19941.24,0):2
"RTN","CIANBLOG",14,0)
 S X=1+$P(^CIANB(19941.24,0),U,3),IEN=$O(^($C(1)),-1)+1,$P(^(0),U,3,4)=X_U_IEN,^(IEN,0)=UID_U_USER_U_WID_U_NOW_U_U_DUZ(2)
"RTN","CIANBLOG",15,0)
 L -^CIANB(19941.24,0)
"RTN","CIANBLOG",16,0)
 S ^CIANB(19941.24,"B",UID,IEN)=""
"RTN","CIANBLOG",17,0)
 S ^CIANB(19941.24,"BUSER",USER,IEN)=""
"RTN","CIANBLOG",18,0)
 S ^CIANB(19941.24,"BWID",WID,IEN)=""
"RTN","CIANBLOG",19,0)
 S ^CIANB(19941.24,"BLOGIN",NOW,IEN)=""
"RTN","CIANBLOG",20,0)
 S ^CIANB(19941.24,"BDIV",DUZ(2),IEN)=""
"RTN","CIANBLOG",21,0)
 Q IEN
"RTN","CIANBLOG",22,0)
 ; Close a log entry.
"RTN","CIANBLOG",23,0)
 ;  IEN = IEN of the entry.
"RTN","CIANBLOG",24,0)
CLOSE(IEN) ;EP
"RTN","CIANBLOG",25,0)
 N NOW
"RTN","CIANBLOG",26,0)
 S NOW=$$NOW^XLFDT
"RTN","CIANBLOG",27,0)
 S:$D(^CIANB(19941.24,+IEN,0)) $P(^(0),U,5)=NOW,^CIANB(19941.24,"BLOGOUT",NOW,IEN)=""
"RTN","CIANBLOG",28,0)
 Q
"RTN","CIANBLOG",29,0)
 ; Log an activity
"RTN","CIANBLOG",30,0)
 ;  IEN  = IEN of log entry
"RTN","CIANBLOG",31,0)
 ;  TYPE = Type of log entry (1=RPC, 2=Event)
"RTN","CIANBLOG",32,0)
 ;  NAME = Text name associated with activity
"RTN","CIANBLOG",33,0)
 ;  Returns subfile IEN
"RTN","CIANBLOG",34,0)
LOG(IEN,TYPE,NAME) ;EP
"RTN","CIANBLOG",35,0)
 N SUB,NOW
"RTN","CIANBLOG",36,0)
 Q:'$D(^CIANB(19941.24,IEN)) 0
"RTN","CIANBLOG",37,0)
 S NOW=$$NOW^XLFDT
"RTN","CIANBLOG",38,0)
 S SUB=$O(^CIANB(19941.24,IEN,10,$C(1)),-1)+1,^(0)="^19941.241D^"_SUB_U_SUB,^(SUB,0)=NOW_U_TYPE_U_NAME
"RTN","CIANBLOG",39,0)
 Q SUB
"RTN","CIANBLOG",40,0)
 ; Add an entry to the specified activity
"RTN","CIANBLOG",41,0)
 ;  IEN = IEN of log entry
"RTN","CIANBLOG",42,0)
 ;  SUB = IEN of subfile entry
"RTN","CIANBLOG",43,0)
 ;  ARY = Array or global root
"RTN","CIANBLOG",44,0)
 ;  INC = Include variable name with output (optional)
"RTN","CIANBLOG",45,0)
ADD(IEN,SUB,ARY,INC) ;EP
"RTN","CIANBLOG",46,0)
 N ROOT,WP,A,L,P,X,Y,Z
"RTN","CIANBLOG",47,0)
 S ROOT=$NA(^CIANB(19941.24,IEN,10,SUB,10))
"RTN","CIANBLOG",48,0)
 S WP=$O(@ROOT@($C(1)),-1),WP(0)=WP,INC=+$G(INC),(A,ARY)=$NA(@ARY),L=$QL(ARY)
"RTN","CIANBLOG",49,0)
 F  D:$D(@A)#2  S A=$Q(@A) Q:'$L(A)  Q:$NA(@A,L)'=ARY
"RTN","CIANBLOG",50,0)
 .S X=@A,P=$S(INC:A_" = ",1:"")
"RTN","CIANBLOG",51,0)
 .F  Q:'$L(X)  D
"RTN","CIANBLOG",52,0)
 ..S Y=$F(X,$C(13))
"RTN","CIANBLOG",53,0)
 ..S:'Y!(Y>200) Y=200
"RTN","CIANBLOG",54,0)
 ..S Z=$TR($E(X,1,Y-1),$C(13,10)),X=$E(X,Y,999999)
"RTN","CIANBLOG",55,0)
 ..S WP=WP+1,@ROOT@(WP,0)=P_Z,P=$S(INC:">>> ",1:"")
"RTN","CIANBLOG",56,0)
 S:WP'=WP(0) @ROOT@(0)="^^"_WP_U_WP_U_$$NOW^XLFDT
"RTN","CIANBLOG",57,0)
 Q
"RTN","CIANBLOG",58,0)
 ; Delete a log entry
"RTN","CIANBLOG",59,0)
DELETE(DA) ;
"RTN","CIANBLOG",60,0)
 Q:'$D(^CIANB(19941.24,DA))
"RTN","CIANBLOG",61,0)
 N DIK
"RTN","CIANBLOG",62,0)
 S DIK="^CIANB(19941.24,"
"RTN","CIANBLOG",63,0)
 D ^DIK
"RTN","CIANBLOG",64,0)
 Q
"RTN","CIANBLOG",65,0)
 ; Task purge in background
"RTN","CIANBLOG",66,0)
TASKPRG N ZTSK
"RTN","CIANBLOG",67,0)
 S ZTSK=$$QUEUE^CIAUTSK("DOPURGE^CIANBLOG","Purge CIA ACTIVITY LOG")
"RTN","CIANBLOG",68,0)
 I ZTSK>0 W !,"CIA ACTIVITY LOG purge submitted as task #",ZTSK,!!
"RTN","CIANBLOG",69,0)
 E  W !,"Error submitting CIA ACTIVITY LOG purge.",!!
"RTN","CIANBLOG",70,0)
 Q
"RTN","CIANBLOG",71,0)
 ; Purge log entries according to retention criteria
"RTN","CIANBLOG",72,0)
DOPURGE N DAYS,LP,IEN
"RTN","CIANBLOG",73,0)
 S DAYS=$$GET^XPAR("ALL","CIANB ACTIVITY RETENTION")
"RTN","CIANBLOG",74,0)
 Q:'DAYS
"RTN","CIANBLOG",75,0)
 S LP=$$FMADD^XLFDT(DT,-DAYS)
"RTN","CIANBLOG",76,0)
 F  S LP=$O(^CIANB(19941.24,"BLOGIN",LP),-1) Q:'LP  D
"RTN","CIANBLOG",77,0)
 .S IEN=0
"RTN","CIANBLOG",78,0)
 .F  S IEN=$O(^CIANB(19941.24,"BLOGIN",LP,IEN)) Q:'IEN  D
"RTN","CIANBLOG",79,0)
 ..D DELETE(IEN)
"RTN","CIANBLOG",80,0)
 Q
"RTN","CIANBLOG",81,0)
 ; Returns true if activity logging is active
"RTN","CIANBLOG",82,0)
 ; Creates a log entry if one does not already exist
"RTN","CIANBLOG",83,0)
ISACTIVE() ;
"RTN","CIANBLOG",84,0)
 N RTN,DUZ2
"RTN","CIANBLOG",85,0)
 Q:'$D(CIA("UID")) 0
"RTN","CIANBLOG",86,0)
 Q:'CIA("UID") 0
"RTN","CIANBLOG",87,0)
 S DUZ2=$$GETVAR^CIANBUTL("DUZ2")
"RTN","CIANBLOG",88,0)
 S RTN=$$GETVAR^CIANBUTL("ALOG"_$S(DUZ2:":"_DUZ2,1:""))
"RTN","CIANBLOG",89,0)
 I RTN="" D
"RTN","CIANBLOG",90,0)
 .S RTN=+$$GET^XPAR("ALL","CIANB ACTIVITY LOGGING","`"_$$GETVAR^CIANBUTL("AID0"))
"RTN","CIANBLOG",91,0)
 .S:RTN RTN=$$OPEN(CIA("UID"),DUZ,$$GETVAR^CIANBUTL("WID"))
"RTN","CIANBLOG",92,0)
 .D SETVAR^CIANBUTL("ALOG"_$S(DUZ2:":"_DUZ2,1:""),RTN)
"RTN","CIANBLOG",93,0)
 Q RTN
"RTN","CIANBRPC")
0^5^B60754770
"RTN","CIANBRPC",1,0)
CIANBRPC ;MSC/IND/DKM - MSC RPC Broker Privileged RPCs;20-Apr-2010 10:11;DKM
"RTN","CIANBRPC",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007,001008**;Sep 18, 2007;Build 4
"RTN","CIANBRPC",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBRPC",4,0)
 ;=================================================================
"RTN","CIANBRPC",5,0)
 ; RPC: User authentication
"RTN","CIANBRPC",6,0)
 ; AID = Application ID
"RTN","CIANBRPC",7,0)
 ; WID = Workstation ID
"RTN","CIANBRPC",8,0)
 ; SID = NT Security ID
"RTN","CIANBRPC",9,0)
 ; AVC = AV Code
"RTN","CIANBRPC",10,0)
 ; WIP = Workstation IP address
"RTN","CIANBRPC",11,0)
 ; DIV = Login division (optional)
"RTN","CIANBRPC",12,0)
 ; Returns:
"RTN","CIANBRPC",13,0)
 ;  DATA(0)=Status code^Status text
"RTN","CIANBRPC",14,0)
 ;  where Status code is one of:
"RTN","CIANBRPC",15,0)
 ;   0 = success                 (Params=UID^net name^div name^DUZ)
"RTN","CIANBRPC",16,0)
 ;   1 = success, verify expired (Params=same as success)
"RTN","CIANBRPC",17,0)
 ;   2 = logins inhibited        (Params=null)
"RTN","CIANBRPC",18,0)
 ;   3 = locked                  (Params=null)
"RTN","CIANBRPC",19,0)
 ;   4 = authentication failure  (Params=server^volume^UCI^port)
"RTN","CIANBRPC",20,0)
 ;   5 = other error             (Params=null)
"RTN","CIANBRPC",21,0)
 ;  DATA(1)=Params
"RTN","CIANBRPC",22,0)
 ;  DATA(2,n)=Greeting message
"RTN","CIANBRPC",23,0)
AUTH(DATA,AID,WID,SID,AVC,WIP,DIV) ;
"RTN","CIANBRPC",24,0)
 N XOPT,XUT,XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER,XUNOW,X
"RTN","CIANBRPC",25,0)
 K DUZ,DATA,^TMP($J),^UTILITY($J)
"RTN","CIANBRPC",26,0)
 D SET1^XUS(0)
"RTN","CIANBRPC",27,0)
 S (DUZ,XUT)=0,DUZ(0)="",XUDEV=0,DATA(0)=4,DATA(1)=""
"RTN","CIANBRPC",28,0)
 S AID(0)=$$OPTLKP^CIANBUTL(.AID),WID=$$ID(.WID),SID=$G(SID),WIP=$G(WIP)
"RTN","CIANBRPC",29,0)
 I '$L(AID(0)),$$CHK(18,5,.AID) Q
"RTN","CIANBRPC",30,0)
 S X=$$OPTMSG^CIANBUTL(AID(0))
"RTN","CIANBRPC",31,0)
 I $L(X),$$CHK(19,2,X) Q
"RTN","CIANBRPC",32,0)
 I '$L($G(AVC)) S DUZ=+$$AUTOLOG(SID),CIAXUT=0
"RTN","CIANBRPC",33,0)
 E  D
"RTN","CIANBRPC",34,0)
 .I $E(AVC,1,2)="~1" S DUZ=$$CHKASH^XUSRB4(AVC)
"RTN","CIANBRPC",35,0)
 .S:'DUZ DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVC)),CIAXUT=$G(CIAXUT)+1
"RTN","CIANBRPC",36,0)
 .I 'DUZ,CIAXUT>$P(XOPT,U,2),$$CHK(-7,3) Q
"RTN","CIANBRPC",37,0)
 .I 'DUZ,$$CHK(-4,4)
"RTN","CIANBRPC",38,0)
 I DUZ D
"RTN","CIANBRPC",39,0)
 .S DATA(0)=0,XUNOW=$$NOW^XLFDT,X=$$OPTCHK^CIANBUTL(AID)
"RTN","CIANBRPC",40,0)
 .Q:$$CHK(+X,2,$P(X,U,2),$P(X,U,3),$P(X,U,4))
"RTN","CIANBRPC",41,0)
 .Q:$$CHK(-$$INHIBIT^XUSRB,2)
"RTN","CIANBRPC",42,0)
 .I XUT>$P(XOPT,U,2),$$CHK(-7,3) Q
"RTN","CIANBRPC",43,0)
 .D USER^XUS(DUZ)
"RTN","CIANBRPC",44,0)
 .Q:$$CHK(-$$UVALID^XUS(),4)
"RTN","CIANBRPC",45,0)
 .Q:$$CHK(-$$USER^XUS1A,4)
"RTN","CIANBRPC",46,0)
 .F X=0:0 S X=$O(XUTEXT(X)) Q:'X  S DATA(2,X)=$E(XUTEXT(X),2,9999)
"RTN","CIANBRPC",47,0)
 .D DUZ^XUS1A,SAVE^XUS1,LOG^XUS1,ABT^XQ12
"RTN","CIANBRPC",48,0)
 .I $$VCVALID^XUSRB,$$CHK(-12,1)
"RTN","CIANBRPC",49,0)
 .I $G(CIA("UID")) D
"RTN","CIANBRPC",50,0)
 ..N UID
"RTN","CIANBRPC",51,0)
 ..S UID=CIA("UID"),CIA("UID")=0
"RTN","CIANBRPC",52,0)
 ..I '$D(^XTMP("CIA",UID)),$$CHK(25,5,UID) Q
"RTN","CIANBRPC",53,0)
 ..I $$SESSION^CIANBUTL(UID,"DUZ")'=DUZ,$$CHK(27,4,UID) Q
"RTN","CIANBRPC",54,0)
 ..D:$$ISACTIVE^CIANBUTL(UID) FORCEEX(CIAPORT_":"_$$GETVAR^CIANBUTL("JOB"))
"RTN","CIANBRPC",55,0)
 ..I $$ISACTIVE^CIANBUTL(UID,1,60),$$CHK(26,4,UID) Q
"RTN","CIANBRPC",56,0)
 ..S CIA("UID")=UID
"RTN","CIANBRPC",57,0)
 ..D RESVAR^CIANBUTL,SETVAR^CIANBUTL("JOB",$J)
"RTN","CIANBRPC",58,0)
 ..D BRDCAST^CIANBEVT("LOGIN",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",59,0)
 .E  D
"RTN","CIANBRPC",60,0)
 ..S CIA("UID")=$$UID^CIANBUTL
"RTN","CIANBRPC",61,0)
 ..D:$G(DIV) DIVSET(,DIV)
"RTN","CIANBRPC",62,0)
 ..D RESET(1)
"RTN","CIANBRPC",63,0)
 .S DATA(1)=CIA("UID")_U_$G(^XMB("NETNAME"))_U_$$GET1^DIQ(4,DUZ(2),".01")_U_DUZ
"RTN","CIANBRPC",64,0)
 .S:AID(0) ^XUTL("XQ",$J,1)=AID(0)_U_$G(^DIC(19,AID(0),0)),^("T")=1
"RTN","CIANBRPC",65,0)
 .D AUTOSET(SID),STSAVE^CIANBLIS(1)
"RTN","CIANBRPC",66,0)
 I +DATA(0)=4 D
"RTN","CIANBRPC",67,0)
 .S DATA(1)=$P(XUENV,U,3)_U_$P(XUVOL,U)_U_XUCI_U_+CIAPORT
"RTN","CIANBRPC",68,0)
 .D INTRO^XUS1A("DATA(2)")
"RTN","CIANBRPC",69,0)
 Q
"RTN","CIANBRPC",70,0)
 ; Force exit disconnected broker session
"RTN","CIANBRPC",71,0)
FORCEEX(CIAPORT) ;
"RTN","CIANBRPC",72,0)
 S @$$LOCKNODE^CIANBLIS=-1
"RTN","CIANBRPC",73,0)
 Q
"RTN","CIANBRPC",74,0)
 ; Transform ID values
"RTN","CIANBRPC",75,0)
ID(ID) Q $E($TR($G(ID),U,"~"),1,40)
"RTN","CIANBRPC",76,0)
 ; RPC: Change verify code
"RTN","CIANBRPC",77,0)
CVC(DATA,OLD,NEW) ;
"RTN","CIANBRPC",78,0)
 S DATA=$$BRCVC^XUS2($$DECRYP^XUSRB1(OLD),$$DECRYP^XUSRB1(NEW))
"RTN","CIANBRPC",79,0)
 S:'DATA DATA="0^Your verify code has been changed."
"RTN","CIANBRPC",80,0)
 Q
"RTN","CIANBRPC",81,0)
 ; RPC: Get division list
"RTN","CIANBRPC",82,0)
DIVGET(DATA) ;
"RTN","CIANBRPC",83,0)
 N X,P,G
"RTN","CIANBRPC",84,0)
 S X=0,G=$S(DUZ:$NA(^VA(200,DUZ,2)),1:$NA(^DG(40.8,"AD"))),P=0
"RTN","CIANBRPC",85,0)
 F  S X=$O(@G@(X)) Q:'X  S:DUZ P=$P(^(X,0),U,2) D
"RTN","CIANBRPC",86,0)
 .N X0,X99
"RTN","CIANBRPC",87,0)
 .S X0=$G(^DIC(4,X,0)),X99=$G(^(99))
"RTN","CIANBRPC",88,0)
 .S DATA(X)=X_U_$P(X0,U)_U_$P(X99,U)_U_$P(X0,U,5)
"RTN","CIANBRPC",89,0)
 .S:P DATA(0)=X
"RTN","CIANBRPC",90,0)
 S:'$D(DATA(0)) DATA(0)=+$O(DATA(0))
"RTN","CIANBRPC",91,0)
 I 'DATA(0),$G(DUZ(2)) S DATA(0)=DUZ(2),DATA(DUZ(2))=DUZ(2)_U_$$NS^XUAF4(DUZ(2))
"RTN","CIANBRPC",92,0)
 D:DATA(0) DIVSET(,DATA(0))
"RTN","CIANBRPC",93,0)
 Q
"RTN","CIANBRPC",94,0)
 ; RPC: Set division
"RTN","CIANBRPC",95,0)
DIVSET(DATA,DIV) ;
"RTN","CIANBRPC",96,0)
 S DUZ(2)=+DIV,DATA=1
"RTN","CIANBRPC",97,0)
 D SETVAR^CIANBUTL("DUZ2",DUZ(2))
"RTN","CIANBRPC",98,0)
 D SETVAR^CIANBUTL("DUZ(2)",DUZ(2),-1)
"RTN","CIANBRPC",99,0)
 Q
"RTN","CIANBRPC",100,0)
 ; RPC: Get dialog text
"RTN","CIANBRPC",101,0)
DIALOG(DATA,DLG,P1,P2,P3) ;
"RTN","CIANBRPC",102,0)
 D GETDLG^CIANBUTL(DLG,.DATA,.P1,.P2,.P3)
"RTN","CIANBRPC",103,0)
 Q
"RTN","CIANBRPC",104,0)
 ; RPC: Reset session
"RTN","CIANBRPC",105,0)
RESET(LOGIN) ;
"RTN","CIANBRPC",106,0)
 Q:'$G(CIA("UID"))
"RTN","CIANBRPC",107,0)
 D STOPALL^CIANBASY,UNSUBALL^CIANBEVT
"RTN","CIANBRPC",108,0)
 S LOGIN=+$G(LOGIN)
"RTN","CIANBRPC",109,0)
 N DUZ2
"RTN","CIANBRPC",110,0)
 S DUZ2=$$GETVAR^CIANBUTL("DUZ2")
"RTN","CIANBRPC",111,0)
 I 'LOGIN D
"RTN","CIANBRPC",112,0)
 .D CLOSE^CIANBLOG($$GETVAR^CIANBUTL("ALOG"_$S(DUZ2:":"_DUZ2,1:"")))
"RTN","CIANBRPC",113,0)
 .S IO("IP")=$$GETVAR^CIANBUTL("WIP")
"RTN","CIANBRPC",114,0)
 .D BRDCAST^CIANBEVT("LOGOUT",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",115,0)
 .K ^XTMP("CIA",CIA("UID"))
"RTN","CIANBRPC",116,0)
 .L -^XTMP("CIA",CIA("UID"),0)
"RTN","CIANBRPC",117,0)
 .D BYE^XUSCLEAN
"RTN","CIANBRPC",118,0)
 E  D
"RTN","CIANBRPC",119,0)
 .N ENV,X,Y,V
"RTN","CIANBRPC",120,0)
 .K ^XTMP("CIA",CIA("UID"))
"RTN","CIANBRPC",121,0)
 .F ENV=0:1 S X=$P($T(ENVDATA+ENV),";;",2) Q:'$L(X)  D
"RTN","CIANBRPC",122,0)
 ..S V=$P(X,";",2),@("Y="_V)
"RTN","CIANBRPC",123,0)
 ..D SETVAR^CIANBUTL($P(X,";"),Y)
"RTN","CIANBRPC",124,0)
 ..D:$P(X,";",3) SETVAR^CIANBUTL(V,Y,-1)
"RTN","CIANBRPC",125,0)
 .D BRDCAST^CIANBEVT("LOGIN",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",126,0)
 .S IO("IP")=$$GETVAR^CIANBUTL("WIP")
"RTN","CIANBRPC",127,0)
 .I $$ISACTIVE^CIANBLOG
"RTN","CIANBRPC",128,0)
 .D LOG^XUS1  ;creates handle with client agent
"RTN","CIANBRPC",129,0)
 Q
"RTN","CIANBRPC",130,0)
 ; Environment data to save
"RTN","CIANBRPC",131,0)
 ;;Name;Value;Local
"RTN","CIANBRPC",132,0)
ENVDATA ;;DUZ;DUZ
"RTN","CIANBRPC",133,0)
 ;;DUZ0;DUZ(0);1
"RTN","CIANBRPC",134,0)
 ;;DUZ2;DUZ(2);1
"RTN","CIANBRPC",135,0)
 ;;USER;$P($G(^VA(200,DUZ,0)),U)
"RTN","CIANBRPC",136,0)
 ;;RDEV;$$RESDEV^CIANBUTL
"RTN","CIANBRPC",137,0)
 ;;LDT;$H
"RTN","CIANBRPC",138,0)
 ;;JOB;$J
"RTN","CIANBRPC",139,0)
 ;;AID;AID
"RTN","CIANBRPC",140,0)
 ;;AID0;AID(0)
"RTN","CIANBRPC",141,0)
 ;;WID;WID
"RTN","CIANBRPC",142,0)
 ;;WIP;WIP
"RTN","CIANBRPC",143,0)
 ;;UID;CIA("UID")
"RTN","CIANBRPC",144,0)
 ;;
"RTN","CIANBRPC",145,0)
 ; Check error code
"RTN","CIANBRPC",146,0)
CHK(ERR,RTN,P1,P2,P3) ;
"RTN","CIANBRPC",147,0)
 I ERR S DATA(0)=RTN_U_$S(ERR<0:$$TXT^XUS3(-ERR),1:$$GETDLG^CIANBUTL(ERR,,.P1,.P2,.P3)) S:RTN>1 DUZ=0
"RTN","CIANBRPC",148,0)
 Q ERR
"RTN","CIANBRPC",149,0)
 ; Attempt autoauthenticate using SID
"RTN","CIANBRPC",150,0)
 ; Returns DUZ if SID has been authenticated, 0 if prohibited from
"RTN","CIANBRPC",151,0)
 ; being authenticated, or null if never been authenticated.
"RTN","CIANBRPC",152,0)
AUTOLOG(SID) ;
"RTN","CIANBRPC",153,0)
 S SID=$S($L($G(SID))<3:"",1:$$DECRYP^XUSRB1(SID))
"RTN","CIANBRPC",154,0)
 Q:$E(SID,1,9)'="S-1-5-21-" 0
"RTN","CIANBRPC",155,0)
 S SID=$E(SID,10,999)
"RTN","CIANBRPC",156,0)
 Q:SID<1000 0
"RTN","CIANBRPC",157,0)
 N X
"RTN","CIANBRPC",158,0)
 S X=$$FIND1^DIC(19941.2,"","QX",SID)
"RTN","CIANBRPC",159,0)
 Q $S(X:+$P($G(^CIANB(19941.2,X,0)),U,2),1:"")
"RTN","CIANBRPC",160,0)
 ; Cache NT authentication information
"RTN","CIANBRPC",161,0)
AUTOSET(SID) ;
"RTN","CIANBRPC",162,0)
 Q:$$AUTOLOG(.SID)'=""
"RTN","CIANBRPC",163,0)
 N FLD
"RTN","CIANBRPC",164,0)
 S FLD(19941.2,"+1,",.01)=SID
"RTN","CIANBRPC",165,0)
 S FLD(19941.2,"+1,",1)=DUZ
"RTN","CIANBRPC",166,0)
 S FLD(19941.2,"+1,",2)=$$NOW^XLFDT
"RTN","CIANBRPC",167,0)
 D UPDATE^DIE("","FLD")
"RTN","CIANBRPC",168,0)
 Q
"RTN","CIANBRPC",169,0)
 ; RPC: Get list of active RPCs
"RTN","CIANBRPC",170,0)
GETRPCS(DATA) ;
"RTN","CIANBRPC",171,0)
 N X
"RTN","CIANBRPC",172,0)
 D LIST^DIC(8994,,".01","Q",,,,,"I ""03""[$P(^(0),U,6)",,.DATA)
"RTN","CIANBRPC",173,0)
 S X=""
"RTN","CIANBRPC",174,0)
 F  S X=$O(@DATA@(X)) Q:'$L(X)  K:X'="ID" @DATA@(X)
"RTN","CIANBRPC",175,0)
 Q
"RTN","CIANBRPC",176,0)
 ; RPC: Can RPC be executed in current context
"RTN","CIANBRPC",177,0)
CANRUN(DATA,RPC) ;
"RTN","CIANBRPC",178,0)
 S DATA=$$CANRUN^CIANBACT($$FIND1^DIC(8994,,"QX",RPC),CIA("CTX"))
"RTN","CIANBRPC",179,0)
 Q
"RTN","CIANBRPC",180,0)
 ; RPC: Retrieve list of active sessions
"RTN","CIANBRPC",181,0)
GETSESSN(DATA,VAR,AID) ;
"RTN","CIANBRPC",182,0)
 N X,Z,C
"RTN","CIANBRPC",183,0)
 S DATA=$$TMPGBL
"RTN","CIANBRPC",184,0)
 F C=1:1 Q:'$$NXTUID^CIANBUTL(.X,,.AID)  S @DATA@(C)=$$SESSION^CIANBUTL(X,.VAR)
"RTN","CIANBRPC",185,0)
 Q
"RTN","CIANBRPC",186,0)
 ; RPC: Get stored variable(s)
"RTN","CIANBRPC",187,0)
GETVAR(DATA,LIST,NMSP) ;
"RTN","CIANBRPC",188,0)
 N CNT
"RTN","CIANBRPC",189,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","CIANBRPC",190,0)
 S LIST="",CNT=0
"RTN","CIANBRPC",191,0)
 S:0[$G(NMSP) NMSP="@"
"RTN","CIANBRPC",192,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","CIANBRPC",193,0)
 .S CNT=CNT+1,DATA(CNT)=LIST(LIST)_"="_$$GETVAR^CIANBUTL(LIST(LIST),,NMSP)
"RTN","CIANBRPC",194,0)
 Q
"RTN","CIANBRPC",195,0)
 ; RPC: Set stored variable(s)
"RTN","CIANBRPC",196,0)
SETVAR(DATA,LIST,NMSP,RESET) ;
"RTN","CIANBRPC",197,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","CIANBRPC",198,0)
 S LIST="",DATA=0
"RTN","CIANBRPC",199,0)
 S:0[$G(NMSP) NMSP="@"
"RTN","CIANBRPC",200,0)
 D:$G(RESET) CLRVAR^CIANBUTL(NMSP)
"RTN","CIANBRPC",201,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","CIANBRPC",202,0)
 .S DATA=DATA+1
"RTN","CIANBRPC",203,0)
 .D SETVAR^CIANBUTL($P(LIST(LIST),"="),$P(LIST(LIST),"=",2,9999),NMSP)
"RTN","CIANBRPC",204,0)
 Q
"RTN","CIANBRPC",205,0)
 ; RPC: Get requested session info
"RTN","CIANBRPC",206,0)
 ; TYPE = 0=subscriptions, 1=local vars, 2=session vars, 3=locks, 4=pending async RPCs
"RTN","CIANBRPC",207,0)
 ; UID  = Session ID (defaults to current session)
"RTN","CIANBRPC",208,0)
GETINFO(DATA,TYPE,UID) ;
"RTN","CIANBRPC",209,0)
 S UID=$G(UID,$G(CIA("UID")))
"RTN","CIANBRPC",210,0)
 I TYPE=0 D  Q
"RTN","CIANBRPC",211,0)
 .N EV,CN
"RTN","CIANBRPC",212,0)
 .S EV="",CN=0
"RTN","CIANBRPC",213,0)
 .F  S EV=$O(^XTMP("CIA",UID,"S",EV)) Q:'$L(EV)  D
"RTN","CIANBRPC",214,0)
 ..S CN=CN+1,@DATA@(CN)=EV
"RTN","CIANBRPC",215,0)
 I TYPE=1 D  Q
"RTN","CIANBRPC",216,0)
 .D CAPTURE^CIAUHFS("ZW  N X F X=""$ET"",""$EC"",""$ES"",""$J"",""$ZE"",""$ZT"" W !,X,""="",@X",DATA,99999)
"RTN","CIANBRPC",217,0)
 I TYPE=2 D  Q
"RTN","CIANBRPC",218,0)
 .N NS,VN,VL,CN
"RTN","CIANBRPC",219,0)
 .S NS="",CN=0
"RTN","CIANBRPC",220,0)
 .F  S NS=$O(^XTMP("CIA",UID,"V",NS)),VN="" Q:'$L(NS)  D
"RTN","CIANBRPC",221,0)
 ..F  S VN=$O(^XTMP("CIA",UID,"V",NS,VN)) Q:'$L(VN)  S VL=$G(^(VN)) D
"RTN","CIANBRPC",222,0)
 ...S CN=CN+1,@DATA@(CN)=$S(NS=0:"<default>",NS=-1:"<mapped>",1:NS)_U_VN_U_VL
"RTN","CIANBRPC",223,0)
 I TYPE=3 D  Q
"RTN","CIANBRPC",224,0)
 .N GBL,CN,VL
"RTN","CIANBRPC",225,0)
 .S GBL="",CN=0
"RTN","CIANBRPC",226,0)
 .F  S GBL=$O(^XTMP("CIA",UID,"L",GBL)) Q:'$L(GBL)  S VL=$G(^(GBL)) D
"RTN","CIANBRPC",227,0)
 ..S CN=CN+1,@DATA@(CN)=$TR(GBL,U,"~")_U_VL
"RTN","CIANBRPC",228,0)
 I TYPE=4 D  Q
"RTN","CIANBRPC",229,0)
 .N TSK,CN
"RTN","CIANBRPC",230,0)
 .S (TSK,CN)=0
"RTN","CIANBRPC",231,0)
 .F  S TSK=$O(^XTMP("CIA",UID,"T",TSK)) Q:'TSK  D
"RTN","CIANBRPC",232,0)
 ..S CN=CN+1,@DATA@(CN)=TSK_U_$G(^%ZTSK(TSK,.03),"Unknown")
"RTN","CIANBRPC",233,0)
 S @DATA@(1)="Unknown request type: "_TYPE
"RTN","CIANBRPC",234,0)
 Q
"RTN","CIANBRPC",235,0)
 ; Lock/unlock global reference
"RTN","CIANBRPC",236,0)
 ; GBL  = Global reference
"RTN","CIANBRPC",237,0)
 ; OPR  = Operation to perform:
"RTN","CIANBRPC",238,0)
 ;        >=0: Value is timeout for lock operation.  Returns success.
"RTN","CIANBRPC",239,0)
 ;         <0: Returns # of active locks for node.
"RTN","CIANBRPC",240,0)
 ;    missing: Performs unlock operation.  Returns success.
"RTN","CIANBRPC",241,0)
 ; DATA = Returns status according to value of OPR.
"RTN","CIANBRPC",242,0)
LOCK(DATA,GBL,OPR) ;
"RTN","CIANBRPC",243,0)
 N LCK
"RTN","CIANBRPC",244,0)
 S LCK=$D(OPR),OPR=+$G(OPR),GBL=$NA(@GBL)
"RTN","CIANBRPC",245,0)
 I OPR<0 S DATA=$$LOCKCNT(GBL)
"RTN","CIANBRPC",246,0)
 E  I LCK D
"RTN","CIANBRPC",247,0)
 .L +@GBL:OPR
"RTN","CIANBRPC",248,0)
 .S DATA=$T
"RTN","CIANBRPC",249,0)
 .I DATA,$$LOCKCNT(GBL,1)
"RTN","CIANBRPC",250,0)
 E  D
"RTN","CIANBRPC",251,0)
 .S DATA=''$$LOCKCNT(GBL,-1)
"RTN","CIANBRPC",252,0)
 .L:DATA -@GBL
"RTN","CIANBRPC",253,0)
 Q
"RTN","CIANBRPC",254,0)
 ; RPC: Restore locks (after reconnect)
"RTN","CIANBRPC",255,0)
 ; Data returns list of locks that could not be restored.
"RTN","CIANBRPC",256,0)
LOCKRES(DATA) ;
"RTN","CIANBRPC",257,0)
 N GBL,CNT,X
"RTN","CIANBRPC",258,0)
 S GBL="",X=0
"RTN","CIANBRPC",259,0)
 F  S GBL=$O(^XTMP("CIA",CIA("UID"),"L",GBL)) Q:'$L(GBL)  S CNT=+$G(^(GBL))  D
"RTN","CIANBRPC",260,0)
 .F CNT=CNT:-1:1 L +@GBL:1 E  D  Q
"RTN","CIANBRPC",261,0)
 ..S X=X+1,@DATA@(X)=GBL
"RTN","CIANBRPC",262,0)
 ..K ^XTMP("CIA",CIA("UID"),"L",GBL)
"RTN","CIANBRPC",263,0)
 Q
"RTN","CIANBRPC",264,0)
 ; Return lock count.  Optionally increment/decrement afterwards.
"RTN","CIANBRPC",265,0)
 ; Note use of naked reference.
"RTN","CIANBRPC",266,0)
LOCKCNT(GBL,INC) ;
"RTN","CIANBRPC",267,0)
 N X,Y
"RTN","CIANBRPC",268,0)
 S X=+$G(^XTMP("CIA",CIA("UID"),"L",GBL)),Y=X+$G(INC)  ; Sets naked reference
"RTN","CIANBRPC",269,0)
 I Y>0 S ^(GBL)=Y
"RTN","CIANBRPC",270,0)
 E  K ^(GBL)
"RTN","CIANBRPC",271,0)
 Q X
"RTN","CIANBRPC",272,0)
 ; Get temp global reference
"RTN","CIANBRPC",273,0)
TMPGBL(X) ;
"RTN","CIANBRPC",274,0)
 K ^TMP("CIANBTMP"_$G(X),$J) Q $NA(^($J))
"RTN","CIANBUTL")
0^6^B38343690
"RTN","CIANBUTL",1,0)
CIANBUTL ;MSC/IND/DKM - MSC RPC Broker Utilities ;09-Jul-2008 10:37;PLS
"RTN","CIANBUTL",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007**;Sep 18, 2007;Build 4
"RTN","CIANBUTL",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBUTL",4,0)
 ;=================================================================
"RTN","CIANBUTL",5,0)
 ; Cleanup stray global nodes
"RTN","CIANBUTL",6,0)
CLEANUP ;EP
"RTN","CIANBUTL",7,0)
 N UID
"RTN","CIANBUTL",8,0)
 F  Q:'$$NXTUID(.UID,0)  K ^XTMP("CIA",UID)
"RTN","CIANBUTL",9,0)
 Q
"RTN","CIANBUTL",10,0)
 ; Force RPC context tables to be rebuilt for all active sessions
"RTN","CIANBUTL",11,0)
REBLDCTX ;EP
"RTN","CIANBUTL",12,0)
 N UID,CTX
"RTN","CIANBUTL",13,0)
 F  Q:'$$NXTUID(.UID)  D
"RTN","CIANBUTL",14,0)
 .F CTX=0:0 S CTX=$O(^XTMP("CIA",UID,"C",CTX)) Q:'CTX  S ^(CTX)=0
"RTN","CIANBUTL",15,0)
 Q
"RTN","CIANBUTL",16,0)
 ; Get globally unique instance ID
"RTN","CIANBUTL",17,0)
UID() N UID,FLG
"RTN","CIANBUTL",18,0)
 L +^XTMP("CIA",0):5
"RTN","CIANBUTL",19,0)
 E  Q "-3^Cannot initialize environment"
"RTN","CIANBUTL",20,0)
 S FLG=0
"RTN","CIANBUTL",21,0)
 F UID=$P($G(^XTMP("CIA",0)),U,3)+1:1 D  Q:(UID<1)!(FLG=2)
"RTN","CIANBUTL",22,0)
 .I (UID<1)!(UID>999999) D  Q:UID<1
"RTN","CIANBUTL",23,0)
 ..S UID=$S('FLG:1,1:"-4^Lock table is full"),FLG=1
"RTN","CIANBUTL",24,0)
 .S:'$$ISACTIVE(UID,1) FLG=2
"RTN","CIANBUTL",25,0)
 S:UID>0 ^XTMP("CIA",0)=(DT+10000)_U_DT_U_UID
"RTN","CIANBUTL",26,0)
 L -^XTMP("CIA",0)
"RTN","CIANBUTL",27,0)
 Q UID
"RTN","CIANBUTL",28,0)
 ; Verifies that a session is truly active
"RTN","CIANBUTL",29,0)
 ;   UID = Unique id of session
"RTN","CIANBUTL",30,0)
 ;   LCK = If nonzero, leave lock active (defaults to 0)
"RTN","CIANBUTL",31,0)
 ;   TMO = Optional lock timeout (defaults to 0)
"RTN","CIANBUTL",32,0)
ISACTIVE(UID,LCK,TMO) ;EP
"RTN","CIANBUTL",33,0)
 Q:'$G(UID) 0
"RTN","CIANBUTL",34,0)
 Q:UID=$G(CIA("UID")) 1
"RTN","CIANBUTL",35,0)
 L +^XTMP("CIA",UID,0):+$G(TMO)
"RTN","CIANBUTL",36,0)
 E  Q 1
"RTN","CIANBUTL",37,0)
 L:'$G(LCK) -^XTMP("CIA",UID,0)
"RTN","CIANBUTL",38,0)
 Q 0
"RTN","CIANBUTL",39,0)
 ; Gets the session ID associated with this process
"RTN","CIANBUTL",40,0)
 ; If not in session context, attempt answerback from client
"RTN","CIANBUTL",41,0)
GETUID() ;EP
"RTN","CIANBUTL",42,0)
 I '$D(CIA("UID")) D
"RTN","CIANBUTL",43,0)
 .S CIA("UID")=""
"RTN","CIANBUTL",44,0)
 .Q:$D(ZTQUEUED)
"RTN","CIANBUTL",45,0)
 .N X,UID,I
"RTN","CIANBUTL",46,0)
 .S I=$I,UID=""
"RTN","CIANBUTL",47,0)
 .U $S($D(IO(0)):IO(0),1:$P)                                           ; Use home device
"RTN","CIANBUTL",48,0)
 .X ^%ZOSF("EOFF")                                                     ; Suppress echo
"RTN","CIANBUTL",49,0)
 .F  R X#1:0 Q:'$T                                                     ; Flush keyboard buffer
"RTN","CIANBUTL",50,0)
 .W $C(5)                                                              ; Send answerback request
"RTN","CIANBUTL",51,0)
 .F  R X:4 Q:'$T&'$L(X)  S UID=UID_X                                   ; Listen for response
"RTN","CIANBUTL",52,0)
 .S UID=$P(UID,"CIA#",2)
"RTN","CIANBUTL",53,0)
 .X ^%ZOSF("EON")                                                      ; Restore echo
"RTN","CIANBUTL",54,0)
 .U I                                                                  ; Restore previous device
"RTN","CIANBUTL",55,0)
 .I $$ISACTIVE(UID),$$GETVAR("DUZ",,,UID)=DUZ S CIA("UID")=UID
"RTN","CIANBUTL",56,0)
 .E  S CIA("UID")=""
"RTN","CIANBUTL",57,0)
 Q:$Q CIA("UID")
"RTN","CIANBUTL",58,0)
 Q
"RTN","CIANBUTL",59,0)
 ; Retrieve next session ID from list
"RTN","CIANBUTL",60,0)
 ;   UID passed as last ID processed, returned as next ID or null
"RTN","CIANBUTL",61,0)
 ;   FLT = <0=all; 0=inactive only; >0=active only (default)
"RTN","CIANBUTL",62,0)
 ;   AID = Application ID (optional)
"RTN","CIANBUTL",63,0)
 ;   Return value is true if ID found
"RTN","CIANBUTL",64,0)
NXTUID(UID,FLT,AID) ;EP
"RTN","CIANBUTL",65,0)
 N PFX,FND,ALL,ACT
"RTN","CIANBUTL",66,0)
 S FLT=+$G(FLT,1),FND=0,ALL=FLT<0,ACT=FLT>0,AID=$$OPTLKP(.AID),UID=+$G(UID)
"RTN","CIANBUTL",67,0)
 I $L(AID) F  S UID=$O(^XTMP("CIA",UID)) Q:'UID  D  Q:FND
"RTN","CIANBUTL",68,0)
 .I AID,$$GETVAR("AID0",,,UID)'=AID Q
"RTN","CIANBUTL",69,0)
 .I 'ALL,$$ISACTIVE(UID)'=ACT Q
"RTN","CIANBUTL",70,0)
 .S FND=1
"RTN","CIANBUTL",71,0)
 S:'FND UID=""
"RTN","CIANBUTL",72,0)
 Q:$Q FND
"RTN","CIANBUTL",73,0)
 Q
"RTN","CIANBUTL",74,0)
 ; Retrieve a package parameter value
"RTN","CIANBUTL",75,0)
PARAM(PAR,MIN,MAX) ;EP
"RTN","CIANBUTL",76,0)
 S VAL=+$$GET^XPAR("ALL",PAR)
"RTN","CIANBUTL",77,0)
 S:VAL<MIN VAL=MIN
"RTN","CIANBUTL",78,0)
 S:VAL>MAX VAL=MAX
"RTN","CIANBUTL",79,0)
 Q VAL
"RTN","CIANBUTL",80,0)
 ; Return free resource device
"RTN","CIANBUTL",81,0)
RESDEV() ;EP
"RTN","CIANBUTL",82,0)
 N RD,MX,SL,UID,X,C
"RTN","CIANBUTL",83,0)
 S MX=$$PARAM("CIANB RESOURCE DEVICE COUNT",1,20)
"RTN","CIANBUTL",84,0)
 S SL=$$PARAM("CIANB RESOURCE DEVICE SLOTS",1,20)
"RTN","CIANBUTL",85,0)
 F  Q:'$$NXTUID(.UID)  D
"RTN","CIANBUTL",86,0)
 .S RD=$$GETVAR("RDEV",,,UID)
"RTN","CIANBUTL",87,0)
 .S:RD RD(RD)=$G(RD(RD))+1
"RTN","CIANBUTL",88,0)
 S RD=1,C=999999
"RTN","CIANBUTL",89,0)
 F X=1:1:MX S:+$G(RD(X))<C RD=X,C=+$G(RD(X))
"RTN","CIANBUTL",90,0)
 S X=$$RES^XUDHSET("CIANB THREAD RESOURCE #"_RD,,SL,"CIA Broker Asynchronous Callbacks")
"RTN","CIANBUTL",91,0)
 Q RD
"RTN","CIANBUTL",92,0)
 ; Set maximum slots for resource devices
"RTN","CIANBUTL",93,0)
SETSLOTS(CNT) ;EP
"RTN","CIANBUTL",94,0)
 N RES,IEN,FDA,X,Y
"RTN","CIANBUTL",95,0)
 Q:CNT<2!(CNT>20)
"RTN","CIANBUTL",96,0)
 D FIND^DIC(3.5,,"@","UP","CIANB THREAD RESOURCE #",,"B")
"RTN","CIANBUTL",97,0)
 F RES=0:0 S RES=$O(^TMP("DILIST",$J,RES)) Q:'RES  S IEN=+$G(^(RES,0)) D:IEN
"RTN","CIANBUTL",98,0)
 .S FDA(3.5,IEN_",",35)=CNT
"RTN","CIANBUTL",99,0)
 D FILE^DIE("K","FDA")
"RTN","CIANBUTL",100,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","CIANBUTL",101,0)
 Q
"RTN","CIANBUTL",102,0)
 ; Return info for session
"RTN","CIANBUTL",103,0)
SESSION(UID,VAR) ;EP
"RTN","CIANBUTL",104,0)
 N X,Y,Z
"RTN","CIANBUTL",105,0)
 S (X,Y)=""
"RTN","CIANBUTL",106,0)
 S:'$L($G(VAR)) VAR="UID^WID^AID^DUZ^USER^LDT^JOB"
"RTN","CIANBUTL",107,0)
 F Z=1:1:$L(VAR,U) S X=X_Y_$$GETVAR($P(VAR,U,Z),,,.UID),Y=U
"RTN","CIANBUTL",108,0)
 Q X
"RTN","CIANBUTL",109,0)
 ; Show active sessions
"RTN","CIANBUTL",110,0)
 ;   AID = optional application id
"RTN","CIANBUTL",111,0)
 ;   FLT = <0=all; 0=inactive only; >0=active only (default)
"RTN","CIANBUTL",112,0)
SHOWSESS(AID,FLT) ;EP
"RTN","CIANBUTL",113,0)
 N C,X,Z
"RTN","CIANBUTL",114,0)
 F C=0:1 Q:'$$NXTUID(.X,.FLT,.AID)  D
"RTN","CIANBUTL",115,0)
 .W "#",X,?10,$$HTE^XLFDT($$GETVAR("LDT",,,X)),?40,$$GETVAR("WID",,,X),?60,$$GETVAR("USER",,,X),!
"RTN","CIANBUTL",116,0)
 W !,$S('C:"No sessions are",C=1:"One session is",1:C_" sessions are")," ",$S(FLT>0:"active",FLT<0:"present",1:"inactive"),".",!
"RTN","CIANBUTL",117,0)
 Q:$Q C
"RTN","CIANBUTL",118,0)
 Q
"RTN","CIANBUTL",119,0)
 ; Fetch an environment variable
"RTN","CIANBUTL",120,0)
 ;   NAME = Variable name
"RTN","CIANBUTL",121,0)
 ;   DFLT = Optional default value
"RTN","CIANBUTL",122,0)
 ;   NMSP = Optional namespace (defaults to global)
"RTN","CIANBUTL",123,0)
 ;   UID  = Optional session id (default to current)
"RTN","CIANBUTL",124,0)
GETVAR(NAME,DFLT,NMSP,UID) ;EP
"RTN","CIANBUTL",125,0)
 D FMTVAR(.UID,.NMSP,.NAME)
"RTN","CIANBUTL",126,0)
 Q $S('UID:"",1:$G(^XTMP("CIA",UID,"V",NMSP,NAME),$G(DFLT)))
"RTN","CIANBUTL",127,0)
 ; Save an environment variable
"RTN","CIANBUTL",128,0)
 ;   NAME = Variable name
"RTN","CIANBUTL",129,0)
 ;   VALUE = Value to be assigned (if not specified, entry is deleted)
"RTN","CIANBUTL",130,0)
 ;   NMSP = Optional namespace (defaults to global)
"RTN","CIANBUTL",131,0)
SETVAR(NAME,VALUE,NMSP,UID) ;EP
"RTN","CIANBUTL",132,0)
 N $ET
"RTN","CIANBUTL",133,0)
 S $ET="S $EC="""" G ERRVAR^CIANBUTL"
"RTN","CIANBUTL",134,0)
 D FMTVAR(.UID,.NMSP,.NAME)
"RTN","CIANBUTL",135,0)
 I 'UID Q:$Q 0 Q
"RTN","CIANBUTL",136,0)
 L +^XTMP("CIA",UID,"V",NMSP,NAME):1
"RTN","CIANBUTL",137,0)
 ;E  Q:$Q 0 Q
"RTN","CIANBUTL",138,0)
 I $D(VALUE) S:NMSP=-1 @NAME=VALUE S ^XTMP("CIA",UID,"V",NMSP,NAME)=VALUE
"RTN","CIANBUTL",139,0)
 E  K:NMSP=-1 @NAME K ^XTMP("CIA",UID,"V",NMSP,NAME)
"RTN","CIANBUTL",140,0)
 L -^XTMP("CIA",UID,"V",NMSP,NAME)
"RTN","CIANBUTL",141,0)
 Q:$Q 1
"RTN","CIANBUTL",142,0)
 Q
"RTN","CIANBUTL",143,0)
 ; Clear all variables in a namespace
"RTN","CIANBUTL",144,0)
CLRVAR(NMSP,UID) ;EP
"RTN","CIANBUTL",145,0)
 N NAME,RES
"RTN","CIANBUTL",146,0)
 D FMTVAR(.UID,.NMSP)
"RTN","CIANBUTL",147,0)
 L +^XTMP("CIA",UID,"V",NMSP):1
"RTN","CIANBUTL",148,0)
 ;E  Q:$Q 0 Q
"RTN","CIANBUTL",149,0)
 S NAME="",RES=1
"RTN","CIANBUTL",150,0)
 F  S NAME=$O(^XTMP("CIA",UID,"V",NMSP,NAME)) Q:'$L(NAME)  S RES=RES&$$SETVAR(NAME,,NMSP,UID)
"RTN","CIANBUTL",151,0)
 L -^XTMP("CIA",UID,"V",NMSP)
"RTN","CIANBUTL",152,0)
 Q:$Q RES
"RTN","CIANBUTL",153,0)
 Q
"RTN","CIANBUTL",154,0)
 ; Restore variables from local variable namespace
"RTN","CIANBUTL",155,0)
RESVAR N NAME,UID
"RTN","CIANBUTL",156,0)
 D FMTVAR(.UID)
"RTN","CIANBUTL",157,0)
 S NAME=""
"RTN","CIANBUTL",158,0)
 F  S NAME=$O(^XTMP("CIA",UID,"V",-1,NAME)) Q:'$L(NAME)  S @NAME=^(NAME)
"RTN","CIANBUTL",159,0)
 Q
"RTN","CIANBUTL",160,0)
 ; Error handler for var calls
"RTN","CIANBUTL",161,0)
ERRVAR L -^XTMP("CIA",UID,"V",NMSP,NAME)
"RTN","CIANBUTL",162,0)
 Q:$Q 0
"RTN","CIANBUTL",163,0)
 Q
"RTN","CIANBUTL",164,0)
 ; Format arguments for var calls
"RTN","CIANBUTL",165,0)
FMTVAR(UID,NMSP,NAME) ;
"RTN","CIANBUTL",166,0)
 S UID=$G(UID,$G(CIA("UID")))
"RTN","CIANBUTL",167,0)
 S NMSP=$$UP^XLFSTR($G(NMSP,0))
"RTN","CIANBUTL",168,0)
 S NAME=$$UP^XLFSTR($G(NAME))
"RTN","CIANBUTL",169,0)
 S:NMSP=-1&$L(NAME) NAME=$NA(@NAME)
"RTN","CIANBUTL",170,0)
 Q
"RTN","CIANBUTL",171,0)
 ; Retrieve dialog text
"RTN","CIANBUTL",172,0)
 ;  NUM = Dialog number (relative or absolute)
"RTN","CIANBUTL",173,0)
 ; .DLG = Array to receive text
"RTN","CIANBUTL",174,0)
 ;  Pn  = Optional parameters (up to 3)
"RTN","CIANBUTL",175,0)
GETDLG(NUM,DLG,P1,P2,P3) ;
"RTN","CIANBUTL",176,0)
 N PAR
"RTN","CIANBUTL",177,0)
 K DLG
"RTN","CIANBUTL",178,0)
 S:NUM<10000 NUM=NUM+199412000
"RTN","CIANBUTL",179,0)
 S PAR(1)=$G(P1,$G(CIA("RPC"))),PAR(2)=$G(P2),PAR(3)=$G(P3)
"RTN","CIANBUTL",180,0)
 D BLD^DIALOG(NUM,.PAR,,"DLG")
"RTN","CIANBUTL",181,0)
 Q:$Q $G(DLG(1))
"RTN","CIANBUTL",182,0)
 Q
"RTN","CIANBUTL",183,0)
 ; Lookup option, returning IEN
"RTN","CIANBUTL",184,0)
OPTLKP(OPT) ;EP
"RTN","CIANBUTL",185,0)
 Q $S('$L($G(OPT)):0,OPT=+OPT:OPT,1:$O(^DIC(19,"B",OPT,0)))
"RTN","CIANBUTL",186,0)
 ; Get/set out-of-order message for option
"RTN","CIANBUTL",187,0)
 ;   MSG = New message (if passed, a set is performed, otherwise a get)
"RTN","CIANBUTL",188,0)
 ;   Returns current message text
"RTN","CIANBUTL",189,0)
OPTMSG(OPT,MSG) ;EP
"RTN","CIANBUTL",190,0)
 S OPT=+$$OPTLKP(.OPT)
"RTN","CIANBUTL",191,0)
 I OPT,$D(^DIC(19,OPT,0)) D                                            ; Sets naked ref
"RTN","CIANBUTL",192,0)
 .I $D(MSG) S $P(^(0),U,3)=MSG
"RTN","CIANBUTL",193,0)
 .E  S MSG=$P(^(0),U,3)
"RTN","CIANBUTL",194,0)
 E  S MSG=""
"RTN","CIANBUTL",195,0)
 Q:$Q MSG
"RTN","CIANBUTL",196,0)
 Q
"RTN","CIANBUTL",197,0)
 ; Check option for valid access
"RTN","CIANBUTL",198,0)
 ;   OPT=Option IEN or name
"RTN","CIANBUTL",199,0)
 ;   TYP=Optional option type to check
"RTN","CIANBUTL",200,0)
 ;   Returns 0 if OK, <err code>^<err param> otherwise
"RTN","CIANBUTL",201,0)
OPTCHK(OPT,TYP) ;EP
"RTN","CIANBUTL",202,0)
 N XQY,X,Y,Z
"RTN","CIANBUTL",203,0)
 S XQY=$S(OPT=+OPT:OPT,1:$$OPTLKP(OPT))
"RTN","CIANBUTL",204,0)
 Q:XQY'>0 "2^"_OPT
"RTN","CIANBUTL",205,0)
 S X=$G(^DIC(19,XQY,0)),Y=$P($G(^(3)),U),Z=$P(X,U,3)
"RTN","CIANBUTL",206,0)
 Q:$L(Z) "19^"_Z
"RTN","CIANBUTL",207,0)
 I $L($G(TYP)),$P(X,U,4)'=TYP Q "20^"_OPT_U_TYP
"RTN","CIANBUTL",208,0)
 I $P(X,U,16),$L(Y),$$KCHK^XUSRB(Y) Q "21^"_OPT_U_Y
"RTN","CIANBUTL",209,0)
 S Y=$P(X,U,6)
"RTN","CIANBUTL",210,0)
 I $L(Y),'$$KCHK^XUSRB(Y) Q "22^"_OPT_U_Y
"RTN","CIANBUTL",211,0)
 S X=$$NOW^XLFDT
"RTN","CIANBUTL",212,0)
 D ENTRY^XQ92
"RTN","CIANBUTL",213,0)
 Q:'X "23^"_OPT
"RTN","CIANBUTL",214,0)
 Q 0
"RTN","CIANBUTL",215,0)
 ; Nightly task to perform various cleanup procedures.
"RTN","CIANBUTL",216,0)
NIGHTLY ;EP
"RTN","CIANBUTL",217,0)
 D CLEANUP
"RTN","CIANBUTL",218,0)
 D DOPURGE^CIANBEVT(1)
"RTN","CIANBUTL",219,0)
 D DOPURGE^CIANBLOG
"RTN","CIANBUTL",220,0)
 Q
"SEC","^DIC",19941.2,19941.2,0,"AUDIT")
@
"SEC","^DIC",19941.2,19941.2,0,"DD")
@
"SEC","^DIC",19941.2,19941.2,0,"DEL")
@
"SEC","^DIC",19941.2,19941.2,0,"LAYGO")
@
"SEC","^DIC",19941.2,19941.2,0,"RD")
@
"SEC","^DIC",19941.2,19941.2,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"SEC","^DIC",19941.22,19941.22,0,"AUDIT")
@
"SEC","^DIC",19941.22,19941.22,0,"DD")
@
"SEC","^DIC",19941.22,19941.22,0,"DEL")
@
"SEC","^DIC",19941.22,19941.22,0,"LAYGO")
@
"SEC","^DIC",19941.22,19941.22,0,"RD")
@
"SEC","^DIC",19941.22,19941.22,0,"WR")
@
"SEC","^DIC",19941.23,19941.23,0,"AUDIT")
@
"SEC","^DIC",19941.23,19941.23,0,"DD")
@
"SEC","^DIC",19941.23,19941.23,0,"DEL")
@
"SEC","^DIC",19941.23,19941.23,0,"LAYGO")
@
"SEC","^DIC",19941.23,19941.23,0,"RD")
@
"SEC","^DIC",19941.23,19941.23,0,"WR")
@
"SEC","^DIC",19941.24,19941.24,0,"AUDIT")
@
"SEC","^DIC",19941.24,19941.24,0,"DD")
@
"SEC","^DIC",19941.24,19941.24,0,"DEL")
@
"SEC","^DIC",19941.24,19941.24,0,"LAYGO")
@
"SEC","^DIC",19941.24,19941.24,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PARAM",1)
CIANB ACTIVITY RETENTION^1^30
"TEMP","PARAM",2)
CIANB AUTHENTICATION^|$$GETUCI~CIANBACT|^0
"TEMP","PARAM",3)
CIANB POLLING INTERVAL^1^3
"TEMP","PARAM",4)
CIANB RESOURCE DEVICE COUNT^1^4
"TEMP","PARAM",5)
CIANB RESOURCE DEVICE SLOTS^1^4
"TEMP","PTRS",19330.204)
3^19930.2^19.1
"TEMP","PTRS",19930.206)
2^19930.2^19930.21
"TEMP","PTRS",19930.221)
9^19930.2^19930.2
"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
2
"VER")
8.0^22.0
"^DD",8989.51,8989.51,0)
FIELD^^30^19
"^DD",8989.51,8989.51,0,"DDA")
N
"^DD",8989.51,8989.51,0,"DT")
2970621
"^DD",8989.51,8989.51,0,"ID","WRITE")
N X S X=^(0) D EN^DDIOL($P(X,U,2),"","?36")
"^DD",8989.51,8989.51,0,"IX","AG",8989.513,.02)

"^DD",8989.51,8989.51,0,"IX","B",8989.51,.01)

"^DD",8989.51,8989.51,0,"IX","C",8989.51,.02)

"^DD",8989.51,8989.51,0,"IX","D",8989.514,.01)

"^DD",8989.51,8989.51,0,"NM","PARAMETER DEFINITION")

"^DD",8989.51,8989.51,0,"PT",8935.912,.02)

"^DD",8989.51,8989.51,0,"PT",8989.5,.02)

"^DD",8989.51,8989.51,0,"PT",8989.52,.04)

"^DD",8989.51,8989.51,0,"PT",8989.521,.02)

"^DD",8989.51,8989.51,0,"PT",19930.992,.01)

"^DD",8989.51,8989.51,0,"PT",19978.3,.08)

"^DD",8989.51,8989.51,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",8989.51,8989.51,.01,0)
NAME^RFX^^0;1^D VALID01^XPARDD1
"^DD",8989.51,8989.51,.01,1,0)
^.1
"^DD",8989.51,8989.51,.01,1,1,0)
8989.51^B
"^DD",8989.51,8989.51,.01,1,1,1)
S ^XTV(8989.51,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.51,.01,1,1,2)
K ^XTV(8989.51,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.51,.01,3)
Answer must be 3-30 characters in length.  Name must be unique.
"^DD",8989.51,8989.51,.01,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.01,21,1,0)
This is the name of the parameter.  It should be namespaced according to the 
"^DD",8989.51,8989.51,.01,21,2,0)
package from which the parameter originated.
"^DD",8989.51,8989.51,.01,"DT")
2960207
"^DD",8989.51,8989.51,.02,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.02,1,0)
^.1
"^DD",8989.51,8989.51,.02,1,1,0)
8989.51^C^MUMPS
"^DD",8989.51,8989.51,.02,1,1,1)
S ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)=""
"^DD",8989.51,8989.51,.02,1,1,2)
K ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)
"^DD",8989.51,8989.51,.02,1,1,"%D",0)
^^2^2^2970606^
"^DD",8989.51,8989.51,.02,1,1,"%D",1,0)
Cross references display text for lookup.  Display text is put in upper
"^DD",8989.51,8989.51,.02,1,1,"%D",2,0)
case so lookup will be case insensitive.
"^DD",8989.51,8989.51,.02,1,1,"DT")
2960409
"^DD",8989.51,8989.51,.02,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.02,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.02,21,1,0)
This is the displayable name for the parameter (allows mixed case, 
"^DD",8989.51,8989.51,.02,21,2,0)
non-namespaced names).
"^DD",8989.51,8989.51,.02,"DT")
2960409
"^DD",8989.51,8989.51,.03,0)
MULTIPLE VALUED^S^1:Yes;0:No;^0;3^Q
"^DD",8989.51,8989.51,.03,3)
Enter 'Yes' if multiple instances of the parameter are allowed for any single entity.
"^DD",8989.51,8989.51,.03,21,0)
^^3^3^2980705^
"^DD",8989.51,8989.51,.03,21,1,0)
If this field is set to 'Yes', multiple instances of the parameter will be 
"^DD",8989.51,8989.51,.03,21,2,0)
allowed for a single entity.  Otherwise, the value of the instance field
"^DD",8989.51,8989.51,.03,21,3,0)
for a given Entity-Parameter combination will always be '1'.
"^DD",8989.51,8989.51,.03,"DT")
2960207
"^DD",8989.51,8989.51,.04,0)
INSTANCE TERM^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.04,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.04,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,.04,21,1,0)
This is a free text term that can be used when prompting for a new instance of 
"^DD",8989.51,8989.51,.04,21,2,0)
the parameter (in the case where the parameter in multiple valued).  If not 
"^DD",8989.51,8989.51,.04,21,3,0)
entered, the word "Instance" will be used.
"^DD",8989.51,8989.51,.04,"DT")
2960207
"^DD",8989.51,8989.51,.05,0)
VALUE TERM^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.05,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.05,21,0)
^^2^2^2970626^
"^DD",8989.51,8989.51,.05,21,1,0)
This contains text that is issued as a prompt for the value.  If nothing
"^DD",8989.51,8989.51,.05,21,2,0)
is here, the prompt will be the word 'Value:'.
"^DD",8989.51,8989.51,.05,"DT")
2960612
"^DD",8989.51,8989.51,.06,0)
PROHIBIT EDITING^S^1:Yes;0:No;^0;6^Q
"^DD",8989.51,8989.51,.06,3)
Choose 'Disallow Editing' if editing of this field should not be allowed.
"^DD",8989.51,8989.51,.06,21,0)
^^2^2^2970306^
"^DD",8989.51,8989.51,.06,21,1,0)
This field prevents the parameter value from being edited with Fileman or
"^DD",8989.51,8989.51,.06,21,2,0)
any Parameters tools.
"^DD",8989.51,8989.51,.06,"DT")
2970317
"^DD",8989.51,8989.51,1.1,0)
VALUE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;M:M code;C:constant;^1;1^Q
"^DD",8989.51,8989.51,1.1,3)
Enter the type of data this parameter will contain.
"^DD",8989.51,8989.51,1.1,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,1.1,21,1,0)
This is the type of data this parameter will contain.  This field is used to 
"^DD",8989.51,8989.51,1.1,21,2,0)
define a call to the reader (^DIR) in most cases.
"^DD",8989.51,8989.51,1.1,"DT")
2960528
"^DD",8989.51,8989.51,1.2,0)
VALUE DOMAIN^F^^1;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,1.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,1.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.2,21,1,0)
This is a string that may be used to further specify the data type.  The 
"^DD",8989.51,8989.51,1.2,21,2,0)
string stored here should be appropriate for the second ^-piece of DIR(0) 
"^DD",8989.51,8989.51,1.2,21,3,0)
when used with the data type field.
"^DD",8989.51,8989.51,1.2,"DT")
2960207
"^DD",8989.51,8989.51,1.3,0)
VALUE HELP^F^^1;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,1.3,3)
Enter a line of help text to be displayed when entering a parameter value.
"^DD",8989.51,8989.51,1.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,1.3,21,2,0)
requests help or encounters an error while entering the VALUE field in the 
"^DD",8989.51,8989.51,1.3,21,3,0)
PARAMETERS file.
"^DD",8989.51,8989.51,1.3,"DT")
2960207
"^DD",8989.51,8989.51,2,0)
VALUE VALIDATION CODE^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,2,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,2,9)
@
"^DD",8989.51,8989.51,2,21,0)
^^2^2^2980705^
"^DD",8989.51,8989.51,2,21,1,0)
This field contains the M code that is placed in the third piece of DIR(0)
"^DD",8989.51,8989.51,2,21,2,0)
when validating a value in the PARAMETERS file.
"^DD",8989.51,8989.51,2,"DT")
2960207
"^DD",8989.51,8989.51,3,0)
VALUE SCREEN CODE^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,3,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,3,9)
@
"^DD",8989.51,8989.51,3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,3,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,3,21,2,0)
VALUE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,3,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,3,"DT")
2960207
"^DD",8989.51,8989.51,4,0)
KEYWORD^8989.514^^4;0
"^DD",8989.51,8989.51,6.1,0)
INSTANCE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;^6;1^Q
"^DD",8989.51,8989.51,6.1,3)
Enter the type of data allowed for the INSTANCE field of the parameter.
"^DD",8989.51,8989.51,6.1,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.1,21,1,0)
This is the type of data that is contained in the INSTANCE field of the 
"^DD",8989.51,8989.51,6.1,21,2,0)
PARAMETERS file, if multiple parameter instances per entity are allowed.  
"^DD",8989.51,8989.51,6.1,21,3,0)
This field is used to define a call to the reader.
"^DD",8989.51,8989.51,6.1,"DT")
2960207
"^DD",8989.51,8989.51,6.2,0)
INSTANCE DOMAIN^F^^6;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,6.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,6.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.2,21,1,0)
This may be used to further define the data type for the INSTANCE field of 
"^DD",8989.51,8989.51,6.2,21,2,0)
the parameter.  The string stored here should be appropriate for the second 
"^DD",8989.51,8989.51,6.2,21,3,0)
^-piece of DIR(0) when used with the data type field.
"^DD",8989.51,8989.51,6.2,"DT")
2960207
"^DD",8989.51,8989.51,6.3,0)
INSTANCE HELP^F^^6;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,6.3,3)
Enter a line of help text to be displayed when entering the parameter instance.
"^DD",8989.51,8989.51,6.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,6.3,21,2,0)
requests help or encounters an error while entering the INSTANCE field of 
"^DD",8989.51,8989.51,6.3,21,3,0)
the PARAMETERS file.
"^DD",8989.51,8989.51,6.3,"DT")
2960207
"^DD",8989.51,8989.51,7,0)
INSTANCE VALIDATION CODE^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,7,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,7,9)
@
"^DD",8989.51,8989.51,7,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,7,21,1,0)
This field contains M code that is placed in the third piece of DIR(0) when 
"^DD",8989.51,8989.51,7,21,2,0)
validating the INSTANCE field in the PARAMETERS file.
"^DD",8989.51,8989.51,7,"DT")
2960207
"^DD",8989.51,8989.51,8,0)
INSTANCE SCREEN CODE^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,8,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,8,9)
@
"^DD",8989.51,8989.51,8,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,8,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,8,21,2,0)
INSTANCE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,8,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,8,"DT")
2960207
"^DD",8989.51,8989.51,20,0)
DESCRIPTION^8989.512^^20;0
"^DD",8989.51,8989.51,20,21,0)
^^1^1^2970626^
"^DD",8989.51,8989.51,20,21,1,0)
A description of the parameter may be entered here.
"^DD",8989.51,8989.51,30,0)
ALLOWABLE ENTITIES^8989.513I^^30;0
"^DD",8989.51,8989.51,30,21,0)
^^2^2^2960213^^
"^DD",8989.51,8989.51,30,21,1,0)
This multiple contains a list of entities (pointers to files) for which the 
"^DD",8989.51,8989.51,30,21,2,0)
parameter may be validly set.
"^DD",8989.51,8989.512,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",8989.51,8989.512,0,"DT")
2960207
"^DD",8989.51,8989.512,0,"NM","DESCRIPTION")

"^DD",8989.51,8989.512,0,"UP")
8989.51
"^DD",8989.51,8989.512,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",8989.51,8989.512,.01,3)
Enter a description of the parameter and how it is used.
"^DD",8989.51,8989.512,.01,21,0)
^^1^1^2960207^
"^DD",8989.51,8989.512,.01,21,1,0)
This is text that describes the purpose and use of the parameter.
"^DD",8989.51,8989.512,.01,"DT")
2960207
"^DD",8989.51,8989.513,0)
ALLOWABLE ENTITIES SUB-FIELD^^.02^2
"^DD",8989.51,8989.513,0,"DT")
2970621
"^DD",8989.51,8989.513,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",8989.51,8989.513,0,"IX","B",8989.513,.01)

"^DD",8989.51,8989.513,0,"NM","ALLOWABLE ENTITIES")

"^DD",8989.51,8989.513,0,"UP")
8989.51
"^DD",8989.51,8989.513,.01,0)
PRECEDENCE^MRNJ6,2^^0;1^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",8989.51,8989.513,.01,1,0)
^.1
"^DD",8989.51,8989.513,.01,1,1,0)
8989.513^B
"^DD",8989.51,8989.513,.01,1,1,1)
S ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.513,.01,1,1,2)
K ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.513,.01,3)
Type a Number between 0 and 999.99, 2 Decimal Digits
"^DD",8989.51,8989.513,.01,21,0)
^^6^6^2960213^^^
"^DD",8989.51,8989.513,.01,21,1,0)
A single parameter may be set for several different types of entities.  This 
"^DD",8989.51,8989.513,.01,21,2,0)
lists the order in which entities are searched for a defined value.  For 
"^DD",8989.51,8989.513,.01,21,3,0)
example, if a parameter may be set for a package, a location, and a user, 
"^DD",8989.51,8989.513,.01,21,4,0)
and the respective precedents are 3, 2, 1, the value of the user parameter 
"^DD",8989.51,8989.513,.01,21,5,0)
would be returned.  If it did not exist, the value of the location 
"^DD",8989.51,8989.513,.01,21,6,0)
parameter.  If that did not exist, then the value of the package parameter.
"^DD",8989.51,8989.513,.01,"DT")
2960213
"^DD",8989.51,8989.513,.02,0)
ENTITY FILE^RP8989.518'^XTV(8989.518,^0;2^Q
"^DD",8989.51,8989.513,.02,1,0)
^.1
"^DD",8989.51,8989.513,.02,1,1,0)
8989.51^AG^MUMPS
"^DD",8989.51,8989.513,.02,1,1,1)
D AGS^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,2)
D AGK^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,"%D",0)
^^5^5^2980422^
"^DD",8989.51,8989.513,.02,1,1,"%D",1,0)
The AG x-ref has the format ^XTV(8989.51,PARAM,30,"AG",GLOBAL REF,DA)="".
"^DD",8989.51,8989.513,.02,1,1,"%D",2,0)
 
"^DD",8989.51,8989.513,.02,1,1,"%D",3,0)
It is used to screen the parameters that may be selected for a given entity 
"^DD",8989.51,8989.513,.02,1,1,"%D",4,0)
in the PARAMETERS file.  The global root is used because the entity is a 
"^DD",8989.51,8989.513,.02,1,1,"%D",5,0)
variable pointer.
"^DD",8989.51,8989.513,.02,1,1,"DT")
2960207
"^DD",8989.51,8989.513,.02,3)
Choose a file from which entities for this parameter are identified.
"^DD",8989.51,8989.513,.02,21,0)
^^3^3^2980422^
"^DD",8989.51,8989.513,.02,21,1,0)
This identifies an entity for which the parameter can be legally entered.  
"^DD",8989.51,8989.513,.02,21,2,0)
Entities are simply variable pointers.  The files which are eligible to be
"^DD",8989.51,8989.513,.02,21,3,0)
entities are listed in the PARAMETER ENTITY file.
"^DD",8989.51,8989.513,.02,"DT")
2970621
"^DD",8989.51,8989.514,0)
KEYWORD SUB-FIELD^^.01^1
"^DD",8989.51,8989.514,0,"DT")
3020819
"^DD",8989.51,8989.514,0,"IX","B",8989.514,.01)

"^DD",8989.51,8989.514,0,"NM","KEYWORD")

"^DD",8989.51,8989.514,0,"UP")
8989.51
"^DD",8989.51,8989.514,.01,0)
KEYWORD^MFX^^0;1^K:$L(X)>30!($L(X)<3) X I $D(^XTV(8989.51,"D",X)) D EN^DDIOL($C(7)_"  "_$$EZBLD^DIALOG(89895140),"","?0")
"^DD",8989.51,8989.514,.01,1,0)
^.1
"^DD",8989.51,8989.514,.01,1,1,0)
8989.514^B
"^DD",8989.51,8989.514,.01,1,1,1)
S ^XTV(8989.51,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.514,.01,1,1,2)
K ^XTV(8989.51,DA(1),4,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.514,.01,1,2,0)
8989.51^D
"^DD",8989.51,8989.514,.01,1,2,1)
S ^XTV(8989.51,"D",$E(X,1,30),DA(1),DA)=""
"^DD",8989.51,8989.514,.01,1,2,2)
K ^XTV(8989.51,"D",$E(X,1,30),DA(1),DA)
"^DD",8989.51,8989.514,.01,1,2,3)
KeyWord Lookup
"^DD",8989.51,8989.514,.01,1,2,"%D",0)
^^2^2^3020819^
"^DD",8989.51,8989.514,.01,1,2,"%D",1,0)
This cross reference allows the use of the keyword for look up of 
"^DD",8989.51,8989.514,.01,1,2,"%D",2,0)
parameters.
"^DD",8989.51,8989.514,.01,1,2,"DT")
3020819
"^DD",8989.51,8989.514,.01,3)
Answer must be 3-30 characters in length
"^DD",8989.51,8989.514,.01,21,0)
^^3^3^3021010^
"^DD",8989.51,8989.514,.01,21,1,0)
This field provides a list of KEYWORDS that can be used for lookup of 
"^DD",8989.51,8989.514,.01,21,2,0)
Parameter definitions.  It is suggested that each entry only have
"^DD",8989.51,8989.514,.01,21,3,0)
one word.
"^DD",8989.51,8989.514,.01,"DT")
3021010
"^DD",8989.52,8989.52,0)
FIELD^^10^5
"^DD",8989.52,8989.52,0,"DDA")
N
"^DD",8989.52,8989.52,0,"DT")
2970619
"^DD",8989.52,8989.52,0,"ID","WRITE")
N X S X=^(0) D EN^DDIOL($P(X,U,2),"","?36")
"^DD",8989.52,8989.52,0,"IX","B",8989.52,.01)

"^DD",8989.52,8989.52,0,"NM","PARAMETER TEMPLATE")

"^DD",8989.52,8989.52,0,"PT",19930.993,.01)

"^DD",8989.52,8989.52,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",8989.52,8989.52,.01,0)
NAME^RFX^^0;1^D VALID01^XPARDD2
"^DD",8989.52,8989.52,.01,1,0)
^.1
"^DD",8989.52,8989.52,.01,1,1,0)
8989.52^B
"^DD",8989.52,8989.52,.01,1,1,1)
S ^XTV(8989.52,"B",$E(X,1,30),DA)=""
"^DD",8989.52,8989.52,.01,1,1,2)
K ^XTV(8989.52,"B",$E(X,1,30),DA)
"^DD",8989.52,8989.52,.01,3)
Name must be 3-30 characters, unique, and namespaced.
"^DD",8989.52,8989.52,.01,21,0)
^^2^2^2980705^
"^DD",8989.52,8989.52,.01,21,1,0)
This field contains the name of the parameter template.  The template
"^DD",8989.52,8989.52,.01,21,2,0)
names must be namespaced.
"^DD",8989.52,8989.52,.01,"DT")
2970318
"^DD",8989.52,8989.52,.02,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",8989.52,8989.52,.02,3)
Answer must be 3-30 characters in length.
"^DD",8989.52,8989.52,.02,12)
Only files defined as variable pointers in PARAMETERS (8989.5) are allowed.
"^DD",8989.52,8989.52,.02,12.1)
S DIC("S")="I $$ALLOW^XPARDD1(Y)"
"^DD",8989.52,8989.52,.02,21,0)
^^1^1^2970606^^^
"^DD",8989.52,8989.52,.02,21,1,0)
This is the display name (non-namespaced) for the template.
"^DD",8989.52,8989.52,.02,"DT")
2970318
"^DD",8989.52,8989.52,.03,0)
USE ENTITY FROM^*P1'^DIC(^0;3^S DIC("S")="I $$ALLOW^XPARDD1(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",8989.52,8989.52,.03,3)
Choose the file which identifies the entity for which parameters will be entered.
"^DD",8989.52,8989.52,.03,12)
Only files defined as variable pointer in PARAMETERS (8989.5) are allowed.
"^DD",8989.52,8989.52,.03,12.1)
S DIC("S")="I $$ALLOW^XPARDD1(Y)"
"^DD",8989.52,8989.52,.03,21,0)
^^2^2^2970318^
"^DD",8989.52,8989.52,.03,21,1,0)
This identifies the file from which an entity will be selected. The
"^DD",8989.52,8989.52,.03,21,2,0)
parameters in this template will apply to that entity.
"^DD",8989.52,8989.52,.03,"DT")
2970318
"^DD",8989.52,8989.52,.04,0)
USE INSTANCE FROM^P8989.51'^XTV(8989.51,^0;4^Q
"^DD",8989.52,8989.52,.04,3)
The parameter identified here will be used to prompt for an instance which will be used for the multiple parameters in the template.
"^DD",8989.52,8989.52,.04,21,0)
^^3^3^2970619^
"^DD",8989.52,8989.52,.04,21,1,0)
This allows a parameter to be chosen which will be used to prompt for an
"^DD",8989.52,8989.52,.04,21,2,0)
instance value.  This instance value will be used for all other parameters
"^DD",8989.52,8989.52,.04,21,3,0)
in the template that are a multiple type.
"^DD",8989.52,8989.52,.04,"DT")
2970619
"^DD",8989.52,8989.52,10,0)
PARAMETERS^8989.521IA^^10;0
"^DD",8989.52,8989.52,10,21,0)
^^1^1^2970317^
"^DD",8989.52,8989.52,10,21,1,0)
This lists the parameters that make up the template.
"^DD",8989.52,8989.521,0)
PARAMETERS SUB-FIELD^^.02^2
"^DD",8989.52,8989.521,0,"DT")
2970317
"^DD",8989.52,8989.521,0,"ID","WRITE")
N X S X=^(0) I $P(X,U,2) D EN^DDIOL($P(^XTV(8989.51,+$P(X,U,2),0),U),"","?10")
"^DD",8989.52,8989.521,0,"IX","B",8989.521,.01)

"^DD",8989.52,8989.521,0,"NM","PARAMETERS")

"^DD",8989.52,8989.521,0,"UP")
8989.52
"^DD",8989.52,8989.521,.01,0)
SEQUENCE^MNJ7,3^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."4N.N) X
"^DD",8989.52,8989.521,.01,1,0)
^.1
"^DD",8989.52,8989.521,.01,1,1,0)
8989.521^B
"^DD",8989.52,8989.521,.01,1,1,1)
S ^XTV(8989.52,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",8989.52,8989.521,.01,1,1,2)
K ^XTV(8989.52,DA(1),10,"B",$E(X,1,30),DA)
"^DD",8989.52,8989.521,.01,3)
Type a Number between 1 and 999, 3 Decimal Digits
"^DD",8989.52,8989.521,.01,21,0)
^^2^2^2970317^
"^DD",8989.52,8989.521,.01,21,1,0)
This is the sequence in which the value(s) for this parameter should be
"^DD",8989.52,8989.521,.01,21,2,0)
prompted.
"^DD",8989.52,8989.521,.01,"DT")
2970317
"^DD",8989.52,8989.521,.02,0)
PARAMETER^P8989.51'^XTV(8989.51,^0;2^Q
"^DD",8989.52,8989.521,.02,3)
Enter the parameter that should be prompted at this sequence number.
"^DD",8989.52,8989.521,.02,21,0)
^^2^2^2970317^
"^DD",8989.52,8989.521,.02,21,1,0)
This points to the parameter that should be prompted for at this sequence
"^DD",8989.52,8989.521,.02,21,2,0)
in the template.
"^DD",8989.52,8989.521,.02,"DT")
2970317
"^DD",19941.2,19941.2,0)
FIELD^^2^3
"^DD",19941.2,19941.2,0,"DT")
3021009
"^DD",19941.2,19941.2,0,"ID",1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^VA(200,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(200,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",19941.2,19941.2,0,"IX","B",19941.2,.01)

"^DD",19941.2,19941.2,0,"NM","CIA AUTHENTICATION")

"^DD",19941.2,19941.2,0,"VRPK")
CIAN
"^DD",19941.2,19941.2,.01,0)
SID^RF^^0;1^K:$L(X)>200!($L(X)<3) X
"^DD",19941.2,19941.2,.01,1,0)
^.1
"^DD",19941.2,19941.2,.01,1,1,0)
19941.2^B
"^DD",19941.2,19941.2,.01,1,1,1)
S ^CIANB(19941.2,"B",$E(X,1,30),DA)=""
"^DD",19941.2,19941.2,.01,1,1,2)
K ^CIANB(19941.2,"B",$E(X,1,30),DA)
"^DD",19941.2,19941.2,.01,3)
Answer must be 3-200 characters in length.
"^DD",19941.2,19941.2,.01,"DT")
3021009
"^DD",19941.2,19941.2,1,0)
USER^P200'^VA(200,^0;2^Q
"^DD",19941.2,19941.2,1,"DT")
3021009
"^DD",19941.2,19941.2,2,0)
CREATED^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.2,19941.2,2,"DT")
3021009
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DD",19941.22,19941.22,0)
FIELD^^2^4
"^DD",19941.22,19941.22,0,"DT")
3031102
"^DD",19941.22,19941.22,0,"IX","B",19941.22,.01)

"^DD",19941.22,19941.22,0,"NM","CIA LISTENER")

"^DD",19941.22,19941.22,0,"VRPK")
CIAN
"^DD",19941.22,19941.22,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.22,19941.22,.01,1,0)
^.1
"^DD",19941.22,19941.22,.01,1,1,0)
19941.22^B
"^DD",19941.22,19941.22,.01,1,1,1)
S ^CIANB(19941.22,"B",$E(X,1,30),DA)=""
"^DD",19941.22,19941.22,.01,1,1,2)
K ^CIANB(19941.22,"B",$E(X,1,30),DA)
"^DD",19941.22,19941.22,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",19941.22,19941.22,1,0)
PORT^NJ5,0^^0;2^K:+X'=X!(X>32767)!(X<1000)!(X?.E1"."1N.N) X
"^DD",19941.22,19941.22,1,3)
Enter TCP port # for this listener.
"^DD",19941.22,19941.22,1,"DT")
3030113
"^DD",19941.22,19941.22,1.5,0)
UCI^FX^^0;4^K:0[$$UCICHECK^%ZOSV(X) X
"^DD",19941.22,19941.22,1.5,3)
Enter UCI where listener will start.
"^DD",19941.22,19941.22,1.5,"DT")
3031210
"^DD",19941.22,19941.22,2,0)
DISABLE^S^0:NO;1:YES;^0;3^Q
"^DD",19941.22,19941.22,2,"DT")
3030113
"^DD",19941.23,19941.23,0)
FIELD^^10^5
"^DD",19941.23,19941.23,0,"DT")
3030611
"^DD",19941.23,19941.23,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",19941.23,19941.23,0,"IX","B",19941.23,.01)

"^DD",19941.23,19941.23,0,"IX","C",19941.23,1)

"^DD",19941.23,19941.23,0,"IX","D",19941.23,2)

"^DD",19941.23,19941.23,0,"IX","E",19941.23,3)

"^DD",19941.23,19941.23,0,"NM","CIA EVENT LOG")

"^DD",19941.23,19941.23,0,"VRPK")
CIAN
"^DD",19941.23,19941.23,.01,0)
TIMESTAMP^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.23,19941.23,.01,1,0)
^.1
"^DD",19941.23,19941.23,.01,1,1,0)
19941.23^B
"^DD",19941.23,19941.23,.01,1,1,1)
S ^CIANB(19941.23,"B",$E(X,1,30),DA)=""
"^DD",19941.23,19941.23,.01,1,1,2)
K ^CIANB(19941.23,"B",$E(X,1,30),DA)
"^DD",19941.23,19941.23,.01,3)
Time event was logged.
"^DD",19941.23,19941.23,.01,"DT")
3030611
"^DD",19941.23,19941.23,1,0)
EVENT NAME^RF^^0;2^K:$L(X)>100!($L(X)<1) X
"^DD",19941.23,19941.23,1,1,0)
^.1
"^DD",19941.23,19941.23,1,1,1,0)
19941.23^C
"^DD",19941.23,19941.23,1,1,1,1)
S ^CIANB(19941.23,"C",$E(X,1,30),DA)=""
"^DD",19941.23,19941.23,1,1,1,2)
K ^CIANB(19941.23,"C",$E(X,1,30),DA)
"^DD",19941.23,19941.23,1,1,1,"DT")
3030611
"^DD",19941.23,19941.23,1,3)
Name of event.
"^DD",19941.23,19941.23,1,"DT")
3030611
"^DD",19941.23,19941.23,2,0)
USER^P200'^VA(200,^0;3^Q
"^DD",19941.23,19941.23,2,1,0)
^.1
"^DD",19941.23,19941.23,2,1,1,0)
19941.23^D
"^DD",19941.23,19941.23,2,1,1,1)
S ^CIANB(19941.23,"D",$E(X,1,30),DA)=""
"^DD",19941.23,19941.23,2,1,1,2)
K ^CIANB(19941.23,"D",$E(X,1,30),DA)
"^DD",19941.23,19941.23,2,1,1,"DT")
3030611
"^DD",19941.23,19941.23,2,3)
User originating the event.
"^DD",19941.23,19941.23,2,"DT")
3030611
"^DD",19941.23,19941.23,3,0)
SESSION^NJ15,0^^0;4^K:+X'=X!(X>999999999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.23,19941.23,3,1,0)
^.1
"^DD",19941.23,19941.23,3,1,1,0)
19941.23^E
"^DD",19941.23,19941.23,3,1,1,1)
S ^CIANB(19941.23,"E",$E(X,1,30),DA)=""
"^DD",19941.23,19941.23,3,1,1,2)
K ^CIANB(19941.23,"E",$E(X,1,30),DA)
"^DD",19941.23,19941.23,3,1,1,"DT")
3030611
"^DD",19941.23,19941.23,3,3)
Session originating the event.
"^DD",19941.23,19941.23,3,"DT")
3030611
"^DD",19941.23,19941.23,10,0)
EVENT STUB^19941.232^^10;0
"^DD",19941.23,19941.232,0)
EVENT STUB SUB-FIELD^^.01^1
"^DD",19941.23,19941.232,0,"DT")
3030611
"^DD",19941.23,19941.232,0,"NM","EVENT STUB")

"^DD",19941.23,19941.232,0,"UP")
19941.23
"^DD",19941.23,19941.232,.01,0)
EVENT STUB^WL^^0;1^Q
"^DD",19941.23,19941.232,.01,3)
Data associated with event.
"^DD",19941.23,19941.232,.01,"DT")
3030611
"^DD",19941.24,19941.24,0)
FIELD^^10^7
"^DD",19941.24,19941.24,0,"DDA")
N
"^DD",19941.24,19941.24,0,"DT")
3080104
"^DD",19941.24,19941.24,0,"IX","B",19941.24,.01)

"^DD",19941.24,19941.24,0,"IX","BDIV",19941.24,5)

"^DD",19941.24,19941.24,0,"IX","BLOGIN",19941.24,3)

"^DD",19941.24,19941.24,0,"IX","BLOGOUT",19941.24,4)

"^DD",19941.24,19941.24,0,"IX","BUSER",19941.24,1)

"^DD",19941.24,19941.24,0,"IX","BWKID",19941.24,2)

"^DD",19941.24,19941.24,0,"NM","CIA ACTIVITY LOG")

"^DD",19941.24,19941.24,0,"VRPK")
CIAN
"^DD",19941.24,19941.24,.01,0)
SESSION ID^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.24,19941.24,.01,1,0)
^.1
"^DD",19941.24,19941.24,.01,1,1,0)
19941.24^B
"^DD",19941.24,19941.24,.01,1,1,1)
S ^CIANB(19941.24,"B",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,.01,1,1,2)
K ^CIANB(19941.24,"B",$E(X,1,30),DA)
"^DD",19941.24,19941.24,.01,3)
This is the unique identifier for the session.
"^DD",19941.24,19941.24,.01,"DT")
3080103
"^DD",19941.24,19941.24,1,0)
USER^P200'^VA(200,^0;2^Q
"^DD",19941.24,19941.24,1,1,0)
^.1
"^DD",19941.24,19941.24,1,1,1,0)
19941.24^BUSER
"^DD",19941.24,19941.24,1,1,1,1)
S ^CIANB(19941.24,"BUSER",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,1,1,1,2)
K ^CIANB(19941.24,"BUSER",$E(X,1,30),DA)
"^DD",19941.24,19941.24,1,1,1,"DT")
3080103
"^DD",19941.24,19941.24,1,3)
User associated with this session.
"^DD",19941.24,19941.24,1,"DT")
3080103
"^DD",19941.24,19941.24,2,0)
WORKSTATION ID^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",19941.24,19941.24,2,1,0)
^.1
"^DD",19941.24,19941.24,2,1,1,0)
19941.24^BWKID
"^DD",19941.24,19941.24,2,1,1,1)
S ^CIANB(19941.24,"BWKID",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,2,1,1,2)
K ^CIANB(19941.24,"BWKID",$E(X,1,30),DA)
"^DD",19941.24,19941.24,2,1,1,"DT")
3080103
"^DD",19941.24,19941.24,2,3)
Name of the workstation originating this session.
"^DD",19941.24,19941.24,2,"DT")
3080103
"^DD",19941.24,19941.24,3,0)
LOGIN TIME^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.24,19941.24,3,1,0)
^.1
"^DD",19941.24,19941.24,3,1,1,0)
19941.24^BLOGIN
"^DD",19941.24,19941.24,3,1,1,1)
S ^CIANB(19941.24,"BLOGIN",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,3,1,1,2)
K ^CIANB(19941.24,"BLOGIN",$E(X,1,30),DA)
"^DD",19941.24,19941.24,3,1,1,"DT")
3080103
"^DD",19941.24,19941.24,3,3)
Time of initial login.
"^DD",19941.24,19941.24,3,"DT")
3080103
"^DD",19941.24,19941.24,4,0)
LOGOUT TIME^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.24,19941.24,4,1,0)
^.1
"^DD",19941.24,19941.24,4,1,1,0)
19941.24^BLOGOUT
"^DD",19941.24,19941.24,4,1,1,1)
S ^CIANB(19941.24,"BLOGOUT",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,4,1,1,2)
K ^CIANB(19941.24,"BLOGOUT",$E(X,1,30),DA)
"^DD",19941.24,19941.24,4,1,1,"DT")
3080103
"^DD",19941.24,19941.24,4,3)
Time of final logout.
"^DD",19941.24,19941.24,4,"DT")
3080103
"^DD",19941.24,19941.24,5,0)
DIVISION^P4'^DIC(4,^0;6^Q
"^DD",19941.24,19941.24,5,1,0)
^.1
"^DD",19941.24,19941.24,5,1,1,0)
19941.24^BDIV
"^DD",19941.24,19941.24,5,1,1,1)
S ^CIANB(19941.24,"BDIV",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,5,1,1,2)
K ^CIANB(19941.24,"BDIV",$E(X,1,30),DA)
"^DD",19941.24,19941.24,5,1,1,"DT")
3080104
"^DD",19941.24,19941.24,5,3)
Division user has logged into.
"^DD",19941.24,19941.24,5,"DT")
3080104
"^DD",19941.24,19941.24,10,0)
ACTIVITY^19941.241D^^10;0
"^DD",19941.24,19941.241,0)
ACTIVITY SUB-FIELD^^10^4
"^DD",19941.24,19941.241,0,"DT")
3080103
"^DD",19941.24,19941.241,0,"IX","B",19941.241,.01)

"^DD",19941.24,19941.241,0,"NM","ACTIVITY")

"^DD",19941.24,19941.241,0,"UP")
19941.24
"^DD",19941.24,19941.241,.01,0)
DATE/TIME^MD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.24,19941.241,.01,1,0)
^.1
"^DD",19941.24,19941.241,.01,1,1,0)
19941.241^B
"^DD",19941.24,19941.241,.01,1,1,1)
S ^CIANB(19941.24,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",19941.24,19941.241,.01,1,1,2)
K ^CIANB(19941.24,DA(1),10,"B",$E(X,1,30),DA)
"^DD",19941.24,19941.241,.01,"DT")
3080103
"^DD",19941.24,19941.241,1,0)
TYPE^S^1:RPC;2:EVENT;^0;2^Q
"^DD",19941.24,19941.241,1,"DT")
3080103
"^DD",19941.24,19941.241,2,0)
NAME^F^^0;3^K:$L(X)>150!($L(X)<1) X
"^DD",19941.24,19941.241,2,3)
Answer must be 1-150 characters in length.
"^DD",19941.24,19941.241,2,"DT")
3080103
"^DD",19941.24,19941.241,10,0)
LOG^19941.242^^10;0
"^DD",19941.24,19941.242,0)
LOG SUB-FIELD^^.01^1
"^DD",19941.24,19941.242,0,"DT")
3080103
"^DD",19941.24,19941.242,0,"NM","LOG")

"^DD",19941.24,19941.242,0,"UP")
19941.241
"^DD",19941.24,19941.242,.01,0)
LOG^WL^^0;1^Q
"^DD",19941.24,19941.242,.01,"DT")
3080103
"^DIC",8989.51,8989.51,0)
PARAMETER DEFINITION^8989.51
"^DIC",8989.51,8989.51,0,"GL")
^XTV(8989.51,
"^DIC",8989.51,8989.51,"%D",0)
^^3^3^2980920^
"^DIC",8989.51,8989.51,"%D",1,0)
This file contains the characteristics of parameters.  Entries in this
"^DIC",8989.51,8989.51,"%D",2,0)
file must be namespaced and they are exported by the package which owns
"^DIC",8989.51,8989.51,"%D",3,0)
them.
"^DIC",8989.51,"B","PARAMETER DEFINITION",8989.51)

"^DIC",8989.52,8989.52,0)
PARAMETER TEMPLATE^8989.52
"^DIC",8989.52,8989.52,0,"GL")
^XTV(8989.52,
"^DIC",8989.52,8989.52,"%",0)
^1.005^^0
"^DIC",8989.52,8989.52,"%D",0)
^^4^4^2980920^
"^DIC",8989.52,8989.52,"%D",1,0)
This file contains templates which allow developers to group entries in
"^DIC",8989.52,8989.52,"%D",2,0)
the PARAMETER DEFINITION file (#8989.51) together for editing.  Entries in
"^DIC",8989.52,8989.52,"%D",3,0)
this file must be namespaced and they are exported by the package which
"^DIC",8989.52,8989.52,"%D",4,0)
owns them.
"^DIC",8989.52,"B","PARAMETER TEMPLATE",8989.52)

"^DIC",19941.2,19941.2,0)
CIA AUTHENTICATION^19941.2
"^DIC",19941.2,19941.2,0,"GL")
^CIANB(19941.2,
"^DIC",19941.2,"B","CIA AUTHENTICATION",19941.2)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

"^DIC",19941.22,19941.22,0)
CIA LISTENER^19941.22
"^DIC",19941.22,19941.22,0,"GL")
^CIANB(19941.22,
"^DIC",19941.22,"B","CIA LISTENER",19941.22)

"^DIC",19941.23,19941.23,0)
CIA EVENT LOG^19941.23
"^DIC",19941.23,19941.23,0,"GL")
^CIANB(19941.23,
"^DIC",19941.23,"B","CIA EVENT LOG",19941.23)

"^DIC",19941.24,19941.24,0)
CIA ACTIVITY LOG^19941.24
"^DIC",19941.24,19941.24,0,"GL")
^CIANB(19941.24,
"^DIC",19941.24,19941.24,"%",0)
^1.005^^0
"^DIC",19941.24,19941.24,"%D",0)
^^1^1^3080103.095644
"^DIC",19941.24,19941.24,"%D",1,0)
This file logs session activities such as RPC calls and remote events.
"^DIC",19941.24,"B","CIA ACTIVITY LOG",19941.24)

**END**
**END**
